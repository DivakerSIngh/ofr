@model OneFineRateApp.ViewModels.PropertyImageMapViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutProperty.cshtml";
}
<link href="~/Content/prettyPhoto.css" rel="stylesheet" />
<div id="tempMessageError field-validation-error">@ViewBag.Error</div>
<div id="tempMessageSuccess label-success">@ViewBag.Message</div>
<script src="~/Scripts/jquery.prettyPhoto.js"></script>
<style>
    .imgResponsive {
        width: auto;
        max-width: 100%;
        height: 150px;
    }
</style>
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                Photos
            </h4>
        </div>
        <div class="panel-body">
            <div class="row">

                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" ><a href="#home" aria-controls="home" role="tab" style="background-color:#bcb7b7; margin-left: 17px;" data-toggle="tab">Edit Photos</a></li>
                    <li role="presentation" ><a href="#profile" aria-controls="profile" role="tab" style="background-color:#bcb7b7; margin-left:10px;" data-toggle="tab">Upload Photos</a></li>
                    <li class="red" style="line-height:14px; font-size:11px; padding-left:15px;">
                        *Recommended High Definition 1366x1024px<br>
                        *Minimum recommended dimension:800x600px<br>
                        *Supported file formats: jpg, jpeg, gif and png <br><br>
                    </li>
                    <li style="padding-left:10px;">
                        <ul style="display:inline-flex;  list-style-type:none">
                            <li>High Res </li>
                            <li><span class="green-box1 pull-right"></span> </li>

                            <li style="padding-left:5px; padding-right:5px;">|</li>
                            <li>Low Res </li>
                            <li><span class="red-box1 pull-right"></span></li>
                        </ul>
                    </li>
                </ul>
            </div>
                <!-- Tab panes -->
                <div class="tab-content">

                    @if (Session["PropId"] != null)
                    {
                        Html.RenderAction("MappedPropertyImages");
                    }

                    <div role="tabpanel" class="tab-pane" id="profile">
                        <div class="jumbotron">
                            @using (Html.BeginForm("Index", "PropertyImages", FormMethod.Post, new { @class = "dropzone", id = "dropzoneForm", enctype = "multipart/form-data" }))
                            {
                                <div class="fallback col-md-12 padding10">
                                    <label>Select your image for upload</label>
                                    <input type="file" multiple id="uploadedFiles" name="file">
                                </div>
                            }
                            <div class="col-md-12 ">
                                <div class="margintop10">
                                    <input id="btnFilesSubmit" type="submit" class="btn btn-primary  pull-left" value="START">
                                    <input id="btnFilesCancel" type="button" class="btn btn-danger  marginleft5" value="CANCEL">
                                </div>
                            </div>
                        </div>
                        <div id="divUnmappedReload" class="panel-body">
                            @if (Session["PropId"] != null)
                            {
                                Html.RenderAction("UnmappedPropertyImages");
                            }
                        </div>
                    </div>
                    <!--tab two completed-->
                </div>
            </div>
        </div>

        <!--<div class="col-xs-12">
        <div class="subheadcolor"><h4>Full Services Spa</h4></div>
          <hr/>
          </div> -->
        <!-- Panel 1 div END  -->
        <!-- Panel group div END  -->
    </div>

<style type="text/css">
    .dz-max-files-reached .dz-error-message {
        background-color: red;
    }
    .panel-heading .accordion-toggle:after{color:#fff !important;}
</style>



<script>

    $(function () {

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            // save the latest tab; use cookies if you like 'em better:
            localStorage.setItem('lastTab', $(this).attr('href'));
        });

        // go to the latest tab, if it exists:
        var lastTab = localStorage.getItem('lastTab');
        if (lastTab) {
            $('a[href="' + lastTab + '"]').tab('show');
        }
        else
        {
            $('a[href="#home"]').tab('show');
        }

        // for bootstrap 3 use 'shown.bs.tab', for bootstrap 2 use 'shown' in the next line
        $('#accordion').on('shown.bs.collapse', function (e) {

            var active = $("#accordion .in").attr('id');

            localStorage.setItem('lastAccordian', active);
        });

        // go to the latest tab, if it exists:
        var lastTab = localStorage.getItem('lastAccordian');
        if (lastTab) {
            //remove default collapse settings
            $("#accordion .collapse").removeClass('in');
            //$("#accordion .collapse").collapse('hide');
            //show the last visible group
            $("#" + lastTab).collapse("show");
        }


        $("a[rel^='prettyPhoto[galleryHotel]']").prettyPhoto({
            social_tools: false,
            deeplinking: false,
            allow_resize: true
        });
        $("a[rel^='prettyPhoto[galleryRoom]']").prettyPhoto({
            social_tools: false,
            deeplinking: false,
            allow_resize: true
        });

        $("a[rel^='prettyPhoto[galleryUnmapped]']").prettyPhoto({
            social_tools: false,
            deeplinking: false,
            allow_resize: true
        });

        function toggleChevron(e) {
            $(e.target)
                .prev('.panel-heading')
                .find("i.indicator")
                .toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
        }

        $('#accordion').on('hidden.bs.collapse', toggleChevron);
        $('#accordion').on('shown.bs.collapse', toggleChevron);


        $('.ddlCategory').change(function () {

            var categoryId = $(this).val();
            var respectiveSubCategoryDropdown = $(this).attr('refId');

            $('#s2id_' + respectiveSubCategoryDropdown).find('.select2-chosen').val('').text('Select Subcategory');

            if (categoryId) {

                $.get("@Url.Action("GetSubCategoryList", "PropertyImages")?categoryId=" + categoryId, function (subCategoryList) {

                    $("#" + respectiveSubCategoryDropdown).html("");

                    try {
                        $.each(subCategoryList, function (i, subCategory) {

                            $("#" + respectiveSubCategoryDropdown).append($('<option></option>').val(subCategory.iPhotoCatId).html(subCategory.sPhotoCatName));
                        });
                    }
                    catch (e) {

                        alert('Error in data loading !')
                    }

                    $("#" + respectiveSubCategoryDropdown).prepend($('<option></option>').val('').html('Select Subcategory').prop("selected", "selected"));

                });
            }

        });

        $('.deletePhotoMap').click(function (e) {

            e.preventDefault();
            var cnfrm = confirm('Are you sure you want to delete this photo ?')
            if (cnfrm === true) {
                var href = $(this).attr('href');
                window.location.href = href;
                //$.post(href, function (response) { });
                //window.location.reload();
            }
            else {
                return false;
            }
        });

        $('.mappedHotelForm').on("submit", function (event) {
            event.preventDefault()
            if ($(this).valid()) {
                var mappedHotelPhotoModel = {
                    iPropId: $(this).find('input[name="item.iPropId"]').val(),
                    iPhotoId: $(this).find('input[name="item.iPhotoId"]').val(),
                    iPhotoCatId: $(this).find('[name="item.iPhotoCatId"] option:selected').val(),
                    iPhotoSubCatId: $(this).find('[name="item.iPhotoSubCatId"] option:selected').val(),
                    bIsPrimaryH: $(this).find('input[name="item.bIsPrimaryH"]:checked').val(),
                    bIsPrimaryR: $(this).find('input[name="item.bIsPrimaryR"]').val(),
                    bIsHighRes: $(this).find('input[name="item.bIsHighRes"]').val(),
                    sImgUrl: $(this).find('input[name="item.sImgUrl"]').val(),
                    dtActionDate: $(this).find('input[name="item.dtActionDate"]').val(),
                    iActionBy: $(this).find('input[name="item.iActionBy"]').val(),
                    bIsMapped: $(this).find('input[name="item.bIsMapped"]').val(),
                    iResolutionW: $(this).find('input[name="item.iResolutionW"]').val(),
                    iResolutionH: $(this).find('input[name="item.iResolutionH"]').val(),
                }

                $.post($(this).attr('action'), mappedHotelPhotoModel).done(function (data) {
                   
                    if (data.status == true) {
                        window.location.reload();
                    }
                    else
                    {
                        toastr.error(data.msg)
                    }
                });
            }
        });


        $('.mappedRoomTypeForm').on("submit", function (event) {
            event.preventDefault()

            if ($(this).valid()) {

                var mappedRoomTypePhotoModel = {
                    iPropId: $(this).find('input[name="item.iPropId"]').val(),
                    iPhotoId: $(this).find('input[name="item.iPhotoId"]').val(),
                    iPhotoCatId: $(this).find('[name="item.iPhotoCatId"] option:selected').val(),
                    iPhotoSubCatId: $(this).find('[name="item.iPhotoSubCatId"] option:selected').val(),
                    bIsPrimaryH: $(this).find('input[name="item.bIsPrimaryH"]').val(),
                    bIsPrimaryR: $(this).find('input[name="item.bIsPrimaryR"]:checked').val(),
                    bIsHighRes: $(this).find('input[name="item.bIsHighRes"]').val(),
                    sImgUrl: $(this).find('input[name="item.sImgUrl"]').val(),
                    dtActionDate: $(this).find('input[name="item.dtActionDate"]').val(),
                    iActionBy: $(this).find('input[name="item.iActionBy"]').val(),
                    bIsMapped: $(this).find('input[name="item.bIsMapped"]').val(),
                    iResolutionW: $(this).find('input[name="item.iResolutionW"]').val(),
                    iResolutionH: $(this).find('input[name="item.iResolutionH"]').val(),
                }

                $.post($(this).attr('action'), mappedRoomTypePhotoModel).done(function (data) {

                    if (data.status == true) {
                        window.location.reload();
                    } else {
                        toster.error(data.msg)
                    }
                });
            }
        });
        
    });

</script>

@section ValidationScript
{
    @System.Web.Optimization.Scripts.Render("~/bundles/validation")
}

@section DropZoneScripts{

    @System.Web.Optimization.Scripts.Render("~/bundles/dropzonescripts")

    <script type="text/javascript">

        $(function () {

            try {
                Dropzone.options.dropzoneForm = {
                    maxFiles: 10,
                    autoProcessQueue: false,
                    paramName: 'photos',
                    acceptedFiles: '.jpg,.jpeg,.png,.bmp',
                    addRemoveLinks: true,
                    dictCancelUpload: "",
                    parallelUploads: 1,
                    init: function () {

                        var totalFiles = 0, completeFiles = 0;
                        var rejectedFile = false;
                        var myDropzone = this;

                        myDropzone.on("maxfilesexceeded", function (data) {
                            alert('Maximum 10 files allowed at a time');
                        });

                        myDropzone.on("error", function (file) {
                            if (!file.accepted) {
                                rejectedFile = true;
                            }
                        });

                        //myDropzone.on('completemultiple', function () {
                        //    location.reload();
                        //});

                        //myDropzone.on("addedfile", function (file) {

                        //    totalFiles += 1;
                        //});
                        //myDropzone.on("removedfile", function (file) {
                        //    totalFiles -= 1;
                        //});

                        //myDropzone.on("complete", function (file, msg) {
                        //    completeFiles += 1;
                        //    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0 && completeFiles === totalFiles) {
                        //        window.location.reload();
                        //    }
                        //});

                        var submitButton = document.querySelector("#btnFilesSubmit");

                        var cancelButton = document.querySelector("#btnFilesCancel");

                        submitButton.addEventListener("click", function () {
                            if (rejectedFile) {
                                if (confirm('Warning , There are some non-Images files which will not be uploaded ! Continue upload ?')) {
                                    myDropzone.processQueue();
                                }
                            }
                            else {

                                myDropzone.processQueue();
                            }

                        });
                        myDropzone.on("success", function () {
                            myDropzone.options.autoProcessQueue = true;
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                location.reload();
                            }
                        });

                        //submitButton.addEventListener("click", function () {

                        //    if (rejectedFile) {
                        //        if (confirm('Warning , There are some non-Images files which will not be uploaded ! Continue upload ?')) {
                        //            myDropzone.options.autoProcessQueue = true;
                        //            $.when(myDropzone.processQueue()).then(function () { window.location.reload(); })
                        //        }
                        //    }
                        //    else {

                        //        myDropzone.options.autoProcessQueue = true;
                        //        $.when(myDropzone.processQueue()).then(function () { window.location.reload(); })
                        //    }

                        //});

                        cancelButton.addEventListener("click", function () {
                            if (confirm('Are you sure you want to remove all the photos from dropped area !')) {
                                myDropzone.removeAllFiles();
                            }
                        });

                        myDropzone.on("thumbnail", function (img) {

                            if (img.width < 800 || img.height < 600) {

                                $(img.previewElement).find('.dz-error-mark').css('opacity', 1).css('background-image', 'url("")').css('color', 'yellow').addClass('glyphicon glyphicon-warning-sign')
                                $(img.previewElement).find('.dz-error-message').find('span').html('Warning ! Dimension less than 800 x 600 px');
                                // $(img.previewElement).find('div.dz-error-mark').css('opacity', 1).css('cursor', 'pointer').click(function () { myDropzone.removeFile(img); });
                                $(img.previewElement).hover(function () { $(img.previewElement).find('.dz-error-message').css('opacity', 1); }, function () { $(img.previewElement).find('.dz-error-message').css('opacity', 0); });
                            }
                            img.acceptDimensions();
                        });

                    },
                    accept: function (file, done) {

                        file.acceptDimensions = done;
                        //file.rejectDimensions = function () { done("Image too small, Minimum dimension should be of 800 * 600 px"); rejectedFile = true; };
                    }
                };
            } catch (e) {
                alert('Oops something went wrong, Please refresh the page')
            }
        });
    </script>
}