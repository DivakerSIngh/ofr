@model OneFineRateBLL.Entities.etblRankManagement

<script src="~/js/Jquery1.10.3.js"></script>

<script type="text/javascript">


    $(document).ready(function () {
        calendar();

        $('#frmRank').submit(function (e) {

            e.preventDefault();
            $.post($(this).attr('action'), $(this).serialize()).done(function (data) {
                console.log(data)

                if (data.st == 0) {
                    toastr.info(data.msg)
                }
                else if (data.st == 1) {
                    toastr.info(data.msg)
                    $('.close').click();
                    setTimeout(function () {
                        window.location = '../RankManagement';
                    }, 1000)
                }
            });
        });



        $('#chkYes').click(function () {

            $('#chkNo').prop('checked', false);
            $("#NewRank").prop('disabled', true);
            $('#NewRank').val(null);

        })

        $('#chkNo').click(function () {

            var checkBoxState = $(this).prop('checked');
            if (checkBoxState == true) {
                $("#NewRank").prop('disabled', false);
            }
            else {
                $("#NewRank").prop('disabled', true);

            }
            $('#NewRank').val(null);
            $('#chkYes').prop('checked', false);
        });

        $('#btnCheck').click(function () {
            if ($('#iPropId').val() != '' && $('#ValidDateFrom').val() != '') {
                $.ajax({
                    type: "post",
                    url: "/RankManagement/GetRank",
                    data: { CheckInDate: $('#ValidDateFrom').val(), ProbId: $('#iPropId').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        $('label[for="iOldRank"]').html(data);
                        $('#iOldRank').val(data);
                    }
                });
            }
            else {
                toastr.info('Please select property & start date')
            }
        });

        $('#iPropId').change(function () {
                $('label[for="iOldRank"]').html("0");
                $('#iOldRank').val("0");
        });
    });

    function calendar() {
        var d = new Date();

        var ThreeYearDate = new Date();
        var a = ThreeYearDate.getFullYear();
        ThreeYearDate.setFullYear(a + 3);

        $('#ValidDateFrom').datepicker({
            startDate: d,
            minDate: d,
            maxDate: ThreeYearDate,
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            onClose: function (selectedDate) {
                $("#ValidDateTo").datepicker("option", "minDate", selectedDate);
            }
        });
        $('#ValidDateTo').datepicker({
            startDate: d,
            minDate: d,
            maxDate: ThreeYearDate,
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true//,
        });

        $("#ValidDateFrom").each(function () {
            var selecteddate = $("#ValidDateFrom").datepicker("getDate");
            var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
            if (dateString == "01/01/2001") {
                $("#ValidDateFrom").datepicker('setDate', new Date());
            }


        });
        $("#ValidDateTo").each(function () {
            var selecteddate = $("#ValidDateTo").datepicker("getDate");
            var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
            if (dateString == "01/01/2001") {
                $("#ValidDateTo").datepicker('setDate', new Date());
            }
        });

        $("#ui-datepicker-div").hide();

    }
    function minmax(value, min, max) {
        if (parseInt(value) < min || isNaN(value))
            return 0;
        else if (parseInt(value) > max) {
            $('#NewRank').val(null);
            return null;
        }
        else {
            $('#NewRank').val(value);
            return value;
        }
    }

</script>

@using (Html.BeginForm("Save", "RankManagement", FormMethod.Post, new { ReturnUrl = ViewBag.ReturnUrl, id = "frmRank", role = "form" }))
{
    @Html.HiddenFor(m => m.Mode)
    @Html.HiddenFor(m => m.iID)
    @Html.HiddenFor(m => m.dtActionDate)
    @Html.HiddenFor(m => m.iActionBy)
    @Html.HiddenFor(m => m.cStatus)
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Rank Management</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-2">
                        <label>   Property </label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.iPropId, new SelectList(OneFineRateBLL.BL_tblRankManagement.GetPropertyList(), "Id", "Name"), "", new { @class = "form-control", required = "true", name = "PropId" })
                    </div>
                </div>

                <div class="row margintop10">
                    <div class="col-md-2 ">
                        <label>   Start Date </label>
                    </div>
                    <div class="col-md-2 width22">
                        @Html.TextBoxFor(m => m.dtValidFrom, new { Value = Model.dtValidFrom, type = "text", @class = "form-control ", required = "true", name = "ValidDateFrom", onkeyup = "this.value=''", id = "ValidDateFrom" })
                    </div>
                    <div class="col-md-2">
                        <label>End Date </label>
                    </div>
                    <div class="col-md-2 width22">
                        @Html.TextBoxFor(m => m.dtValidTo, new { Value = Model.dtValidTo, type = "text", @class = "form-control ", required = "true", name = "ValidDateTo", onkeyup = "this.value=''", id = "ValidDateTo" })
                    </div>
                    <div class="col-md-1 ">
                        <button type="button" id="btnCheck" class="btn btn-primary">Show Rank</button>
                    </div>
                </div>
                <div class="row margintop10">
                    <div class="col-md-2 ">
                        
                    </div>
                    <div class="col-md-6">
                        @Html.CheckBoxFor(m => m.IsRateDisparity) Rate Disparity <span></span>&nbsp;
                    </div>
                  
                </div>

                <div class="row margintop10">
                    <div class="col-md-2">
                        &nbsp;
                    </div>
                    <div class="col-md-6">
                        @Html.CheckBoxFor(m => m.IsSponsoredYes, new { @class = "chkIsSponsored", id = "chkYes" }) <span>Sponsored</span>&nbsp;
                        @Html.CheckBoxFor(m => m.IsSponsoredNo, new { @class = "chkIsSponsored", id = "chkNo" }) <span>Rank</span>

                    </div>
                </div>


                <div class="row margintop10">
                    <div class="col-md-2">
                        <label> New Rank </label>
                    </div>
                    <div class="col-md-3">
                        @if (Model.IsSponsoredNo)
                        {
                            @Html.TextBoxFor(m => m.iNewRank, new { id = "NewRank", onkeyup = "this.value = minmax(this.value, 0, 999)", @class = "form-control", required = "true" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.iNewRank, new { disabled = "disabled", Value = "", id = "NewRank", onkeyup = "this.value = minmax(this.value, 0, 999)", @class = "form-control", required = "true" })
                        }

                    </div>
                    <div class="col-md-4">
                        <label>   System Generated Rank </label>
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(m => m.iOldRank, "0")
                        @Html.HiddenFor(m => m.iOldRank)
                        @*@Html.DisplayFor(m => m.iOldRank)*@
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                @if (Model.cStatus == "I")
                {

                    <input name="" type="button" onclick="window.location = '../RankManagement'" class="btn btn-danger" value="Cancel">
                }
                else
                {
                    <button type="submit" id="btnSubmit" class="btn btn-primary">Save</button>
                    <input name="" type="button" onclick="window.location = '../RankManagement'" class="btn btn-danger" value="Cancel">
                }




            </div>
        </div>

    </div>
}


