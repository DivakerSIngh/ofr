@model OneFineRateBLL.Entities.etblPropertyPromotionMap

<script src="~/js/Jquery1.10.3.js"></script>

@*<link href="~/css/jquery-ui.css" rel="stylesheet" />*@

<script src="~/js/timepicki.min.js"></script>
<style>
    .alinghTable td {
        width: 15%;
    }

    .HiddenCheckbox {
        display: none;
    }

    label {
        padding-left: 5px !important;
        padding-right: 5px !important;
    }
</style>

<script type="text/javascript">

    var SelectedRooms = '';

    $(document).ready(function () {
        try {
            $('#hdnRoomTypeId').val('@Model.sRoomTypeId');
            SelectedRooms = '@Model.sRoomTypeId';
        } catch (e) {

        }
        SetCheckBox("First");
        BindValidity();

        var d = new Date();
        $('#BookingDateFrom').datepicker({
            startDate: d,
            minDate: d,
            maxDate: '+3Y',
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            onClose: function (selectedDate) {
                $("#BookingDateTo").datepicker("option", "maxDate", '+3Y');
                if (selectedDate != '') {

                    $("#BookingDateTo").datepicker("option", "minDate", selectedDate);
                }
                else {
                    $("#BookingDateTo").datepicker("option", "minDate", d);
                }
            }
        });
        $('#BookingDateTo').datepicker({
            startDate: d,
            minDate: d,
            maxDate: '+3Y',
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            onClose: function (selectedDate) {
                if (selectedDate != '') {
                    $("#BookingDateFrom").datepicker("option", "maxDate", selectedDate);
                }
                else {
                    $("#BookingDateFrom").datepicker("option", "maxDate", '+3Y');
                    $("#BookingDateFrom").datepicker("option", "minDate", d);
                }
            }
        });
        $('#StayDateFrom').datepicker({
            startDate: d,
            minDate: d,
            maxDate: '+3Y',
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            onClose: function (selectedDate) {
                $("#StayDateTo").datepicker("option", "maxDate", '+3Y');
                if (selectedDate != '') {

                    $("#StayDateTo").datepicker("option", "minDate", selectedDate);
                }
                else {
                    $("#StayDateTo").datepicker("option", "minDate", d);
                }
            }
        });
        $('#StayDateTo').datepicker({
            startDate: d,
            minDate: d,
            maxDate: '+3Y',
            autoclose: true,
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            onClose: function (selectedDate) {
                if (selectedDate != '') {
                    $("#StayDateFrom").datepicker("option", "maxDate", selectedDate);
                }
                else {
                    $("#StayDateFrom").datepicker("option", "maxDate", '+3Y');
                    $("#StayDateFrom").datepicker("option", "minDate", d);
                }
            }
        });

        //$("#BookingDateFrom").each(function () {
        //    var selecteddate = $("#BookingDateFrom").datepicker("getDate");
        //    var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
        //    if (dateString == "01/01/2001") {
        //        $("#BookingDateFrom").datepicker('setDate', new Date());
        //    }

        //});
        //$("#BookingDateTo").each(function () {
        //    var selecteddate = $("#BookingDateTo").datepicker("getDate");
        //    var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
        //    if (dateString == "01/01/2001") {
        //        $("#BookingDateTo").datepicker('setDate', new Date());
        //    }
        //});
        //$("#StayDateFrom").each(function () {
        //    var selecteddate = $("#StayDateFrom").datepicker("getDate");
        //    var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
        //    if (dateString == "01/01/2001") {
        //        $("#StayDateFrom").datepicker('setDate', new Date());
        //    }
        //});
        //$("#StayDateTo").each(function () {
        //    var selecteddate = $("#StayDateTo").datepicker("getDate");
        //    var dateString = $.datepicker.formatDate('mm/dd/yy', selecteddate);
        //    if (dateString == "01/01/2001") {
        //        $("#StayDateTo").datepicker('setDate', new Date());
        //    }
        //});
        $("#ui-datepicker-div").hide();

        function BindValidity() {
            var  ValidFrom = null;
            var  ValidTo = null;
            var success = @((ViewData["ValiditFrom"] != null).ToString().ToLower());
            if (success == true) {
                ValidFrom = '@ViewData["ValiditFrom"]';
            }

            var success1 = @((ViewData["ValiditTo"] != null).ToString().ToLower());
            if (success1 == true) {
                ValidTo = '@ViewData["ValiditTo"]';
            }


            var tableTempleteValidity = $("<label>").text("Rate Plan Validity : ");

            if(ValidFrom == null || ValidTo == null)
            {
                var msg = "Please Select Rate Plan";
                tableTempleteValidity.append($("<label>").text(msg));
            }
            else
            {
                tableTempleteValidity.append($("<label id='ValidFromRP'>").text(ValidFrom));
                tableTempleteValidity.append(" | ");
                tableTempleteValidity.append($("<label id='ValidToRP'>").text(ValidTo));
            }


            $("#hdnRPValidFrom").val(ValidFrom);
            $("#hdnRPValidTo").val(ValidTo);
            $('#RatePlanValidityDiv').html(tableTempleteValidity);
        }



        $("#iRPId").change(function () {
            SelectedRooms = '';
            SetCheckBox("RPChange");
        });

    });

    function SetCheckBox(cltype){

        var ddlsource = "#iRPId";
        var ddltarget = "#SelectedRoomType";
        console.log($("#hdnRPValidFrom"));
        console.log($("#hdnRoomTypeId")[0]);
        // var selectedRooms = $("#hdnRoomTypeId")[0].val();
        var SR = SelectedRooms.split(",");
        console.log(SR);
        var tableTemplete = "";
        if($(ddlsource).val() != ""){sourceVal =  parseInt($(ddlsource).val());}else{sourceVal =  0;}
        if (sourceVal != null) {
            var url = '@Url.Action("BindRoomType", "PromotionManagement")';
            $.getJSON(url, { id: sourceVal,type : cltype }, function (data) {
                //var tableTemplete = $('<table cellspacing="0"  style="width:100%;" class="alinghTable"><tbody><tr>');
                //data.suggestions.length =0;
                tableTemplete += '<table cellspacing="0" style="width:100%;" class="alinghTable"><tbody><tr>';
                if(data.suggestions.length > 0)
                {
                    var count = 0;
                    $.each(data.suggestions, function () {
                        if (count % 5 == 0 && count != 0) {
                            tableTemplete += '</tr><tr>';
                        }
                        console.log(this.Value);
                        tableTemplete += '<td>';
                        tableTemplete += '<input type="checkbox" value="' + this.Value + '" data-val="true" data-val-required="Please Select Room Type" name="SelectedRoomType" ' + (this.Selected == true ? "checked" : (SR.indexOf(this.Value.toString()) >= 0? "checked" : "")) + '>';
                        tableTemplete += '<label for="SelectedRoomType">' + this.Text + '</label>';
                        tableTemplete += '</td>';
                        count++;



                        //tableTemplete.append($('<td style="width:15%;" >').append(
                        //    $("<input>").attr('type', 'checkbox').val(this.Value).prop('checked', this.Selected).attr('data-val', true).attr('data-val-required', 'Please Select Room').attr('name', 'SelectedRoomType')
                        //        ).append($("<label>").attr('for', 'SelectedRoomType').text(this.Text)));

                    });

                    var remainder = 5 - (data.suggestions.length % 5);

                    for (var i = 0; i < remainder; i++) {
                        tableTemplete += '<td></td>';
                    }

                    //if(data.suggestions.length < 5)
                    //{
                    //    var totalcRoom = 5-data.suggestions.length;
                    //    for(var i=0;i<totalcRoom;i++)
                    //    {
                    //        tableTemplete.append($('<td>'));
                    //    }
                    //}

                }
                else{
                    tableTemplete += '<td style="color:red;"><label>Please create Room Type</label></td>';
                    //tableTemplete.append($('<td style="color:red;">').append($("<label>").text("Please create Room Type")));
                }

                tableTemplete += '</tr></tbody></table>';
                //tableTemplete.append($('</tr></tbody></table>'));
                $('#preParentCheckboxDataDiv').html('');
                $('#dynamicParentCheckboxDataDiv').html(tableTemplete);
            });

            if($(ddlsource).val() != 0)
            {
                var url = '@Url.Action("GetRatePlanValidity", "PromotionManagement")';
                $.getJSON(url, { id: $(ddlsource).val() }, function (RPdata) {
                    //console.log(RPdata.suggestions)
                    var tableTempleteValidity = $("<label>").text("Rate Plan Validity : ");
                    tableTempleteValidity.append($("<label>").text(RPdata.suggestions.ValidFrom));
                    tableTempleteValidity.append(" | ");
                    tableTempleteValidity.append($("<label>").text(RPdata.suggestions.ValidTo));

                    $("#hdnRPValidFrom").val(RPdata.suggestions.ValidFrom);
                    $("#hdnRPValidTo").val(RPdata.suggestions.ValidTo);
                    $('#RatePlanValidityDiv').html(tableTempleteValidity);
                });
            }

        }
        else {
            $('#dynamicParentCheckboxDataDiv').html('');
            $('#RatePlanValidityDiv').html('');
        }
    }



    function ConvertToDate(dtval) {
        alert(dtval)
        if (dtval != null || dtval != "") {
            var date = dtval.substring(0, 2);
            var month = dtval.substring(3, 5);
            var year = dtval.substring(6, 10);
            var convertedDate = new Date(year, month - 1, date);
            return convertedDate;
        }
    }
</script>

<script type="text/javascript">

</script>

<script type="text/javascript">
    function minmax(value, min, max) {
        if ($('#iIsPercent option:selected').text() == '%') {
            if (parseInt(value) < min || isNaN(value))
                return 0;
            else if (parseInt(value) > max) {
                $("#txtValue").val(null);
                return null;
            }
            else {
                $("#txtValue").val(value);
                return value;
            }
        }
        else {
            $("#txtValue").val(value);
            return value;
        }
    }

    function ddListChange() {
        if ($('#iIsPercent option:selected').text() == '%') {
            var v = $("#txtValue").val();
            minmax(v, 0, 100);
        }

    }



</script>



<div class="panel-body">
    @Html.HiddenFor(x => x.dtRPValidFrom, new { Id = "hdnRPValidFrom" })
    @Html.HiddenFor(x => x.dtRPValidTo, new { Id = "hdnRPValidTo" })
    @Html.HiddenFor(x => x.iPromoId)
    <input type="hidden" name="hdnRoomTypeId" id="hdnRoomTypeId">
    @Html.HiddenFor(x => x.iPropId)
    @Html.HiddenFor(x => x.iID)
    @Html.HiddenFor(x => x.dNegotiationPer)
    @*@Html.HiddenFor(x => x.iRPId)*@
    @Html.HiddenFor(x => x.sAmenityId)




    <div class="row">
        <div class="col-xs-1">Booking @Html.TextBoxFor(m => m.iID, new { type = "text", @class = "form-control ", style = "display: none;" })</div>
        <div class="col-xs-2" style="width:12%;">
            @Html.TextBoxFor(m => m.dtBValidFrom, new { Value = Model.dtBValidFrom, type = "text", @class = "form-control ", required = "true", name = "BookingDateFrom", onkeyup = "this.value=''", id = "BookingDateFrom" })
        </div>
        <div class="col-xs-2" style="width:12%;">
            @Html.TextBoxFor(m => m.dtBValidTo, new { Value = Model.dtBValidTo, type = "text", @class = "form-control ", required = "true", name = "BookingDateTo", onkeyup = "this.value=''", id = "BookingDateTo" })
        </div>
        <div class="col-xs-1 ">Stay Date</div>
        <div class="col-xs-2" style="width:12%;">
            @Html.TextBoxFor(m => m.dtSValidFrom, new { Value = Model.dtSValidFrom, type = "text", @class = "form-control ", required = "true", name = "StayDateFrom", onkeyup = "this.value=''", id = "StayDateFrom" })
        </div>
        <div class="col-xs-2" style="width:12%;">
            @Html.TextBoxFor(m => m.dtSValidTo, new { Value = Model.dtSValidTo, type = "text", @class = "form-control ", required = "true", name = "StayDateTo", onkeyup = "this.value=''", id = "StayDateTo" })
        </div>
        <div class="col-xs-2"></div>
    </div>

    <div class="row margintop10">

        <div class="col-xs-1 ">Rate Plan</div>
        <div class="col-xs-3">
            @Html.DropDownListFor(m => m.iRPId, new SelectList(OneFineRateBLL.BL_tblPromotionManagement.GetAllRecords(Model.iPropId), "iRPId", "sRatePlan"), new { @class = "form-control" })
        </div>
        <div class="col-xs-2" style="width:150px;">

            @Html.DropDownListFor(m => m.iIsPlus, new List<SelectListItem> {
                                                                            new SelectListItem {Text="Plus (+)",Value="1" },
                                                                            new SelectListItem {Text="Minus (-)",Value="0" }},
                                                                                     new { @class = "form-control", required = "true" })
        </div>
        <div class="col-xs-1" style="width:128px;">
            @Html.DropDownListFor(m => m.iIsPercent, new List<SelectListItem> {
                                                                            new SelectListItem {Text="%",Value="1" },
                                                                            new SelectListItem {Text="Value",Value="0" }},
                                                                                              new { @class = "form-control", required = "true", onchange = "ddListChange()" })
        </div>



        <div class="col-xs-2">
            @Html.TextBoxFor(m => m.dValue, new { id = "txtValue", type = "text", @class = "form-control width60", required = "true", onkeyup = "this.value = minmax(this.value, 0, 100)" })
        </div>
        <div class="col-xs-1">&nbsp;</div>



    </div>
    <div class="row">
        <div class="col-xs-4" id="RatePlanValidityDiv">


        </div>
        <div class="col-xs-7">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <b>Room for the Rate plan</b>

        </div>
        <div class="col-md-12" id="preParentCheckboxDataDiv">
            @{  var putCheckBoxesIntoTablenew1 = new MvcCheckBoxList.Model.HtmlListInfo(MvcCheckBoxList.Model.HtmlTag.table, 5, new { @class = "alinghTable", style = "width:100%;" });

            }


            @Html.CheckBoxListFor(m => m.SelectedRoomType, m => m.RoomTypeItems,
                            group => group.Value,
                            group => group.Text,
                            m => m.Selected, putCheckBoxesIntoTablenew1,
                                              x => new { @class = "CheckBoxList" })


        </div>
        <div class="col-xs-12" id="dynamicParentCheckboxDataDiv">

        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <b>  Meals or amenities to be added</b>

        </div>
        <div class="col-md-12">
            @{  var putCheckBoxesIntoTablenew2 = new MvcCheckBoxList.Model.HtmlListInfo(MvcCheckBoxList.Model.HtmlTag.table, 5, new { @class = "alinghTable", style = "width:100%;" }); }
            @Html.CheckBoxListFor(m => m.SelectedAmenityID, m => m.Amenties,
                            group => group.Value,
                                     group => group.Text,
                            m => m.Selected, putCheckBoxesIntoTablenew2,

                            x => new { @class = " CheckBoxList" })
        </div>

    </div>
    <div class="row">
        <div class="col-xs-2">All Amenities (1000 char)</div>
        <div class="col-xs-8">
            @Html.TextAreaFor(m => m.sAmenity, new { type = "text", @class = "form-control", maxlength = "1000" })
            @*@Html.TextBoxFor(m => m.sAmenity, new { type = "text", @class = "form-control", maxlength = "100" })*@
        </div>

    </div>
</div>
