@model OneFineRateBLL.Entities.eBlackListedDomainM


@using (Html.BeginForm("AddUpdateBlackListDomain", "BlackListDomain", FormMethod.Post, new { id = "frmAddUpdateBlacklistDomain" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Add New Domain</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">

            @if (Model != null && Model.iBlackListedDomainId != 0)
            {
                @Html.HiddenFor(m => m.iBlackListedDomainId)
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.sDomainName, htmlAttributes: new { @class = "" })<span class="red">*</span>
                </div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.sDomainName, new { placeholder = "http://www.yourdomain.com", maxlength = "200", @class = "form-control", id = "txtEmailsOrDomains" })
                    @Html.ValidationMessageFor(model => model.sDomainName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" id="btnSubmit" class="btn btn-primary">Save</button>
        <button type="button" id="btnCancel" data-dismiss="modal" class="btn btn-danger">Cancel</button>
    </div>
}


<script>


    $('#frmAddUpdateBlacklistDomain').submit(function (e) {

        //debugger;

        e.preventDefault();

        if ($('#txtEmailsOrDomains').val() != '' && (!validateDomain($('#txtEmailsOrDomains').val()) && !isValidEmailAddress($('#txtEmailsOrDomains').val()))) {
            toastr.error('Please enter a valid domain name or email address.');
            $('#txtEmailsOrDomains').focus();
            return false;
        }

        if ($(this).valid()) {

            var frmData = $(this).serializeArray();

            $.post($(this).attr('action'), frmData).done(function (data) {

                toastr.clear($('.toast'));

                if (data.status == false) {
                    toastr.error(data.Msg);
                }
                else if (data.status == true) {

                    $('#addBlacklistDomainModal').modal('hide');

                    BindBlackListDomainsGrid();

                    toastr.success(data.Msg);
                }
            });
        }
    });


    function validateDomain(url) {

        //debugger;
        url = url.replace("http://", "");
        url = url.replace("www.", "");

        var reg = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$/;
        var result = reg.test(url);
        return result;
    }

    function isValidEmailAddress(emailAddress) {
        var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
        return pattern.test(emailAddress);
    };

</script>

