//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OneFineRate
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OneFineRateEntities : DbContext
    {
        public OneFineRateEntities()
            : base("name=OneFineRateEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 3600;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<IP2LOCATION> IP2LOCATION { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblAccessbilityM> tblAccessbilityMs { get; set; }
        public virtual DbSet<tblAccomodationM> tblAccomodationMs { get; set; }
        public virtual DbSet<tblAdditionalCommision> tblAdditionalCommisions { get; set; }
        public virtual DbSet<tblAffiliationM> tblAffiliationMs { get; set; }
        public virtual DbSet<tblAmenityHeaderMapTG> tblAmenityHeaderMapTGs { get; set; }
        public virtual DbSet<tblAmenityM> tblAmenityMs { get; set; }
        public virtual DbSet<tblApplicabilityM> tblApplicabilityMs { get; set; }
        public virtual DbSet<tblAwardM> tblAwardMs { get; set; }
        public virtual DbSet<tblBankDetailM> tblBankDetailMs { get; set; }
        public virtual DbSet<tblBannerM> tblBannerMs { get; set; }
        public virtual DbSet<tblBidCountsTx> tblBidCountsTxes { get; set; }
        public virtual DbSet<tblBIDRoomAdultsTx> tblBIDRoomAdultsTxes { get; set; }
        public virtual DbSet<tblBidSettingsM> tblBidSettingsMs { get; set; }
        public virtual DbSet<tblBlackListedDomain> tblBlackListedDomains { get; set; }
        public virtual DbSet<tblBookedBidAmenity> tblBookedBidAmenities { get; set; }
        public virtual DbSet<tblBookedDayWiseSeparateTaxAmountDetail> tblBookedDayWiseSeparateTaxAmountDetails { get; set; }
        public virtual DbSet<tblBookedDayWiseTaxAmountDetail> tblBookedDayWiseTaxAmountDetails { get; set; }
        public virtual DbSet<tblBookedDayWiseTaxAmountDetails_Mod> tblBookedDayWiseTaxAmountDetails_Mod { get; set; }
        public virtual DbSet<tblBookedDayWiseTaxAmountDetails_Mod_Log> tblBookedDayWiseTaxAmountDetails_Mod_Log { get; set; }
        public virtual DbSet<tblBookingAmedTx> tblBookingAmedTxes { get; set; }
        public virtual DbSet<tblBookingCancellationPolicyAmendMap> tblBookingCancellationPolicyAmendMaps { get; set; }
        public virtual DbSet<tblBookingCancellationPolicyMap> tblBookingCancellationPolicyMaps { get; set; }
        public virtual DbSet<tblBookingDetailsAmendTx> tblBookingDetailsAmendTxes { get; set; }
        public virtual DbSet<tblBookingDetailsTx> tblBookingDetailsTxes { get; set; }
        public virtual DbSet<tblBookingErrorTx> tblBookingErrorTxes { get; set; }
        public virtual DbSet<tblBookingGuestAmendMap> tblBookingGuestAmendMaps { get; set; }
        public virtual DbSet<tblBookingGuestMap> tblBookingGuestMaps { get; set; }
        public virtual DbSet<tblBookingNegotiationTx> tblBookingNegotiationTxes { get; set; }
        public virtual DbSet<tblBookingTrakerTx> tblBookingTrakerTxes { get; set; }
        public virtual DbSet<tblBookingTripAdvisorReviewTx> tblBookingTripAdvisorReviewTxes { get; set; }
        public virtual DbSet<tblBookingTx> tblBookingTxes { get; set; }
        public virtual DbSet<tblBuildingCharacteristicsM> tblBuildingCharacteristicsMs { get; set; }
        public virtual DbSet<tblCarouselM> tblCarouselMs { get; set; }
        public virtual DbSet<tblChainM> tblChainMs { get; set; }
        public virtual DbSet<tblChainMTG> tblChainMTGs { get; set; }
        public virtual DbSet<tblChainMTG_Tmp> tblChainMTG_Tmp { get; set; }
        public virtual DbSet<tblChangeHistory> tblChangeHistories { get; set; }
        public virtual DbSet<tblChangeHistoryBankAdditionalCommision> tblChangeHistoryBankAdditionalCommisions { get; set; }
        public virtual DbSet<tblChangeHistoryBankDetail> tblChangeHistoryBankDetails { get; set; }
        public virtual DbSet<tblChangeHistoryBasicDetailsProperty> tblChangeHistoryBasicDetailsProperties { get; set; }
        public virtual DbSet<tblChangeHistoryCompetitorSet> tblChangeHistoryCompetitorSets { get; set; }
        public virtual DbSet<tblChangeHistoryDining> tblChangeHistoryDinings { get; set; }
        public virtual DbSet<tblChangeHistoryPhoto> tblChangeHistoryPhotoes { get; set; }
        public virtual DbSet<tblChangeHistoryPIRoom> tblChangeHistoryPIRooms { get; set; }
        public virtual DbSet<tblChangeHistoryPolicy> tblChangeHistoryPolicies { get; set; }
        public virtual DbSet<tblChangeHistoryPropertyAmenty> tblChangeHistoryPropertyAmenties { get; set; }
        public virtual DbSet<tblChangeHistoryPropertyPromotionMap> tblChangeHistoryPropertyPromotionMaps { get; set; }
        public virtual DbSet<tblChangeHistoryPropertyRatePlanMap> tblChangeHistoryPropertyRatePlanMaps { get; set; }
        public virtual DbSet<tblChangeHistoryRate> tblChangeHistoryRates { get; set; }
        public virtual DbSet<tblChangeHistoryRecreation> tblChangeHistoryRecreations { get; set; }
        public virtual DbSet<tblChangeHistoryRoom> tblChangeHistoryRooms { get; set; }
        public virtual DbSet<tblChangeHistorySpa> tblChangeHistorySpas { get; set; }
        public virtual DbSet<tblChangeHistoryTax> tblChangeHistoryTaxes { get; set; }
        public virtual DbSet<tblChannelMgrBookingTx> tblChannelMgrBookingTxes { get; set; }
        public virtual DbSet<tblChannelMgrM> tblChannelMgrMs { get; set; }
        public virtual DbSet<tblCityM> tblCityMs { get; set; }
        public virtual DbSet<tblCitySearchM> tblCitySearchMs { get; set; }
        public virtual DbSet<tblConserveCommissionM> tblConserveCommissionMs { get; set; }
        public virtual DbSet<tblCorporateCompanyM> tblCorporateCompanyMs { get; set; }
        public virtual DbSet<tblCorporateDiscountLinkingTx> tblCorporateDiscountLinkingTxes { get; set; }
        public virtual DbSet<tblCorporateDomainMap> tblCorporateDomainMaps { get; set; }
        public virtual DbSet<tblCountryCodePhoneM> tblCountryCodePhoneMs { get; set; }
        public virtual DbSet<tblCountryM> tblCountryMs { get; set; }
        public virtual DbSet<tblCrediCardM> tblCrediCardMs { get; set; }
        public virtual DbSet<tblCurrencyM> tblCurrencyMs { get; set; }
        public virtual DbSet<tblCustomerLoyaltyBookingsMap> tblCustomerLoyaltyBookingsMaps { get; set; }
        public virtual DbSet<tblCustomerM> tblCustomerMs { get; set; }
        public virtual DbSet<tblCustomerPointsHistoryTx> tblCustomerPointsHistoryTxes { get; set; }
        public virtual DbSet<tblCustomerPointsMap> tblCustomerPointsMaps { get; set; }
        public virtual DbSet<tblDashBoardBookingOverview> tblDashBoardBookingOverviews { get; set; }
        public virtual DbSet<tblDashBoardBookingOverviewComp> tblDashBoardBookingOverviewComps { get; set; }
        public virtual DbSet<tblDashBoardGuestNegotiation> tblDashBoardGuestNegotiations { get; set; }
        public virtual DbSet<tblDashBoardGuestNegotiationComp> tblDashBoardGuestNegotiationComps { get; set; }
        public virtual DbSet<tblDashBoardGuestResponse> tblDashBoardGuestResponses { get; set; }
        public virtual DbSet<tblDashBoardGuestResponseComp> tblDashBoardGuestResponseComps { get; set; }
        public virtual DbSet<tblDashBoardLeadPerc> tblDashBoardLeadPercs { get; set; }
        public virtual DbSet<tblDashBoardLeadPercComp> tblDashBoardLeadPercComps { get; set; }
        public virtual DbSet<tblDashBoardLeadRevenuePerc> tblDashBoardLeadRevenuePercs { get; set; }
        public virtual DbSet<tblDashBoardLeadRevenuePercComp> tblDashBoardLeadRevenuePercComps { get; set; }
        public virtual DbSet<tblDashBoardLeadRevenueValue> tblDashBoardLeadRevenueValues { get; set; }
        public virtual DbSet<tblDashBoardLeadRevenueValueComp> tblDashBoardLeadRevenueValueComps { get; set; }
        public virtual DbSet<tblDashBoardLeadValue> tblDashBoardLeadValues { get; set; }
        public virtual DbSet<tblDashBoardLeadValueComp> tblDashBoardLeadValueComps { get; set; }
        public virtual DbSet<tblDashBoardLengthPerc> tblDashBoardLengthPercs { get; set; }
        public virtual DbSet<tblDashBoardLengthPercComp> tblDashBoardLengthPercComps { get; set; }
        public virtual DbSet<tblDashBoardLengthRevenuePerc> tblDashBoardLengthRevenuePercs { get; set; }
        public virtual DbSet<tblDashBoardLengthRevenuePercComp> tblDashBoardLengthRevenuePercComps { get; set; }
        public virtual DbSet<tblDashBoardLengthRevenueValue> tblDashBoardLengthRevenueValues { get; set; }
        public virtual DbSet<tblDashBoardLengthRevenueValueComp> tblDashBoardLengthRevenueValueComps { get; set; }
        public virtual DbSet<tblDashBoardLengthValue> tblDashBoardLengthValues { get; set; }
        public virtual DbSet<tblDashBoardLengthValueComp> tblDashBoardLengthValueComps { get; set; }
        public virtual DbSet<tblDashBoardPerformanceRate> tblDashBoardPerformanceRates { get; set; }
        public virtual DbSet<tblDashBoardPerformanceRevenue> tblDashBoardPerformanceRevenues { get; set; }
        public virtual DbSet<tblDashBoardPerformanceValue> tblDashBoardPerformanceValues { get; set; }
        public virtual DbSet<tblDashBoardRoomProductivityRevenueValue> tblDashBoardRoomProductivityRevenueValues { get; set; }
        public virtual DbSet<tblDashBoardRoomProductivityValue> tblDashBoardRoomProductivityValues { get; set; }
        public virtual DbSet<tblDashBoardRoomsPerc> tblDashBoardRoomsPercs { get; set; }
        public virtual DbSet<tblDashBoardRoomsPercComp> tblDashBoardRoomsPercComps { get; set; }
        public virtual DbSet<tblDashBoardRoomsRevenuePerc> tblDashBoardRoomsRevenuePercs { get; set; }
        public virtual DbSet<tblDashBoardRoomsRevenuePercComp> tblDashBoardRoomsRevenuePercComps { get; set; }
        public virtual DbSet<tblDashBoardRoomsRevenueValue> tblDashBoardRoomsRevenueValues { get; set; }
        public virtual DbSet<tblDashBoardRoomsRevenueValueComp> tblDashBoardRoomsRevenueValueComps { get; set; }
        public virtual DbSet<tblDashBoardRoomsValue> tblDashBoardRoomsValues { get; set; }
        public virtual DbSet<tblDashBoardRoomsValueComp> tblDashBoardRoomsValueComps { get; set; }
        public virtual DbSet<tblDashBoardWeekPerc> tblDashBoardWeekPercs { get; set; }
        public virtual DbSet<tblDashBoardWeekPercComp> tblDashBoardWeekPercComps { get; set; }
        public virtual DbSet<tblDashBoardWeekRevenuePerc> tblDashBoardWeekRevenuePercs { get; set; }
        public virtual DbSet<tblDashBoardWeekRevenuePercComp> tblDashBoardWeekRevenuePercComps { get; set; }
        public virtual DbSet<tblDashBoardWeekRevenueValue> tblDashBoardWeekRevenueValues { get; set; }
        public virtual DbSet<tblDashBoardWeekRevenueValueComp> tblDashBoardWeekRevenueValueComps { get; set; }
        public virtual DbSet<tblDashBoardWeekValue> tblDashBoardWeekValues { get; set; }
        public virtual DbSet<tblDashBoardWeekValueComp> tblDashBoardWeekValueComps { get; set; }
        public virtual DbSet<tblDaywiseBookingRateTx> tblDaywiseBookingRateTxes { get; set; }
        public virtual DbSet<tblEmailSettingsM> tblEmailSettingsMs { get; set; }
        public virtual DbSet<tblErrorLog> tblErrorLogs { get; set; }
        public virtual DbSet<tblExchangeRatesM> tblExchangeRatesMs { get; set; }
        public virtual DbSet<tblGolfM> tblGolfMs { get; set; }
        public virtual DbSet<tblGroupM> tblGroupMs { get; set; }
        public virtual DbSet<tblGroupMenuM> tblGroupMenuMs { get; set; }
        public virtual DbSet<tblHotelAmenityM> tblHotelAmenityMs { get; set; }
        public virtual DbSet<tblHotelCommonServiceM> tblHotelCommonServiceMs { get; set; }
        public virtual DbSet<tblHotelConvenienceM> tblHotelConvenienceMs { get; set; }
        public virtual DbSet<tblHotelFacilitesRankM> tblHotelFacilitesRankMs { get; set; }
        public virtual DbSet<tblHotelLeisureM> tblHotelLeisureMs { get; set; }
        public virtual DbSet<tblHotelMeetingM> tblHotelMeetingMs { get; set; }
        public virtual DbSet<tblHotelParkingM> tblHotelParkingMs { get; set; }
        public virtual DbSet<tblHotelPartnerM> tblHotelPartnerMs { get; set; }
        public virtual DbSet<tblHotelRoomAmenityAdditionalM> tblHotelRoomAmenityAdditionalMs { get; set; }
        public virtual DbSet<tblHotelRoomAmenityBathRoomM> tblHotelRoomAmenityBathRoomMs { get; set; }
        public virtual DbSet<tblHotelRoomAmenityBeddingM> tblHotelRoomAmenityBeddingMs { get; set; }
        public virtual DbSet<tblHotelRoomAmenityM> tblHotelRoomAmenityMs { get; set; }
        public virtual DbSet<tblIndianLocalityCordinate> tblIndianLocalityCordinates { get; set; }
        public virtual DbSet<tblItemNameM> tblItemNameMs { get; set; }
        public virtual DbSet<tblLandActivitiesM> tblLandActivitiesMs { get; set; }
        public virtual DbSet<tblLanguageM> tblLanguageMs { get; set; }
        public virtual DbSet<tblLocalityM> tblLocalityMs { get; set; }
        public virtual DbSet<tblLocalitySearchM> tblLocalitySearchMs { get; set; }
        public virtual DbSet<tblLookUp> tblLookUps { get; set; }
        public virtual DbSet<tblLookUpExtraBed> tblLookUpExtraBeds { get; set; }
        public virtual DbSet<tblLoyalityAmenityMap> tblLoyalityAmenityMaps { get; set; }
        public virtual DbSet<tblLoyalityPointsM> tblLoyalityPointsMs { get; set; }
        public virtual DbSet<tblMacroAreaM> tblMacroAreaMs { get; set; }
        public virtual DbSet<tblMacroAreaSearchM> tblMacroAreaSearchMs { get; set; }
        public virtual DbSet<tblMasterTax> tblMasterTaxes { get; set; }
        public virtual DbSet<tblMasterTaxStateMap> tblMasterTaxStateMaps { get; set; }
        public virtual DbSet<tblMealCodesRG> tblMealCodesRGs { get; set; }
        public virtual DbSet<tblMenuM> tblMenuMs { get; set; }
        public virtual DbSet<tblMyWishListTx> tblMyWishListTxes { get; set; }
        public virtual DbSet<tblNegotiationActionRecord> tblNegotiationActionRecords { get; set; }
        public virtual DbSet<tblOfferReviewTrackerTx> tblOfferReviewTrackerTxes { get; set; }
        public virtual DbSet<tblOFRPropertyM> tblOFRPropertyMs { get; set; }
        public virtual DbSet<tblOnsiteRecreationFacilitiesM> tblOnsiteRecreationFacilitiesMs { get; set; }
        public virtual DbSet<tblOriginalBookingPrice> tblOriginalBookingPrices { get; set; }
        public virtual DbSet<tblPastSaving> tblPastSavings { get; set; }
        public virtual DbSet<tblPhotoCategoryM> tblPhotoCategoryMs { get; set; }
        public virtual DbSet<tblPhotoSubCategoryM> tblPhotoSubCategoryMs { get; set; }
        public virtual DbSet<tblPromoCodeM> tblPromoCodeMs { get; set; }
        public virtual DbSet<tblPromoM> tblPromoMs { get; set; }
        public virtual DbSet<tblPromotionalHotelsM> tblPromotionalHotelsMs { get; set; }
        public virtual DbSet<tblPropConserveCommissionMap> tblPropConserveCommissionMaps { get; set; }
        public virtual DbSet<tblPropertyAmenitiesMap> tblPropertyAmenitiesMaps { get; set; }
        public virtual DbSet<tblPropertyAreaDataTG> tblPropertyAreaDataTGs { get; set; }
        public virtual DbSet<tblPropertyBasicBiddingMap> tblPropertyBasicBiddingMaps { get; set; }
        public virtual DbSet<tblPropertyBasicBiddingMapCorp> tblPropertyBasicBiddingMapCorps { get; set; }
        public virtual DbSet<tblPropertyBiddingRateM> tblPropertyBiddingRateMs { get; set; }
        public virtual DbSet<tblPropertyBidUpgradeM> tblPropertyBidUpgradeMs { get; set; }
        public virtual DbSet<tblPropertyCancellationPolicyMap> tblPropertyCancellationPolicyMaps { get; set; }
        public virtual DbSet<tblPropertyChannelMgrMap> tblPropertyChannelMgrMaps { get; set; }
        public virtual DbSet<tblPropertyCompetitorSet> tblPropertyCompetitorSets { get; set; }
        public virtual DbSet<tblPropertyDiningMap> tblPropertyDiningMaps { get; set; }
        public virtual DbSet<tblPropertyFacilityMap> tblPropertyFacilityMaps { get; set; }
        public virtual DbSet<tblPropertyFacilityTG> tblPropertyFacilityTGs { get; set; }
        public virtual DbSet<tblPropertyFacilityTG_Tmp> tblPropertyFacilityTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyImageUrlTG> tblPropertyImageUrlTGs { get; set; }
        public virtual DbSet<tblPropertyImageUrlTG_Tmp> tblPropertyImageUrlTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyLeadTimeBiddingMap> tblPropertyLeadTimeBiddingMaps { get; set; }
        public virtual DbSet<tblPropertyLeadTimeBiddingMapCorp> tblPropertyLeadTimeBiddingMapCorps { get; set; }
        public virtual DbSet<tblPropertyLocalityMap> tblPropertyLocalityMaps { get; set; }
        public virtual DbSet<tblPropertyLOSBiddingMap> tblPropertyLOSBiddingMaps { get; set; }
        public virtual DbSet<tblPropertyLOSBiddingMapCorp> tblPropertyLOSBiddingMapCorps { get; set; }
        public virtual DbSet<tblPropertyM> tblPropertyMs { get; set; }
        public virtual DbSet<tblPropertyMTest> tblPropertyMTests { get; set; }
        public virtual DbSet<tblPropertyMTG_Tmp> tblPropertyMTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyParkingMap> tblPropertyParkingMaps { get; set; }
        public virtual DbSet<tblPropertyPhotoMap> tblPropertyPhotoMaps { get; set; }
        public virtual DbSet<tblPropertyPolicyMap> tblPropertyPolicyMaps { get; set; }
        public virtual DbSet<tblPropertyPrimaryPhotoMap> tblPropertyPrimaryPhotoMaps { get; set; }
        public virtual DbSet<tblPropertyPromoMap> tblPropertyPromoMaps { get; set; }
        public virtual DbSet<tblPropertyPromoRateMap> tblPropertyPromoRateMaps { get; set; }
        public virtual DbSet<tblPropertyPromotionAmenityMap> tblPropertyPromotionAmenityMaps { get; set; }
        public virtual DbSet<tblPropertyPromotionCancellationMainMap> tblPropertyPromotionCancellationMainMaps { get; set; }
        public virtual DbSet<tblPropertyPromotionCancellationMap> tblPropertyPromotionCancellationMaps { get; set; }
        public virtual DbSet<tblPropertyPromotionMap> tblPropertyPromotionMaps { get; set; }
        public virtual DbSet<tblPropertyPromotionRoomTypeMap> tblPropertyPromotionRoomTypeMaps { get; set; }
        public virtual DbSet<tblPropertyRankTx> tblPropertyRankTxes { get; set; }
        public virtual DbSet<tblPropertyRatePlanAmenityMap> tblPropertyRatePlanAmenityMaps { get; set; }
        public virtual DbSet<tblPropertyRatePlanCancellationMainMap> tblPropertyRatePlanCancellationMainMaps { get; set; }
        public virtual DbSet<tblPropertyRatePlanCancellationMap> tblPropertyRatePlanCancellationMaps { get; set; }
        public virtual DbSet<tblPropertyRatePlanMap> tblPropertyRatePlanMaps { get; set; }
        public virtual DbSet<tblPropertyRatePlanRoomTypeMap> tblPropertyRatePlanRoomTypeMaps { get; set; }
        public virtual DbSet<tblPropertyRecreationMap> tblPropertyRecreationMaps { get; set; }
        public virtual DbSet<tblPropertyReviewTG> tblPropertyReviewTGs { get; set; }
        public virtual DbSet<tblPropertyReviewTG_Tmp> tblPropertyReviewTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyRoomAmentiesMap> tblPropertyRoomAmentiesMaps { get; set; }
        public virtual DbSet<tblPropertyRoomDescriptionTG> tblPropertyRoomDescriptionTGs { get; set; }
        public virtual DbSet<tblPropertyRoomDescriptionTG_Tmp> tblPropertyRoomDescriptionTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyRoomInventory> tblPropertyRoomInventories { get; set; }
        public virtual DbSet<tblPropertyRoomLevelAmenityTG> tblPropertyRoomLevelAmenityTGs { get; set; }
        public virtual DbSet<tblPropertyRoomLevelAmenityTG_Tmp> tblPropertyRoomLevelAmenityTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyRoomMap> tblPropertyRoomMaps { get; set; }
        public virtual DbSet<tblPropertyRoomRatePlanInventoryMap> tblPropertyRoomRatePlanInventoryMaps { get; set; }
        public virtual DbSet<tblPropertyRoomsBiddingMap> tblPropertyRoomsBiddingMaps { get; set; }
        public virtual DbSet<tblPropertyRoomsBiddingMapCorp> tblPropertyRoomsBiddingMapCorps { get; set; }
        public virtual DbSet<tblPropertyRoomTaxMap> tblPropertyRoomTaxMaps { get; set; }
        public virtual DbSet<tblPropertyRoomTypeRoomAmentiesMap> tblPropertyRoomTypeRoomAmentiesMaps { get; set; }
        public virtual DbSet<tblPropertySpaMap> tblPropertySpaMaps { get; set; }
        public virtual DbSet<tblPropertyTaxesMap> tblPropertyTaxesMaps { get; set; }
        public virtual DbSet<tblPropertyTaxMap> tblPropertyTaxMaps { get; set; }
        public virtual DbSet<tblPropertyTopAttrationTG> tblPropertyTopAttrationTGs { get; set; }
        public virtual DbSet<tblPropertyTopAttrationTG_Tmp> tblPropertyTopAttrationTG_Tmp { get; set; }
        public virtual DbSet<tblPropertyTripAdvisorM> tblPropertyTripAdvisorMs { get; set; }
        public virtual DbSet<tblPropertyWeekendBiddingMap> tblPropertyWeekendBiddingMaps { get; set; }
        public virtual DbSet<tblPropertyWeekendBiddingMapCorp> tblPropertyWeekendBiddingMapCorps { get; set; }
        public virtual DbSet<tblPurchaseHistory> tblPurchaseHistories { get; set; }
        public virtual DbSet<tblRankManagement> tblRankManagements { get; set; }
        public virtual DbSet<tblRatePlanM> tblRatePlanMs { get; set; }
        public virtual DbSet<tblRecentSavingsTx> tblRecentSavingsTxes { get; set; }
        public virtual DbSet<tblRoomFacilityDropDownM> tblRoomFacilityDropDownMs { get; set; }
        public virtual DbSet<tblRoomOutdoorViewM> tblRoomOutdoorViewMs { get; set; }
        public virtual DbSet<tblRoomRateRangeM> tblRoomRateRangeMs { get; set; }
        public virtual DbSet<tblRoomTypeM> tblRoomTypeMs { get; set; }
        public virtual DbSet<tblServiceChargeM> tblServiceChargeMs { get; set; }
        public virtual DbSet<tblSettingM> tblSettingMs { get; set; }
        public virtual DbSet<tblSettingsM> tblSettingsMs { get; set; }
        public virtual DbSet<tblStarCategoryM> tblStarCategoryMs { get; set; }
        public virtual DbSet<tblStateM> tblStateMs { get; set; }
        public virtual DbSet<tblTaxChangeForBookingTx> tblTaxChangeForBookingTxes { get; set; }
        public virtual DbSet<tblTaxM> tblTaxMs { get; set; }
        public virtual DbSet<tblTGAmenitiesMap> tblTGAmenitiesMaps { get; set; }
        public virtual DbSet<tblTopSellingHotelsForTag> tblTopSellingHotelsForTags { get; set; }
        public virtual DbSet<tblTripAdvisorReview> tblTripAdvisorReviews { get; set; }
        public virtual DbSet<tblUserGroupM> tblUserGroupMs { get; set; }
        public virtual DbSet<tblUserM> tblUserMs { get; set; }
        public virtual DbSet<tblUserPropertyMap> tblUserPropertyMaps { get; set; }
        public virtual DbSet<tblVideoUrlM> tblVideoUrlMs { get; set; }
        public virtual DbSet<tblViewForConversion> tblViewForConversions { get; set; }
        public virtual DbSet<tblWebsiteGuestUserMaster> tblWebsiteGuestUserMasters { get; set; }
        public virtual DbSet<tblWebsiteUserClaim> tblWebsiteUserClaims { get; set; }
        public virtual DbSet<tblWebsiteUserLogin> tblWebsiteUserLogins { get; set; }
        public virtual DbSet<tblWebsiteUserMater> tblWebsiteUserMaters { get; set; }
        public virtual DbSet<tblWebsiteUserRoleMaster> tblWebsiteUserRoleMasters { get; set; }
        public virtual DbSet<tblActiveAmendID> tblActiveAmendIDs { get; set; }
        public virtual DbSet<tblAdditionalCommision_log> tblAdditionalCommision_log { get; set; }
        public virtual DbSet<tblAmenityM_log> tblAmenityM_log { get; set; }
        public virtual DbSet<tblAnonymousRecentViewsTx> tblAnonymousRecentViewsTxes { get; set; }
        public virtual DbSet<tblBankDetailM_log> tblBankDetailM_log { get; set; }
        public virtual DbSet<tblBannerM_log> tblBannerM_log { get; set; }
        public virtual DbSet<tblBasicPropertyAmenitiesTGSpecific_Tmp> tblBasicPropertyAmenitiesTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblBasicPropertyImgTGSpecific_Tmp> tblBasicPropertyImgTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblBasicPropertyInfoTGSearch_Tmp> tblBasicPropertyInfoTGSearch_Tmp { get; set; }
        public virtual DbSet<tblBasicPropertyInfoTGSpecific_Tmp> tblBasicPropertyInfoTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblBasicPropertyPOITGSpecific_Tmp> tblBasicPropertyPOITGSpecific_Tmp { get; set; }
        public virtual DbSet<tblBookedDayWiseTaxAmountDetailsAmend> tblBookedDayWiseTaxAmountDetailsAmends { get; set; }
        public virtual DbSet<tblBookingTx_log> tblBookingTx_log { get; set; }
        public virtual DbSet<tblChainM_log> tblChainM_log { get; set; }
        public virtual DbSet<tblChannelMgrBookingTracker> tblChannelMgrBookingTrackers { get; set; }
        public virtual DbSet<tblChannelMgrTracker> tblChannelMgrTrackers { get; set; }
        public virtual DbSet<tblGroupM_log> tblGroupM_log { get; set; }
        public virtual DbSet<tblGroupMenuM_log> tblGroupMenuM_log { get; set; }
        public virtual DbSet<tblLocalityM_log> tblLocalityM_log { get; set; }
        public virtual DbSet<tblLoyalityAmenityMap_log> tblLoyalityAmenityMap_log { get; set; }
        public virtual DbSet<tblLoyalityPointsM_log> tblLoyalityPointsM_log { get; set; }
        public virtual DbSet<tblMacroAreaM_log> tblMacroAreaM_log { get; set; }
        public virtual DbSet<tblMasterTax_log> tblMasterTax_log { get; set; }
        public virtual DbSet<tblMasterTaxMap> tblMasterTaxMaps { get; set; }
        public virtual DbSet<tblMasterTaxMap_log> tblMasterTaxMap_log { get; set; }
        public virtual DbSet<tblMasterTaxStateMap_log> tblMasterTaxStateMap_log { get; set; }
        public virtual DbSet<tblPolygon> tblPolygons { get; set; }
        public virtual DbSet<tblPromoCodeM_log> tblPromoCodeM_log { get; set; }
        public virtual DbSet<tblPromotionalHotelsM_log> tblPromotionalHotelsM_log { get; set; }
        public virtual DbSet<tblPropertyAmenitiesMap_log> tblPropertyAmenitiesMap_log { get; set; }
        public virtual DbSet<tblPropertyCompetitorSet_log> tblPropertyCompetitorSet_log { get; set; }
        public virtual DbSet<tblPropertyDiningMap_log> tblPropertyDiningMap_log { get; set; }
        public virtual DbSet<tblPropertyLocalityMap_log> tblPropertyLocalityMap_log { get; set; }
        public virtual DbSet<tblPropertyM_log> tblPropertyM_log { get; set; }
        public virtual DbSet<tblPropertyParkingMap_log> tblPropertyParkingMap_log { get; set; }
        public virtual DbSet<tblPropertyPhotoMap_log> tblPropertyPhotoMap_log { get; set; }
        public virtual DbSet<tblPropertyPolicyMap_log> tblPropertyPolicyMap_log { get; set; }
        public virtual DbSet<tblPropertyPromoRateMap_log> tblPropertyPromoRateMap_log { get; set; }
        public virtual DbSet<tblPropertyPromotionCancellationMainMap_log> tblPropertyPromotionCancellationMainMap_log { get; set; }
        public virtual DbSet<tblPropertyPromotionMap_log> tblPropertyPromotionMap_log { get; set; }
        public virtual DbSet<tblPropertyRatePlanCancellationMainMap_log> tblPropertyRatePlanCancellationMainMap_log { get; set; }
        public virtual DbSet<tblPropertyRatePlanMap_log> tblPropertyRatePlanMap_log { get; set; }
        public virtual DbSet<tblPropertyRatePlanRoomTypeMap_log> tblPropertyRatePlanRoomTypeMap_log { get; set; }
        public virtual DbSet<tblPropertyRecreationMap_log> tblPropertyRecreationMap_log { get; set; }
        public virtual DbSet<tblPropertyRoomInventory_log> tblPropertyRoomInventory_log { get; set; }
        public virtual DbSet<tblPropertyRoomMap_log> tblPropertyRoomMap_log { get; set; }
        public virtual DbSet<tblPropertyRoomRatePlanInventoryMap_log> tblPropertyRoomRatePlanInventoryMap_log { get; set; }
        public virtual DbSet<tblPropertySpaMap_log> tblPropertySpaMap_log { get; set; }
        public virtual DbSet<tblPropertyTaxesMap_log> tblPropertyTaxesMap_log { get; set; }
        public virtual DbSet<tblPropertyTaxMap_log> tblPropertyTaxMap_log { get; set; }
        public virtual DbSet<tblPropertyTripAdvisorAwardsM> tblPropertyTripAdvisorAwardsMs { get; set; }
        public virtual DbSet<tblRankManagement_log> tblRankManagement_log { get; set; }
        public virtual DbSet<tblRatePlanCancelPenaltyDescTGSearch_Tmp> tblRatePlanCancelPenaltyDescTGSearch_Tmp { get; set; }
        public virtual DbSet<tblRatePlanCancelPenaltyDescTGSpecific_Tmp> tblRatePlanCancelPenaltyDescTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblRatePlanCancelPenaltyTGSearch_Tmp> tblRatePlanCancelPenaltyTGSearch_Tmp { get; set; }
        public virtual DbSet<tblRatePlanCancelPenaltyTGSpecific_Tmp> tblRatePlanCancelPenaltyTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblRatePlanM_log> tblRatePlanM_log { get; set; }
        public virtual DbSet<tblRatePlanTGSearch_Tmp> tblRatePlanTGSearch_Tmp { get; set; }
        public virtual DbSet<tblRatePlanTGSpecific_Tmp> tblRatePlanTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblRecentViewsTx> tblRecentViewsTxes { get; set; }
        public virtual DbSet<tblRoomAccessibilityM> tblRoomAccessibilityMs { get; set; }
        public virtual DbSet<tblRoomRateTaxTGSpecific_Tmp> tblRoomRateTaxTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblRoomRateTGsearch_Tmp> tblRoomRateTGsearch_Tmp { get; set; }
        public virtual DbSet<tblRoomRateTGSpecific_Tmp> tblRoomRateTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblRoomTypeTGSearch_Tmp> tblRoomTypeTGSearch_Tmp { get; set; }
        public virtual DbSet<tblRoomTypeTGSpecific_Tmp> tblRoomTypeTGSpecific_Tmp { get; set; }
        public virtual DbSet<tblServiceChargeM_log> tblServiceChargeM_log { get; set; }
        public virtual DbSet<tblSyncBookingToChannelMgrTracker> tblSyncBookingToChannelMgrTrackers { get; set; }
        public virtual DbSet<tblTaxM_log> tblTaxM_log { get; set; }
        public virtual DbSet<tblUserFeedbackTripAdvisor> tblUserFeedbackTripAdvisors { get; set; }
        public virtual DbSet<tblUserM_log> tblUserM_log { get; set; }
        public virtual DbSet<tblUserPropertyMap_log> tblUserPropertyMap_log { get; set; }
        public virtual DbSet<tblVideoUrlM_log> tblVideoUrlM_log { get; set; }
    
        public virtual ObjectResult<uspGetMenuForMapping_Result> uspGetMenuForMapping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetMenuForMapping_Result>("uspGetMenuForMapping");
        }
    
        public virtual ObjectResult<uspGetPropertiesAndChainByUser_Result> uspGetPropertiesAndChainByUser(Nullable<int> userId, string search)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertiesAndChainByUser_Result>("uspGetPropertiesAndChainByUser", userIdParameter, searchParameter);
        }
    
        public virtual ObjectResult<uspGetPropertiesByUser_Result> uspGetPropertiesByUser(Nullable<int> userId, Nullable<int> parentid)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var parentidParameter = parentid.HasValue ?
                new ObjectParameter("Parentid", parentid) :
                new ObjectParameter("Parentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertiesByUser_Result>("uspGetPropertiesByUser", userIdParameter, parentidParameter);
        }
    
        public virtual ObjectResult<uspMenuSelectByUserId_Result> uspMenuSelectByUserId(Nullable<int> iUserId, Nullable<int> menutype)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var menutypeParameter = menutype.HasValue ?
                new ObjectParameter("menutype", menutype) :
                new ObjectParameter("menutype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspMenuSelectByUserId_Result>("uspMenuSelectByUserId", iUserIdParameter, menutypeParameter);
        }
    
        public virtual ObjectResult<uspGetHomeMenuByUserId_Result> uspGetHomeMenuByUserId(Nullable<int> iUserId)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetHomeMenuByUserId_Result>("uspGetHomeMenuByUserId", iUserIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertyMenuByUserId_Result> uspGetPropertyMenuByUserId(Nullable<int> iUserId)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertyMenuByUserId_Result>("uspGetPropertyMenuByUserId", iUserIdParameter);
        }
    
        public virtual ObjectResult<uspGetUserHotelMapping_Result> uspGetUserHotelMapping(Nullable<int> iUserId)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUserHotelMapping_Result>("uspGetUserHotelMapping", iUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspControllerActionByUserId(Nullable<int> iUserId, string controllerName, string actionName)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspControllerActionByUserId", iUserIdParameter, controllerNameParameter, actionNameParameter);
        }
    
        public virtual ObjectResult<uspGetAmenitiesByName_Result> uspGetAmenitiesByName(string amenity, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, ObjectParameter totalCount)
        {
            var amenityParameter = amenity != null ?
                new ObjectParameter("Amenity", amenity) :
                new ObjectParameter("Amenity", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAmenitiesByName_Result>("uspGetAmenitiesByName", amenityParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetControllerActionByUserId_Result> uspGetControllerActionByUserId(Nullable<int> iUserId)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetControllerActionByUserId_Result>("uspGetControllerActionByUserId", iUserIdParameter);
        }
    
        public virtual ObjectResult<uspGetTaxByName_Result> uspGetTaxByName(string tax, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, ObjectParameter totalCount)
        {
            var taxParameter = tax != null ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTaxByName_Result>("uspGetTaxByName", taxParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetRatePlanByName_Result> uspGetRatePlanByName(string ratePlan, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, ObjectParameter totalCount)
        {
            var ratePlanParameter = ratePlan != null ?
                new ObjectParameter("RatePlan", ratePlan) :
                new ObjectParameter("RatePlan", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRatePlanByName_Result>("uspGetRatePlanByName", ratePlanParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetPropertiesAndChainByUserForShow_Result> uspGetPropertiesAndChainByUserForShow(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertiesAndChainByUserForShow_Result>("uspGetPropertiesAndChainByUserForShow", userIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertyTaxByRoomType_Result> uspGetPropertyTaxByRoomType(string roomType, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, string sortBy, Nullable<int> propId, ObjectParameter totalCount)
        {
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertyTaxByRoomType_Result>("uspGetPropertyTaxByRoomType", roomTypeParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, sortByParameter, propIdParameter, totalCount);
        }
    
        [DbFunction("OneFineRateEntities", "Split")]
        public virtual IQueryable<string> Split(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[OneFineRateEntities].[Split](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<uspPromotionsListByID_Result> uspPromotionsListByID(Nullable<int> promoid, Nullable<int> propid)
        {
            var promoidParameter = promoid.HasValue ?
                new ObjectParameter("promoid", promoid) :
                new ObjectParameter("promoid", typeof(int));
    
            var propidParameter = propid.HasValue ?
                new ObjectParameter("propid", propid) :
                new ObjectParameter("propid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPromotionsListByID_Result>("uspPromotionsListByID", promoidParameter, propidParameter);
        }
    
        public virtual ObjectResult<string> uspGetRoomAndRatePlanForBulk(Nullable<int> iPropId, Nullable<bool> onlyBase)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var onlyBaseParameter = onlyBase.HasValue ?
                new ObjectParameter("OnlyBase", onlyBase) :
                new ObjectParameter("OnlyBase", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetRoomAndRatePlanForBulk", iPropIdParameter, onlyBaseParameter);
        }
    
        [DbFunction("OneFineRateEntities", "ExplodeDates")]
        public virtual IQueryable<Nullable<System.DateTime>> ExplodeDates(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.DateTime>>("[OneFineRateEntities].[ExplodeDates](@startdate, @enddate)", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<string> usp_LogGenerator(string pTableName, string pDebug, ObjectParameter pErrFlag, ObjectParameter pErrDesc)
        {
            var pTableNameParameter = pTableName != null ?
                new ObjectParameter("pTableName", pTableName) :
                new ObjectParameter("pTableName", typeof(string));
    
            var pDebugParameter = pDebug != null ?
                new ObjectParameter("pDebug", pDebug) :
                new ObjectParameter("pDebug", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_LogGenerator", pTableNameParameter, pDebugParameter, pErrFlag, pErrDesc);
        }
    
        public virtual int uspGetRatePlanOverView(Nullable<int> propId, string dtStart)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRatePlanOverView", propIdParameter, dtStartParameter);
        }
    
        public virtual int uspSaveInventoryDetails(Nullable<int> iPropId, Nullable<int> iInventory, Nullable<bool> bStopSell, Nullable<int> iCutOff, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<int> iMinLengthStay, Nullable<int> iMaxLengthStay, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<decimal> dSingleRate, Nullable<decimal> dDoubleRate, Nullable<decimal> dTripleRate, Nullable<decimal> dQuadrupleRate, Nullable<decimal> dQuintrupleRate)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iInventoryParameter = iInventory.HasValue ?
                new ObjectParameter("iInventory", iInventory) :
                new ObjectParameter("iInventory", typeof(int));
    
            var bStopSellParameter = bStopSell.HasValue ?
                new ObjectParameter("bStopSell", bStopSell) :
                new ObjectParameter("bStopSell", typeof(bool));
    
            var iCutOffParameter = iCutOff.HasValue ?
                new ObjectParameter("iCutOff", iCutOff) :
                new ObjectParameter("iCutOff", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var iMinLengthStayParameter = iMinLengthStay.HasValue ?
                new ObjectParameter("iMinLengthStay", iMinLengthStay) :
                new ObjectParameter("iMinLengthStay", typeof(int));
    
            var iMaxLengthStayParameter = iMaxLengthStay.HasValue ?
                new ObjectParameter("iMaxLengthStay", iMaxLengthStay) :
                new ObjectParameter("iMaxLengthStay", typeof(int));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var dSingleRateParameter = dSingleRate.HasValue ?
                new ObjectParameter("dSingleRate", dSingleRate) :
                new ObjectParameter("dSingleRate", typeof(decimal));
    
            var dDoubleRateParameter = dDoubleRate.HasValue ?
                new ObjectParameter("dDoubleRate", dDoubleRate) :
                new ObjectParameter("dDoubleRate", typeof(decimal));
    
            var dTripleRateParameter = dTripleRate.HasValue ?
                new ObjectParameter("dTripleRate", dTripleRate) :
                new ObjectParameter("dTripleRate", typeof(decimal));
    
            var dQuadrupleRateParameter = dQuadrupleRate.HasValue ?
                new ObjectParameter("dQuadrupleRate", dQuadrupleRate) :
                new ObjectParameter("dQuadrupleRate", typeof(decimal));
    
            var dQuintrupleRateParameter = dQuintrupleRate.HasValue ?
                new ObjectParameter("dQuintrupleRate", dQuintrupleRate) :
                new ObjectParameter("dQuintrupleRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveInventoryDetails", iPropIdParameter, iInventoryParameter, bStopSellParameter, iCutOffParameter, iActionByParameter, bCloseOutParameter, iMinLengthStayParameter, iMaxLengthStayParameter, bCTAParameter, bCTDParameter, dSingleRateParameter, dDoubleRateParameter, dTripleRateParameter, dQuadrupleRateParameter, dQuintrupleRateParameter);
        }
    
        public virtual ObjectResult<uspChangeHistory_Result> uspChangeHistory(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, Nullable<int> roomType, Nullable<int> ratePlan, Nullable<System.DateTime> dtEffectiveFrom, Nullable<System.DateTime> dtEffectiveTo, Nullable<int> propId)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var roomTypeParameter = roomType.HasValue ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(int));
    
            var ratePlanParameter = ratePlan.HasValue ?
                new ObjectParameter("ratePlan", ratePlan) :
                new ObjectParameter("ratePlan", typeof(int));
    
            var dtEffectiveFromParameter = dtEffectiveFrom.HasValue ?
                new ObjectParameter("dtEffectiveFrom", dtEffectiveFrom) :
                new ObjectParameter("dtEffectiveFrom", typeof(System.DateTime));
    
            var dtEffectiveToParameter = dtEffectiveTo.HasValue ?
                new ObjectParameter("dtEffectiveTo", dtEffectiveTo) :
                new ObjectParameter("dtEffectiveTo", typeof(System.DateTime));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspChangeHistory_Result>("uspChangeHistory", dtFromParameter, dtToParameter, roomTypeParameter, ratePlanParameter, dtEffectiveFromParameter, dtEffectiveToParameter, propIdParameter);
        }
    
        public virtual ObjectResult<uspChangeHistoryPropertyInformation_Result> uspChangeHistoryPropertyInformation(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, string id, Nullable<int> propId)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspChangeHistoryPropertyInformation_Result>("uspChangeHistoryPropertyInformation", dtFromParameter, dtToParameter, idParameter, propIdParameter);
        }
    
        public virtual ObjectResult<uspGetAllPropertyImagesWithHotelCount_Result> uspGetAllPropertyImagesWithHotelCount(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllPropertyImagesWithHotelCount_Result>("uspGetAllPropertyImagesWithHotelCount", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetPhotoSubCategoryByCatId_Result> uspGetPhotoSubCategoryByCatId(Nullable<int> iPhotoCatId, Nullable<int> iPropId)
        {
            var iPhotoCatIdParameter = iPhotoCatId.HasValue ?
                new ObjectParameter("iPhotoCatId", iPhotoCatId) :
                new ObjectParameter("iPhotoCatId", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPhotoSubCategoryByCatId_Result>("uspGetPhotoSubCategoryByCatId", iPhotoCatIdParameter, iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertInfoDDForCH_Result> uspGetPropertInfoDDForCH(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertInfoDDForCH_Result>("uspGetPropertInfoDDForCH", propIdParameter);
        }
    
        public virtual int uspPropertyRatePlanList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPropertyRatePlanList");
        }
    
        public virtual int uspSaveBiddingRates(Nullable<int> iActionBy, Nullable<int> iPropId)
        {
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveBiddingRates", iActionByParameter, iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertiesAndChainByPromoCode_Result> uspGetPropertiesAndChainByPromoCode(Nullable<int> promoId, string search)
        {
            var promoIdParameter = promoId.HasValue ?
                new ObjectParameter("PromoId", promoId) :
                new ObjectParameter("PromoId", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertiesAndChainByPromoCode_Result>("uspGetPropertiesAndChainByPromoCode", promoIdParameter, searchParameter);
        }
    
        public virtual int uspPropertyRatePlanList2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPropertyRatePlanList2");
        }
    
        public virtual int uspGetRatePlanOverViewBid(Nullable<int> propId, string dtStart)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRatePlanOverViewBid", propIdParameter, dtStartParameter);
        }
    
        public virtual int uspUpdateRateInventory(Nullable<int> iActionBy, Nullable<int> iPropId, Nullable<bool> closeOut)
        {
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var closeOutParameter = closeOut.HasValue ?
                new ObjectParameter("CloseOut", closeOut) :
                new ObjectParameter("CloseOut", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRateInventory", iActionByParameter, iPropIdParameter, closeOutParameter);
        }
    
        public virtual int uspSaveLeadTimeBidding(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveLeadTimeBidding", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, typParameter);
        }
    
        public virtual int uspSaveLOSBidding(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveLOSBidding", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, typParameter);
        }
    
        public virtual int uspSaveRoomsBidding(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveRoomsBidding", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, typParameter);
        }
    
        public virtual int uspSaveWeekenBidding(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveWeekenBidding", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, typParameter);
        }
    
        public virtual ObjectResult<uspGetAllPropertyForBooking_Result> uspGetAllPropertyForBooking(Nullable<int> localityId, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut)
        {
            var localityIdParameter = localityId.HasValue ?
                new ObjectParameter("LocalityId", localityId) :
                new ObjectParameter("LocalityId", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllPropertyForBooking_Result>("uspGetAllPropertyForBooking", localityIdParameter, dtCheckInParameter, dtCheckOutParameter);
        }
    
        public virtual int uspSaveBasicDisc(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<decimal> dDiscount, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var dDiscountParameter = dDiscount.HasValue ?
                new ObjectParameter("dDiscount", dDiscount) :
                new ObjectParameter("dDiscount", typeof(decimal));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveBasicDisc", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, dDiscountParameter, typParameter);
        }
    
        public virtual int uspSaveCTACTDClosedForAllDisc(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut, Nullable<bool> bCTA, Nullable<bool> bCTD, Nullable<int> typ)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            var bCTAParameter = bCTA.HasValue ?
                new ObjectParameter("bCTA", bCTA) :
                new ObjectParameter("bCTA", typeof(bool));
    
            var bCTDParameter = bCTD.HasValue ?
                new ObjectParameter("bCTD", bCTD) :
                new ObjectParameter("bCTD", typeof(bool));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveCTACTDClosedForAllDisc", iPropIdParameter, iActionByParameter, bCloseOutParameter, bCTAParameter, bCTDParameter, typParameter);
        }
    
        public virtual ObjectResult<uspGetBidLoadRateList_Result> uspGetBidLoadRateList(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBidLoadRateList_Result>("uspGetBidLoadRateList", propIdParameter);
        }
    
        public virtual ObjectResult<uspGetBidLoadRateUpgradeList_Result> uspGetBidLoadRateUpgradeList(Nullable<int> propId, string dtValidFrom, string dtValidTo)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtValidFromParameter = dtValidFrom != null ?
                new ObjectParameter("dtValidFrom", dtValidFrom) :
                new ObjectParameter("dtValidFrom", typeof(string));
    
            var dtValidToParameter = dtValidTo != null ?
                new ObjectParameter("dtValidTo", dtValidTo) :
                new ObjectParameter("dtValidTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBidLoadRateUpgradeList_Result>("uspGetBidLoadRateUpgradeList", propIdParameter, dtValidFromParameter, dtValidToParameter);
        }
    
        public virtual int uspUpdateAllRateBid(Nullable<int> iActionBy, Nullable<int> iPropId, Nullable<bool> closedOut)
        {
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var closedOutParameter = closedOut.HasValue ?
                new ObjectParameter("ClosedOut", closedOut) :
                new ObjectParameter("ClosedOut", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateAllRateBid", iActionByParameter, iPropIdParameter, closedOutParameter);
        }
    
        public virtual int spSetPrimaryH_False(Nullable<long> iPhotoId, Nullable<int> iPropId, Nullable<int> iPhotoCatId, Nullable<int> iPhotoSubCatId, Nullable<bool> bIsPrimary, Nullable<int> iActionBy)
        {
            var iPhotoIdParameter = iPhotoId.HasValue ?
                new ObjectParameter("iPhotoId", iPhotoId) :
                new ObjectParameter("iPhotoId", typeof(long));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iPhotoCatIdParameter = iPhotoCatId.HasValue ?
                new ObjectParameter("iPhotoCatId", iPhotoCatId) :
                new ObjectParameter("iPhotoCatId", typeof(int));
    
            var iPhotoSubCatIdParameter = iPhotoSubCatId.HasValue ?
                new ObjectParameter("iPhotoSubCatId", iPhotoSubCatId) :
                new ObjectParameter("iPhotoSubCatId", typeof(int));
    
            var bIsPrimaryParameter = bIsPrimary.HasValue ?
                new ObjectParameter("bIsPrimary", bIsPrimary) :
                new ObjectParameter("bIsPrimary", typeof(bool));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSetPrimaryH_False", iPhotoIdParameter, iPropIdParameter, iPhotoCatIdParameter, iPhotoSubCatIdParameter, bIsPrimaryParameter, iActionByParameter);
        }
    
        public virtual int spSetPrimaryR_False(Nullable<long> iPhotoId, Nullable<int> iPropId, Nullable<int> iPhotoCatId, Nullable<int> iPhotoSubCatId, Nullable<bool> bIsPrimary, Nullable<int> iActionBy)
        {
            var iPhotoIdParameter = iPhotoId.HasValue ?
                new ObjectParameter("iPhotoId", iPhotoId) :
                new ObjectParameter("iPhotoId", typeof(long));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iPhotoCatIdParameter = iPhotoCatId.HasValue ?
                new ObjectParameter("iPhotoCatId", iPhotoCatId) :
                new ObjectParameter("iPhotoCatId", typeof(int));
    
            var iPhotoSubCatIdParameter = iPhotoSubCatId.HasValue ?
                new ObjectParameter("iPhotoSubCatId", iPhotoSubCatId) :
                new ObjectParameter("iPhotoSubCatId", typeof(int));
    
            var bIsPrimaryParameter = bIsPrimary.HasValue ?
                new ObjectParameter("bIsPrimary", bIsPrimary) :
                new ObjectParameter("bIsPrimary", typeof(bool));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSetPrimaryR_False", iPhotoIdParameter, iPropIdParameter, iPhotoCatIdParameter, iPhotoSubCatIdParameter, bIsPrimaryParameter, iActionByParameter);
        }
    
        public virtual int uspGetBestPossibleRatesForDashBoard(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBestPossibleRatesForDashBoard", propIdParameter);
        }
    
        public virtual ObjectResult<uspGetBestPossibleRatesForDashBoard_Temp_Result> uspGetBestPossibleRatesForDashBoard_Temp(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBestPossibleRatesForDashBoard_Temp_Result>("uspGetBestPossibleRatesForDashBoard_Temp", propIdParameter);
        }
    
        public virtual ObjectResult<uspGetMacroAreas_Result> uspGetMacroAreas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetMacroAreas_Result>("uspGetMacroAreas");
        }
    
        public virtual int uspSaveInventoryDetails_Ph(Nullable<int> iPropId, Nullable<bool> bStopSell, Nullable<int> iActionBy)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var bStopSellParameter = bStopSell.HasValue ?
                new ObjectParameter("bStopSell", bStopSell) :
                new ObjectParameter("bStopSell", typeof(bool));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveInventoryDetails_Ph", iPropIdParameter, bStopSellParameter, iActionByParameter);
        }
    
        public virtual int uspSaveRoomPlanInventory_Ph(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<bool> bCloseOut)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var bCloseOutParameter = bCloseOut.HasValue ?
                new ObjectParameter("bCloseOut", bCloseOut) :
                new ObjectParameter("bCloseOut", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveRoomPlanInventory_Ph", iPropIdParameter, iActionByParameter, bCloseOutParameter);
        }
    
        public virtual ObjectResult<uspGetLocalitiesWithIpropId_Result> uspGetLocalitiesWithIpropId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetLocalitiesWithIpropId_Result>("uspGetLocalitiesWithIpropId");
        }
    
        public virtual int uspGetMAXDiscountofCompSetLast7(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetMAXDiscountofCompSetLast7", propIdParameter);
        }
    
        public virtual ObjectResult<uspGetRatePlanForMapping_Result> uspGetRatePlanForMapping(Nullable<int> iPropId, Nullable<int> iRPID)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iRPIDParameter = iRPID.HasValue ?
                new ObjectParameter("iRPID", iRPID) :
                new ObjectParameter("iRPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRatePlanForMapping_Result>("uspGetRatePlanForMapping", iPropIdParameter, iRPIDParameter);
        }
    
        public virtual int uspSaveInventoryRoomRatePlanPrices(Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<decimal> dSingleRate, Nullable<decimal> dDoubleRate, Nullable<decimal> dTripleRate, Nullable<decimal> dQuadrupleRate, Nullable<decimal> dQuintrupleRate)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var dSingleRateParameter = dSingleRate.HasValue ?
                new ObjectParameter("dSingleRate", dSingleRate) :
                new ObjectParameter("dSingleRate", typeof(decimal));
    
            var dDoubleRateParameter = dDoubleRate.HasValue ?
                new ObjectParameter("dDoubleRate", dDoubleRate) :
                new ObjectParameter("dDoubleRate", typeof(decimal));
    
            var dTripleRateParameter = dTripleRate.HasValue ?
                new ObjectParameter("dTripleRate", dTripleRate) :
                new ObjectParameter("dTripleRate", typeof(decimal));
    
            var dQuadrupleRateParameter = dQuadrupleRate.HasValue ?
                new ObjectParameter("dQuadrupleRate", dQuadrupleRate) :
                new ObjectParameter("dQuadrupleRate", typeof(decimal));
    
            var dQuintrupleRateParameter = dQuintrupleRate.HasValue ?
                new ObjectParameter("dQuintrupleRate", dQuintrupleRate) :
                new ObjectParameter("dQuintrupleRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveInventoryRoomRatePlanPrices", iPropIdParameter, iActionByParameter, dSingleRateParameter, dDoubleRateParameter, dTripleRateParameter, dQuadrupleRateParameter, dQuintrupleRateParameter);
        }
    
        public virtual int uspUpdateRatesOfChildRatePlans(Nullable<int> iPropId, Nullable<int> iParentRP, Nullable<long> iRoomId, Nullable<System.DateTime> dtInventoryDate, Nullable<decimal> dSingleRate, Nullable<decimal> dDoubleRate, Nullable<decimal> dTripleRate, Nullable<decimal> dQuadrupleRate, Nullable<decimal> dQuintrupleRate, Nullable<int> iActionBy)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iParentRPParameter = iParentRP.HasValue ?
                new ObjectParameter("iParentRP", iParentRP) :
                new ObjectParameter("iParentRP", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            var dtInventoryDateParameter = dtInventoryDate.HasValue ?
                new ObjectParameter("dtInventoryDate", dtInventoryDate) :
                new ObjectParameter("dtInventoryDate", typeof(System.DateTime));
    
            var dSingleRateParameter = dSingleRate.HasValue ?
                new ObjectParameter("dSingleRate", dSingleRate) :
                new ObjectParameter("dSingleRate", typeof(decimal));
    
            var dDoubleRateParameter = dDoubleRate.HasValue ?
                new ObjectParameter("dDoubleRate", dDoubleRate) :
                new ObjectParameter("dDoubleRate", typeof(decimal));
    
            var dTripleRateParameter = dTripleRate.HasValue ?
                new ObjectParameter("dTripleRate", dTripleRate) :
                new ObjectParameter("dTripleRate", typeof(decimal));
    
            var dQuadrupleRateParameter = dQuadrupleRate.HasValue ?
                new ObjectParameter("dQuadrupleRate", dQuadrupleRate) :
                new ObjectParameter("dQuadrupleRate", typeof(decimal));
    
            var dQuintrupleRateParameter = dQuintrupleRate.HasValue ?
                new ObjectParameter("dQuintrupleRate", dQuintrupleRate) :
                new ObjectParameter("dQuintrupleRate", typeof(decimal));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRatesOfChildRatePlans", iPropIdParameter, iParentRPParameter, iRoomIdParameter, dtInventoryDateParameter, dSingleRateParameter, dDoubleRateParameter, dTripleRateParameter, dQuadrupleRateParameter, dQuintrupleRateParameter, iActionByParameter);
        }
    
        public virtual int uspUpdateRatesOfLinkedRatePlan(Nullable<int> iPropId, Nullable<int> iLinkedRP)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iLinkedRPParameter = iLinkedRP.HasValue ?
                new ObjectParameter("iLinkedRP", iLinkedRP) :
                new ObjectParameter("iLinkedRP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRatesOfLinkedRatePlan", iPropIdParameter, iLinkedRPParameter);
        }
    
        public virtual int uspUpdateRatesOfLinkedRatePlanForUpdate(Nullable<int> iPropId, Nullable<int> iLinkedRP, Nullable<int> iChanged)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iLinkedRPParameter = iLinkedRP.HasValue ?
                new ObjectParameter("iLinkedRP", iLinkedRP) :
                new ObjectParameter("iLinkedRP", typeof(int));
    
            var iChangedParameter = iChanged.HasValue ?
                new ObjectParameter("iChanged", iChanged) :
                new ObjectParameter("iChanged", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRatesOfLinkedRatePlanForUpdate", iPropIdParameter, iLinkedRPParameter, iChangedParameter);
        }
    
        public virtual ObjectResult<spGetetbllocalityList_Result> spGetetbllocalityList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetetbllocalityList_Result>("spGetetbllocalityList");
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckTaxRecordExists(Nullable<System.DateTime> stayFrom, Nullable<System.DateTime> stayTo, Nullable<int> propId, Nullable<int> roomId, ObjectParameter totalCount)
        {
            var stayFromParameter = stayFrom.HasValue ?
                new ObjectParameter("StayFrom", stayFrom) :
                new ObjectParameter("StayFrom", typeof(System.DateTime));
    
            var stayToParameter = stayTo.HasValue ?
                new ObjectParameter("StayTo", stayTo) :
                new ObjectParameter("StayTo", typeof(System.DateTime));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckTaxRecordExists", stayFromParameter, stayToParameter, propIdParameter, roomIdParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetRecentSavings_Result> uspGetRecentSavings(Nullable<int> id, string type, Nullable<int> startRowIndex, string sCurrencyCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRecentSavings_Result>("uspGetRecentSavings", idParameter, typeParameter, startRowIndexParameter, sCurrencyCodeParameter);
        }
    
        public virtual int uspInsertRecordsForRecentSavings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertRecordsForRecentSavings");
        }
    
        public virtual ObjectResult<Nullable<int>> uspSetAdditionalCommision(Nullable<int> iAdditionalCommisionId, string dtCommisionStartDate, string dtCommisionEndDate, Nullable<bool> bActive, Nullable<decimal> dCommission, Nullable<int> iPropId, Nullable<int> iActionBy)
        {
            var iAdditionalCommisionIdParameter = iAdditionalCommisionId.HasValue ?
                new ObjectParameter("iAdditionalCommisionId", iAdditionalCommisionId) :
                new ObjectParameter("iAdditionalCommisionId", typeof(int));
    
            var dtCommisionStartDateParameter = dtCommisionStartDate != null ?
                new ObjectParameter("dtCommisionStartDate", dtCommisionStartDate) :
                new ObjectParameter("dtCommisionStartDate", typeof(string));
    
            var dtCommisionEndDateParameter = dtCommisionEndDate != null ?
                new ObjectParameter("dtCommisionEndDate", dtCommisionEndDate) :
                new ObjectParameter("dtCommisionEndDate", typeof(string));
    
            var bActiveParameter = bActive.HasValue ?
                new ObjectParameter("bActive", bActive) :
                new ObjectParameter("bActive", typeof(bool));
    
            var dCommissionParameter = dCommission.HasValue ?
                new ObjectParameter("dCommission", dCommission) :
                new ObjectParameter("dCommission", typeof(decimal));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspSetAdditionalCommision", iAdditionalCommisionIdParameter, dtCommisionStartDateParameter, dtCommisionEndDateParameter, bActiveParameter, dCommissionParameter, iPropIdParameter, iActionByParameter);
        }
    
        public virtual int InsertGenerator(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGenerator", tableNameParameter);
        }
    
        public virtual ObjectResult<uspBookingList_Result> uspBookingList(Nullable<int> propid, string datetype, string checkin, string checkout, string bookingtype, string confirmationno, string firstname, string lastname, string email, string status, string sortDirection, string sortBy, Nullable<int> startRowIndex, Nullable<int> maximumRows)
        {
            var propidParameter = propid.HasValue ?
                new ObjectParameter("propid", propid) :
                new ObjectParameter("propid", typeof(int));
    
            var datetypeParameter = datetype != null ?
                new ObjectParameter("datetype", datetype) :
                new ObjectParameter("datetype", typeof(string));
    
            var checkinParameter = checkin != null ?
                new ObjectParameter("checkin", checkin) :
                new ObjectParameter("checkin", typeof(string));
    
            var checkoutParameter = checkout != null ?
                new ObjectParameter("checkout", checkout) :
                new ObjectParameter("checkout", typeof(string));
    
            var bookingtypeParameter = bookingtype != null ?
                new ObjectParameter("bookingtype", bookingtype) :
                new ObjectParameter("bookingtype", typeof(string));
    
            var confirmationnoParameter = confirmationno != null ?
                new ObjectParameter("confirmationno", confirmationno) :
                new ObjectParameter("confirmationno", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBookingList_Result>("uspBookingList", propidParameter, datetypeParameter, checkinParameter, checkoutParameter, bookingtypeParameter, confirmationnoParameter, firstnameParameter, lastnameParameter, emailParameter, statusParameter, sortDirectionParameter, sortByParameter, startRowIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<uspChangeHistoryPromotions_Result> uspChangeHistoryPromotions(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, string id)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspChangeHistoryPromotions_Result>("uspChangeHistoryPromotions", dtFromParameter, dtToParameter, idParameter);
        }
    
        public virtual ObjectResult<uspChangeHistoryPropertyPromotionMap_Result> uspChangeHistoryPropertyPromotionMap(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, Nullable<int> id, Nullable<int> propId)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspChangeHistoryPropertyPromotionMap_Result>("uspChangeHistoryPropertyPromotionMap", dtFromParameter, dtToParameter, idParameter, propIdParameter);
        }
    
        public virtual ObjectResult<uspChangeHistoryPropertyRatePlanMap_Result> uspChangeHistoryPropertyRatePlanMap(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, Nullable<int> propId)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspChangeHistoryPropertyRatePlanMap_Result>("uspChangeHistoryPropertyRatePlanMap", dtFromParameter, dtToParameter, propIdParameter);
        }
    
        public virtual ObjectResult<uspGetCountryCode_Result> uspGetCountryCode(string iP)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCountryCode_Result>("uspGetCountryCode", iPParameter);
        }
    
        public virtual ObjectResult<uspGetPromotionalHotels_Result> uspGetPromotionalHotels(string sCurrencyCode)
        {
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPromotionalHotels_Result>("uspGetPromotionalHotels", sCurrencyCodeParameter);
        }
    
        public virtual ObjectResult<uspGetRankManagement_Result> uspGetRankManagement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRankManagement_Result>("uspGetRankManagement");
        }
    
        public virtual ObjectResult<uspGetPendingNegotiationByCust_Result> uspGetPendingNegotiationByCust(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string bookingid, string emailmobile, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            var emailmobileParameter = emailmobile != null ?
                new ObjectParameter("emailmobile", emailmobile) :
                new ObjectParameter("emailmobile", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPendingNegotiationByCust_Result>("uspGetPendingNegotiationByCust", iCustomerIdParameter, startRowIndexParameter, bookingidParameter, emailmobileParameter, currencyParameter);
        }
    
        public virtual ObjectResult<uspUpdateNegotiationByHotel_Result> uspUpdateNegotiationByHotel(Nullable<int> iD, string cStatus, Nullable<int> counterOffer, Nullable<int> user)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var counterOfferParameter = counterOffer.HasValue ?
                new ObjectParameter("CounterOffer", counterOffer) :
                new ObjectParameter("CounterOffer", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspUpdateNegotiationByHotel_Result>("uspUpdateNegotiationByHotel", iDParameter, cStatusParameter, counterOfferParameter, userParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetailsByBookingId_Result> uspGetBookingDetailsByBookingId(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetailsByBookingId_Result>("uspGetBookingDetailsByBookingId", bookingidParameter);
        }
    
        public virtual int uspGetCurrentNegotiation(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string bookingid, string emailmobile, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            var emailmobileParameter = emailmobile != null ?
                new ObjectParameter("emailmobile", emailmobile) :
                new ObjectParameter("emailmobile", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetCurrentNegotiation", iCustomerIdParameter, startRowIndexParameter, bookingidParameter, emailmobileParameter, currencyParameter);
        }
    
        public virtual int uspGetCurrentNegotiationConfirmed(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetCurrentNegotiationConfirmed", iCustomerIdParameter, startRowIndexParameter, currencyParameter);
        }
    
        public virtual ObjectResult<uspGetMasterLog_Result> uspGetMasterLog(string fromdate, string todate, string table)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetMasterLog_Result>("uspGetMasterLog", fromdateParameter, todateParameter, tableParameter);
        }
    
        public virtual int uspGetSearchedHotelsDetails(Nullable<int> iPlaceID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<int> iAreaType, string sHotelSearch, Nullable<int> iFilterLocality, string sStarRating, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> bLogin, Nullable<int> iUserId, Nullable<bool> specialDeal, string sCurrencyCode, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<bool> internet, Nullable<bool> parking, Nullable<bool> nonSmoking, Nullable<bool> facilitiesDifferentlyAbled, Nullable<bool> fitnessCenter, Nullable<bool> familyRooms, Nullable<bool> restaurant, Nullable<bool> roomService, Nullable<bool> transfers, Nullable<bool> petFriendly, Nullable<bool> spa, Nullable<bool> outdoorPool, Nullable<bool> indoorPool, Nullable<bool> childcare, Nullable<bool> childrensClub, Nullable<bool> laundryServices, Nullable<bool> airconditionerHotel)
        {
            var iPlaceIDParameter = iPlaceID.HasValue ?
                new ObjectParameter("iPlaceID", iPlaceID) :
                new ObjectParameter("iPlaceID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var iAreaTypeParameter = iAreaType.HasValue ?
                new ObjectParameter("iAreaType", iAreaType) :
                new ObjectParameter("iAreaType", typeof(int));
    
            var sHotelSearchParameter = sHotelSearch != null ?
                new ObjectParameter("sHotelSearch", sHotelSearch) :
                new ObjectParameter("sHotelSearch", typeof(string));
    
            var iFilterLocalityParameter = iFilterLocality.HasValue ?
                new ObjectParameter("iFilterLocality", iFilterLocality) :
                new ObjectParameter("iFilterLocality", typeof(int));
    
            var sStarRatingParameter = sStarRating != null ?
                new ObjectParameter("sStarRating", sStarRating) :
                new ObjectParameter("sStarRating", typeof(string));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var internetParameter = internet.HasValue ?
                new ObjectParameter("Internet", internet) :
                new ObjectParameter("Internet", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("Parking", parking) :
                new ObjectParameter("Parking", typeof(bool));
    
            var nonSmokingParameter = nonSmoking.HasValue ?
                new ObjectParameter("NonSmoking", nonSmoking) :
                new ObjectParameter("NonSmoking", typeof(bool));
    
            var facilitiesDifferentlyAbledParameter = facilitiesDifferentlyAbled.HasValue ?
                new ObjectParameter("FacilitiesDifferentlyAbled", facilitiesDifferentlyAbled) :
                new ObjectParameter("FacilitiesDifferentlyAbled", typeof(bool));
    
            var fitnessCenterParameter = fitnessCenter.HasValue ?
                new ObjectParameter("FitnessCenter", fitnessCenter) :
                new ObjectParameter("FitnessCenter", typeof(bool));
    
            var familyRoomsParameter = familyRooms.HasValue ?
                new ObjectParameter("FamilyRooms", familyRooms) :
                new ObjectParameter("FamilyRooms", typeof(bool));
    
            var restaurantParameter = restaurant.HasValue ?
                new ObjectParameter("Restaurant", restaurant) :
                new ObjectParameter("Restaurant", typeof(bool));
    
            var roomServiceParameter = roomService.HasValue ?
                new ObjectParameter("RoomService", roomService) :
                new ObjectParameter("RoomService", typeof(bool));
    
            var transfersParameter = transfers.HasValue ?
                new ObjectParameter("Transfers", transfers) :
                new ObjectParameter("Transfers", typeof(bool));
    
            var petFriendlyParameter = petFriendly.HasValue ?
                new ObjectParameter("PetFriendly", petFriendly) :
                new ObjectParameter("PetFriendly", typeof(bool));
    
            var spaParameter = spa.HasValue ?
                new ObjectParameter("Spa", spa) :
                new ObjectParameter("Spa", typeof(bool));
    
            var outdoorPoolParameter = outdoorPool.HasValue ?
                new ObjectParameter("OutdoorPool", outdoorPool) :
                new ObjectParameter("OutdoorPool", typeof(bool));
    
            var indoorPoolParameter = indoorPool.HasValue ?
                new ObjectParameter("IndoorPool", indoorPool) :
                new ObjectParameter("IndoorPool", typeof(bool));
    
            var childcareParameter = childcare.HasValue ?
                new ObjectParameter("Childcare", childcare) :
                new ObjectParameter("Childcare", typeof(bool));
    
            var childrensClubParameter = childrensClub.HasValue ?
                new ObjectParameter("ChildrensClub", childrensClub) :
                new ObjectParameter("ChildrensClub", typeof(bool));
    
            var laundryServicesParameter = laundryServices.HasValue ?
                new ObjectParameter("LaundryServices", laundryServices) :
                new ObjectParameter("LaundryServices", typeof(bool));
    
            var airconditionerHotelParameter = airconditionerHotel.HasValue ?
                new ObjectParameter("AirconditionerHotel", airconditionerHotel) :
                new ObjectParameter("AirconditionerHotel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetSearchedHotelsDetails", iPlaceIDParameter, dtCheckInParameter, dtCheckOutParameter, iAreaTypeParameter, sHotelSearchParameter, iFilterLocalityParameter, sStarRatingParameter, dMinPriceParameter, dMaxPriceParameter, bLoginParameter, iUserIdParameter, specialDealParameter, sCurrencyCodeParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, internetParameter, parkingParameter, nonSmokingParameter, facilitiesDifferentlyAbledParameter, fitnessCenterParameter, familyRoomsParameter, restaurantParameter, roomServiceParameter, transfersParameter, petFriendlyParameter, spaParameter, outdoorPoolParameter, indoorPoolParameter, childcareParameter, childrensClubParameter, laundryServicesParameter, airconditionerHotelParameter);
        }
    
        public virtual int uspGetYouMayLikeHotels(Nullable<long> iCustomerId)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetYouMayLikeHotels", iCustomerIdParameter);
        }
    
        public virtual int uspTransferTGDataToOneFineRate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransferTGDataToOneFineRate");
        }
    
        public virtual int uspGetAllCurrency(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetAllCurrency", countryCodeParameter);
        }
    
        public virtual int uspGetFutureBookingsByCust(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string bookingid, string emailmobile, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            var emailmobileParameter = emailmobile != null ?
                new ObjectParameter("emailmobile", emailmobile) :
                new ObjectParameter("emailmobile", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetFutureBookingsByCust", iCustomerIdParameter, startRowIndexParameter, bookingidParameter, emailmobileParameter, currencyParameter);
        }
    
        public virtual int uspGetPastBookingsByCust(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string bookingid, string emailmobile, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            var emailmobileParameter = emailmobile != null ?
                new ObjectParameter("emailmobile", emailmobile) :
                new ObjectParameter("emailmobile", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetPastBookingsByCust", iCustomerIdParameter, startRowIndexParameter, bookingidParameter, emailmobileParameter, currencyParameter);
        }
    
        public virtual int uspGetUnSuccessfulBookingsByCust(Nullable<int> iCustomerId, Nullable<int> startRowIndex, string bookingid, string emailmobile, string currency)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            var emailmobileParameter = emailmobile != null ?
                new ObjectParameter("emailmobile", emailmobile) :
                new ObjectParameter("emailmobile", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetUnSuccessfulBookingsByCust", iCustomerIdParameter, startRowIndexParameter, bookingidParameter, emailmobileParameter, currencyParameter);
        }
    
        public virtual ObjectResult<uspGetWishListByCustomerId_Result> uspGetWishListByCustomerId(Nullable<int> iUserId, string sCurrencyCode)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetWishListByCustomerId_Result>("uspGetWishListByCustomerId", iUserIdParameter, sCurrencyCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spGetUserByReferralCode(string sReferralCode)
        {
            var sReferralCodeParameter = sReferralCode != null ?
                new ObjectParameter("sReferralCode", sReferralCode) :
                new ObjectParameter("sReferralCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spGetUserByReferralCode", sReferralCodeParameter);
        }
    
        public virtual int UpdateNegotiationTriggerDiscount(Nullable<int> recId, string rectype, Nullable<decimal> negotiationVal, Nullable<int> propId)
        {
            var recIdParameter = recId.HasValue ?
                new ObjectParameter("RecId", recId) :
                new ObjectParameter("RecId", typeof(int));
    
            var rectypeParameter = rectype != null ?
                new ObjectParameter("rectype", rectype) :
                new ObjectParameter("rectype", typeof(string));
    
            var negotiationValParameter = negotiationVal.HasValue ?
                new ObjectParameter("NegotiationVal", negotiationVal) :
                new ObjectParameter("NegotiationVal", typeof(decimal));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateNegotiationTriggerDiscount", recIdParameter, rectypeParameter, negotiationValParameter, propIdParameter);
        }
    
        public virtual int uspCheckExistingBidDates(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckExistingBidDates", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetAllLoyalityPointsCustomerData_Result> uspGetAllLoyalityPointsCustomerData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllLoyalityPointsCustomerData_Result>("uspGetAllLoyalityPointsCustomerData");
        }
    
        public virtual int uspGetAllPropertyNames_Search(string txt, Nullable<int> icityid, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut)
        {
            var txtParameter = txt != null ?
                new ObjectParameter("txt", txt) :
                new ObjectParameter("txt", typeof(string));
    
            var icityidParameter = icityid.HasValue ?
                new ObjectParameter("icityid", icityid) :
                new ObjectParameter("icityid", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetAllPropertyNames_Search", txtParameter, icityidParameter, dtCheckInParameter, dtCheckOutParameter);
        }
    
        public virtual ObjectResult<uspGetBiddingDumpByProp_Result> uspGetBiddingDumpByProp(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBiddingDumpByProp_Result>("uspGetBiddingDumpByProp", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetGuestBookingsByBookingId_Result> uspGetGuestBookingsByBookingId(Nullable<long> customerId, string bookingid)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(long));
    
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetGuestBookingsByBookingId_Result>("uspGetGuestBookingsByBookingId", customerIdParameter, bookingidParameter);
        }
    
        public virtual int uspGetOfferReviewDetailsbyID(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetOfferReviewDetailsbyID", propIdParameter);
        }
    
        public virtual int uspGetOfferReviewHotelAmenties(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetOfferReviewHotelAmenties", propIdParameter);
        }
    
        public virtual int uspGetOfferReviewRoomAmenties(Nullable<int> propId, Nullable<int> roomId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetOfferReviewRoomAmenties", propIdParameter, roomIdParameter);
        }
    
        public virtual ObjectResult<uspGetOfferReviewRoomRatePlans_Result> uspGetOfferReviewRoomRatePlans(Nullable<int> propId, Nullable<int> roomId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOfferReviewRoomRatePlans_Result>("uspGetOfferReviewRoomRatePlans", propIdParameter, roomIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertyData_Result> uspGetPropertyData(Nullable<int> iBookingID)
        {
            var iBookingIDParameter = iBookingID.HasValue ?
                new ObjectParameter("iBookingID", iBookingID) :
                new ObjectParameter("iBookingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertyData_Result>("uspGetPropertyData", iBookingIDParameter);
        }
    
        public virtual ObjectResult<uspGetRoomDetails_Result> uspGetRoomDetails(Nullable<int> propid, Nullable<int> roomid, string currency)
        {
            var propidParameter = propid.HasValue ?
                new ObjectParameter("propid", propid) :
                new ObjectParameter("propid", typeof(int));
    
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRoomDetails_Result>("uspGetRoomDetails", propidParameter, roomidParameter, currencyParameter);
        }
    
        public virtual ObjectResult<uspGetRoomUpgrade_Result> uspGetRoomUpgrade(Nullable<long> roomId, Nullable<int> ratePlanId, Nullable<int> iPropId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(long));
    
            var ratePlanIdParameter = ratePlanId.HasValue ?
                new ObjectParameter("RatePlanId", ratePlanId) :
                new ObjectParameter("RatePlanId", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRoomUpgrade_Result>("uspGetRoomUpgrade", roomIdParameter, ratePlanIdParameter, iPropIdParameter);
        }
    
        public virtual int uspGetSearchedHotels(Nullable<int> iPlaceID, Nullable<int> iAreaType, string sHotelSearch, Nullable<bool> iReqType)
        {
            var iPlaceIDParameter = iPlaceID.HasValue ?
                new ObjectParameter("iPlaceID", iPlaceID) :
                new ObjectParameter("iPlaceID", typeof(int));
    
            var iAreaTypeParameter = iAreaType.HasValue ?
                new ObjectParameter("iAreaType", iAreaType) :
                new ObjectParameter("iAreaType", typeof(int));
    
            var sHotelSearchParameter = sHotelSearch != null ?
                new ObjectParameter("sHotelSearch", sHotelSearch) :
                new ObjectParameter("sHotelSearch", typeof(string));
    
            var iReqTypeParameter = iReqType.HasValue ?
                new ObjectParameter("iReqType", iReqType) :
                new ObjectParameter("iReqType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetSearchedHotels", iPlaceIDParameter, iAreaTypeParameter, sHotelSearchParameter, iReqTypeParameter);
        }
    
        public virtual int uspGetSearchedHotelsLocality(Nullable<int> iPlaceID, Nullable<int> iAreaType, string sLocalitySearch, Nullable<int> iReqType)
        {
            var iPlaceIDParameter = iPlaceID.HasValue ?
                new ObjectParameter("iPlaceID", iPlaceID) :
                new ObjectParameter("iPlaceID", typeof(int));
    
            var iAreaTypeParameter = iAreaType.HasValue ?
                new ObjectParameter("iAreaType", iAreaType) :
                new ObjectParameter("iAreaType", typeof(int));
    
            var sLocalitySearchParameter = sLocalitySearch != null ?
                new ObjectParameter("sLocalitySearch", sLocalitySearch) :
                new ObjectParameter("sLocalitySearch", typeof(string));
    
            var iReqTypeParameter = iReqType.HasValue ?
                new ObjectParameter("iReqType", iReqType) :
                new ObjectParameter("iReqType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetSearchedHotelsLocality", iPlaceIDParameter, iAreaTypeParameter, sLocalitySearchParameter, iReqTypeParameter);
        }
    
        public virtual ObjectResult<uspGetSearchText_Result> uspGetSearchText(string searchText, string searchText2)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var searchText2Parameter = searchText2 != null ?
                new ObjectParameter("SearchText2", searchText2) :
                new ObjectParameter("SearchText2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSearchText_Result>("uspGetSearchText", searchTextParameter, searchText2Parameter);
        }
    
        public virtual ObjectResult<uspGetUnfinishedBalanceToBePaidData_Result> uspGetUnfinishedBalanceToBePaidData(Nullable<long> iBookingID)
        {
            var iBookingIDParameter = iBookingID.HasValue ?
                new ObjectParameter("iBookingID", iBookingID) :
                new ObjectParameter("iBookingID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUnfinishedBalanceToBePaidData_Result>("uspGetUnfinishedBalanceToBePaidData", iBookingIDParameter);
        }
    
        public virtual ObjectResult<uspGetUnfinishedHotelNotSelected_Result> uspGetUnfinishedHotelNotSelected(Nullable<long> iBookingID)
        {
            var iBookingIDParameter = iBookingID.HasValue ?
                new ObjectParameter("iBookingID", iBookingID) :
                new ObjectParameter("iBookingID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUnfinishedHotelNotSelected_Result>("uspGetUnfinishedHotelNotSelected", iBookingIDParameter);
        }
    
        public virtual int uspGetUnFinishedTransactionData(string sSearchType, string sName, string sEmailID, string iTelephone, Nullable<long> iBookingID)
        {
            var sSearchTypeParameter = sSearchType != null ?
                new ObjectParameter("sSearchType", sSearchType) :
                new ObjectParameter("sSearchType", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var sEmailIDParameter = sEmailID != null ?
                new ObjectParameter("sEmailID", sEmailID) :
                new ObjectParameter("sEmailID", typeof(string));
    
            var iTelephoneParameter = iTelephone != null ?
                new ObjectParameter("iTelephone", iTelephone) :
                new ObjectParameter("iTelephone", typeof(string));
    
            var iBookingIDParameter = iBookingID.HasValue ?
                new ObjectParameter("iBookingID", iBookingID) :
                new ObjectParameter("iBookingID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetUnFinishedTransactionData", sSearchTypeParameter, sNameParameter, sEmailIDParameter, iTelephoneParameter, iBookingIDParameter);
        }
    
        public virtual ObjectResult<uspGetUnfinishedTransactionNegotiationByBookingId_Result> uspGetUnfinishedTransactionNegotiationByBookingId(string bookingid)
        {
            var bookingidParameter = bookingid != null ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUnfinishedTransactionNegotiationByBookingId_Result>("uspGetUnfinishedTransactionNegotiationByBookingId", bookingidParameter);
        }
    
        public virtual int uspGetUpgradeChargesOverview(Nullable<int> iPropId, string dtStart)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetUpgradeChargesOverview", iPropIdParameter, dtStartParameter);
        }
    
        public virtual int uspNegotiationNotificationList(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("propId", propId) :
                new ObjectParameter("propId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspNegotiationNotificationList", propIdParameter);
        }
    
        public virtual int uspSaveTravelGuruSearchData(string sessionid)
        {
            var sessionidParameter = sessionid != null ?
                new ObjectParameter("sessionid", sessionid) :
                new ObjectParameter("sessionid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveTravelGuruSearchData", sessionidParameter);
        }
    
        public virtual int uspSearchRoomsForHotel(Nullable<int> iHotelID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<bool> bLogin, string currency, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> specialDeal)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchRoomsForHotel", iHotelIDParameter, dtCheckInParameter, dtCheckOutParameter, bLoginParameter, currencyParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, dMinPriceParameter, dMaxPriceParameter, specialDealParameter);
        }
    
        public virtual int uspSetActiveDeactiveByParent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetActiveDeactiveByParent", idParameter);
        }
    
        public virtual int uspSetRefferalPoints(Nullable<long> iReferralId, Nullable<long> iSingnUpId)
        {
            var iReferralIdParameter = iReferralId.HasValue ?
                new ObjectParameter("iReferralId", iReferralId) :
                new ObjectParameter("iReferralId", typeof(long));
    
            var iSingnUpIdParameter = iSingnUpId.HasValue ?
                new ObjectParameter("iSingnUpId", iSingnUpId) :
                new ObjectParameter("iSingnUpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetRefferalPoints", iReferralIdParameter, iSingnUpIdParameter);
        }
    
        public virtual int uspUpdateAmenitiesInLookup(Nullable<int> iPropId, Nullable<long> iRoomId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateAmenitiesInLookup", iPropIdParameter, iRoomIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUpdateBookingStatus(Nullable<long> bookingId, string bookingStatus)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(long));
    
            var bookingStatusParameter = bookingStatus != null ?
                new ObjectParameter("BookingStatus", bookingStatus) :
                new ObjectParameter("BookingStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUpdateBookingStatus", bookingIdParameter, bookingStatusParameter);
        }
    
        public virtual int uspRemovetblPropertyRoomTaxMaps(Nullable<int> propTaxId)
        {
            var propTaxIdParameter = propTaxId.HasValue ?
                new ObjectParameter("PropTaxId", propTaxId) :
                new ObjectParameter("PropTaxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemovetblPropertyRoomTaxMaps", propTaxIdParameter);
        }
    
        public virtual int uspCalculateRankOfHotel(Nullable<System.DateTime> dtCheckIn, Nullable<int> propId)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateRankOfHotel", dtCheckInParameter, propIdParameter);
        }
    
        public virtual int uspCalculateRankOfHotels(Nullable<System.DateTime> dtCheckIn)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateRankOfHotels", dtCheckInParameter);
        }
    
        public virtual int uspCheckIfNegotiationApplicableByBid(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckIfNegotiationApplicableByBid", iBookingIdParameter);
        }
    
        public virtual int uspGetBidSimulateData(Nullable<int> propId, string dtArrival, string dtBooking, Nullable<short> lOS, Nullable<short> rooms, Nullable<short> occupancy)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtArrivalParameter = dtArrival != null ?
                new ObjectParameter("dtArrival", dtArrival) :
                new ObjectParameter("dtArrival", typeof(string));
    
            var dtBookingParameter = dtBooking != null ?
                new ObjectParameter("dtBooking", dtBooking) :
                new ObjectParameter("dtBooking", typeof(string));
    
            var lOSParameter = lOS.HasValue ?
                new ObjectParameter("LOS", lOS) :
                new ObjectParameter("LOS", typeof(short));
    
            var roomsParameter = rooms.HasValue ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(short));
    
            var occupancyParameter = occupancy.HasValue ?
                new ObjectParameter("Occupancy", occupancy) :
                new ObjectParameter("Occupancy", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidSimulateData", propIdParameter, dtArrivalParameter, dtBookingParameter, lOSParameter, roomsParameter, occupancyParameter);
        }
    
        public virtual int uspGetBidSimulateDataofCompSet(Nullable<int> propId, string dtArrival, string dtBooking, Nullable<short> lOS, Nullable<short> rooms, Nullable<short> occupancy)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtArrivalParameter = dtArrival != null ?
                new ObjectParameter("dtArrival", dtArrival) :
                new ObjectParameter("dtArrival", typeof(string));
    
            var dtBookingParameter = dtBooking != null ?
                new ObjectParameter("dtBooking", dtBooking) :
                new ObjectParameter("dtBooking", typeof(string));
    
            var lOSParameter = lOS.HasValue ?
                new ObjectParameter("LOS", lOS) :
                new ObjectParameter("LOS", typeof(short));
    
            var roomsParameter = rooms.HasValue ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(short));
    
            var occupancyParameter = occupancy.HasValue ?
                new ObjectParameter("Occupancy", occupancy) :
                new ObjectParameter("Occupancy", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidSimulateDataofCompSet", propIdParameter, dtArrivalParameter, dtBookingParameter, lOSParameter, roomsParameter, occupancyParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetails_Result> uspGetBookingDetails(Nullable<int> bookingId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetails_Result>("uspGetBookingDetails", bookingIdParameter);
        }
    
        public virtual ObjectResult<uspGetCustomerRewardPointData_Result> uspGetCustomerRewardPointData(Nullable<long> iCustomerId)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCustomerRewardPointData_Result>("uspGetCustomerRewardPointData", iCustomerIdParameter);
        }
    
        public virtual ObjectResult<uspGetHotelDetailsbyID_TG_Result> uspGetHotelDetailsbyID_TG(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetHotelDetailsbyID_TG_Result>("uspGetHotelDetailsbyID_TG", vendorIdParameter);
        }
    
        public virtual int uspGetHotelsDetailsForTG(Nullable<int> iPlaceID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<int> iAreaType, string sHotelSearch, Nullable<int> iFilterLocality, string sStarRating, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> bLogin, Nullable<int> iUserId, Nullable<bool> specialDeal, string sCurrencyCode, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<bool> internet, Nullable<bool> parking, Nullable<bool> nonSmoking, Nullable<bool> facilitiesDifferentlyAbled, Nullable<bool> fitnessCenter, Nullable<bool> familyRooms, Nullable<bool> restaurant, Nullable<bool> roomService, Nullable<bool> transfers, Nullable<bool> petFriendly, Nullable<bool> spa, Nullable<bool> outdoorPool, Nullable<bool> indoorPool, Nullable<bool> childcare, Nullable<bool> childrensClub, Nullable<bool> laundryServices, Nullable<bool> airconditionerHotel)
        {
            var iPlaceIDParameter = iPlaceID.HasValue ?
                new ObjectParameter("iPlaceID", iPlaceID) :
                new ObjectParameter("iPlaceID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var iAreaTypeParameter = iAreaType.HasValue ?
                new ObjectParameter("iAreaType", iAreaType) :
                new ObjectParameter("iAreaType", typeof(int));
    
            var sHotelSearchParameter = sHotelSearch != null ?
                new ObjectParameter("sHotelSearch", sHotelSearch) :
                new ObjectParameter("sHotelSearch", typeof(string));
    
            var iFilterLocalityParameter = iFilterLocality.HasValue ?
                new ObjectParameter("iFilterLocality", iFilterLocality) :
                new ObjectParameter("iFilterLocality", typeof(int));
    
            var sStarRatingParameter = sStarRating != null ?
                new ObjectParameter("sStarRating", sStarRating) :
                new ObjectParameter("sStarRating", typeof(string));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var internetParameter = internet.HasValue ?
                new ObjectParameter("Internet", internet) :
                new ObjectParameter("Internet", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("Parking", parking) :
                new ObjectParameter("Parking", typeof(bool));
    
            var nonSmokingParameter = nonSmoking.HasValue ?
                new ObjectParameter("NonSmoking", nonSmoking) :
                new ObjectParameter("NonSmoking", typeof(bool));
    
            var facilitiesDifferentlyAbledParameter = facilitiesDifferentlyAbled.HasValue ?
                new ObjectParameter("FacilitiesDifferentlyAbled", facilitiesDifferentlyAbled) :
                new ObjectParameter("FacilitiesDifferentlyAbled", typeof(bool));
    
            var fitnessCenterParameter = fitnessCenter.HasValue ?
                new ObjectParameter("FitnessCenter", fitnessCenter) :
                new ObjectParameter("FitnessCenter", typeof(bool));
    
            var familyRoomsParameter = familyRooms.HasValue ?
                new ObjectParameter("FamilyRooms", familyRooms) :
                new ObjectParameter("FamilyRooms", typeof(bool));
    
            var restaurantParameter = restaurant.HasValue ?
                new ObjectParameter("Restaurant", restaurant) :
                new ObjectParameter("Restaurant", typeof(bool));
    
            var roomServiceParameter = roomService.HasValue ?
                new ObjectParameter("RoomService", roomService) :
                new ObjectParameter("RoomService", typeof(bool));
    
            var transfersParameter = transfers.HasValue ?
                new ObjectParameter("Transfers", transfers) :
                new ObjectParameter("Transfers", typeof(bool));
    
            var petFriendlyParameter = petFriendly.HasValue ?
                new ObjectParameter("PetFriendly", petFriendly) :
                new ObjectParameter("PetFriendly", typeof(bool));
    
            var spaParameter = spa.HasValue ?
                new ObjectParameter("Spa", spa) :
                new ObjectParameter("Spa", typeof(bool));
    
            var outdoorPoolParameter = outdoorPool.HasValue ?
                new ObjectParameter("OutdoorPool", outdoorPool) :
                new ObjectParameter("OutdoorPool", typeof(bool));
    
            var indoorPoolParameter = indoorPool.HasValue ?
                new ObjectParameter("IndoorPool", indoorPool) :
                new ObjectParameter("IndoorPool", typeof(bool));
    
            var childcareParameter = childcare.HasValue ?
                new ObjectParameter("Childcare", childcare) :
                new ObjectParameter("Childcare", typeof(bool));
    
            var childrensClubParameter = childrensClub.HasValue ?
                new ObjectParameter("ChildrensClub", childrensClub) :
                new ObjectParameter("ChildrensClub", typeof(bool));
    
            var laundryServicesParameter = laundryServices.HasValue ?
                new ObjectParameter("LaundryServices", laundryServices) :
                new ObjectParameter("LaundryServices", typeof(bool));
    
            var airconditionerHotelParameter = airconditionerHotel.HasValue ?
                new ObjectParameter("AirconditionerHotel", airconditionerHotel) :
                new ObjectParameter("AirconditionerHotel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetHotelsDetailsForTG", iPlaceIDParameter, dtCheckInParameter, dtCheckOutParameter, iAreaTypeParameter, sHotelSearchParameter, iFilterLocalityParameter, sStarRatingParameter, dMinPriceParameter, dMaxPriceParameter, bLoginParameter, iUserIdParameter, specialDealParameter, sCurrencyCodeParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, internetParameter, parkingParameter, nonSmokingParameter, facilitiesDifferentlyAbledParameter, fitnessCenterParameter, familyRoomsParameter, restaurantParameter, roomServiceParameter, transfersParameter, petFriendlyParameter, spaParameter, outdoorPoolParameter, indoorPoolParameter, childcareParameter, childrensClubParameter, laundryServicesParameter, airconditionerHotelParameter);
        }
    
        public virtual int uspGetNegotiationAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetNegotiationAmount");
        }
    
        public virtual ObjectResult<uspGetOfferReviewDetailsbyID_TG_Result> uspGetOfferReviewDetailsbyID_TG(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOfferReviewDetailsbyID_TG_Result>("uspGetOfferReviewDetailsbyID_TG", vendorIdParameter);
        }
    
        public virtual ObjectResult<uspGetPromoDiscount_Result> uspGetPromoDiscount(string sPromoCode, Nullable<System.DateTime> dtBooking, Nullable<System.DateTime> dtCheckin, Nullable<System.DateTime> dtCheckout, Nullable<int> iPropId, Nullable<decimal> dAmount, Nullable<decimal> dExtraAmount, Nullable<decimal> dTaxAmount, string currencyCode)
        {
            var sPromoCodeParameter = sPromoCode != null ?
                new ObjectParameter("sPromoCode", sPromoCode) :
                new ObjectParameter("sPromoCode", typeof(string));
    
            var dtBookingParameter = dtBooking.HasValue ?
                new ObjectParameter("dtBooking", dtBooking) :
                new ObjectParameter("dtBooking", typeof(System.DateTime));
    
            var dtCheckinParameter = dtCheckin.HasValue ?
                new ObjectParameter("dtCheckin", dtCheckin) :
                new ObjectParameter("dtCheckin", typeof(System.DateTime));
    
            var dtCheckoutParameter = dtCheckout.HasValue ?
                new ObjectParameter("dtCheckout", dtCheckout) :
                new ObjectParameter("dtCheckout", typeof(System.DateTime));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var dAmountParameter = dAmount.HasValue ?
                new ObjectParameter("dAmount", dAmount) :
                new ObjectParameter("dAmount", typeof(decimal));
    
            var dExtraAmountParameter = dExtraAmount.HasValue ?
                new ObjectParameter("dExtraAmount", dExtraAmount) :
                new ObjectParameter("dExtraAmount", typeof(decimal));
    
            var dTaxAmountParameter = dTaxAmount.HasValue ?
                new ObjectParameter("dTaxAmount", dTaxAmount) :
                new ObjectParameter("dTaxAmount", typeof(decimal));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPromoDiscount_Result>("uspGetPromoDiscount", sPromoCodeParameter, dtBookingParameter, dtCheckinParameter, dtCheckoutParameter, iPropIdParameter, dAmountParameter, dExtraAmountParameter, dTaxAmountParameter, currencyCodeParameter);
        }
    
        public virtual ObjectResult<uspRewardPoints_Result> uspRewardPoints(string dtStart, string dtEnd, Nullable<long> iCustomerId)
        {
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            var dtEndParameter = dtEnd != null ?
                new ObjectParameter("dtEnd", dtEnd) :
                new ObjectParameter("dtEnd", typeof(string));
    
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRewardPoints_Result>("uspRewardPoints", dtStartParameter, dtEndParameter, iCustomerIdParameter);
        }
    
        public virtual int uspSaveTravelGuruSpecificHotelData(string sessionid)
        {
            var sessionidParameter = sessionid != null ?
                new ObjectParameter("sessionid", sessionid) :
                new ObjectParameter("sessionid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveTravelGuruSpecificHotelData", sessionidParameter);
        }
    
        public virtual int uspSetDefaultPhotoByProp(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetDefaultPhotoByProp", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetAeaLocalityForBid_Result> uspGetAeaLocalityForBid(string type, string value)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAeaLocalityForBid_Result>("uspGetAeaLocalityForBid", typeParameter, valueParameter);
        }
    
        public virtual int uspGetBidHotelsFinalList(Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency, Nullable<short> iStarCategory, string sType, Nullable<decimal> dBidAmount)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var iStarCategoryParameter = iStarCategory.HasValue ?
                new ObjectParameter("iStarCategory", iStarCategory) :
                new ObjectParameter("iStarCategory", typeof(short));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("sType", sType) :
                new ObjectParameter("sType", typeof(string));
    
            var dBidAmountParameter = dBidAmount.HasValue ?
                new ObjectParameter("dBidAmount", dBidAmount) :
                new ObjectParameter("dBidAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidHotelsFinalList", dtCheckInParameter, dtCheckOutParameter, currencyParameter, iStarCategoryParameter, sTypeParameter, dBidAmountParameter);
        }
    
        public virtual int uspGetBidRange(Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency, Nullable<short> iStarCategory, string sType)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var iStarCategoryParameter = iStarCategory.HasValue ?
                new ObjectParameter("iStarCategory", iStarCategory) :
                new ObjectParameter("iStarCategory", typeof(short));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("sType", sType) :
                new ObjectParameter("sType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidRange", dtCheckInParameter, dtCheckOutParameter, currencyParameter, iStarCategoryParameter, sTypeParameter);
        }
    
        public virtual int uspGetOfferReviewHotelAmentiesTG(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetOfferReviewHotelAmentiesTG", vendorIdParameter);
        }
    
        public virtual ObjectResult<uspGetOFRHotelARIForChannelMgr_Result> uspGetOFRHotelARIForChannelMgr(string hotelCode, string invTypeCode, string ratePlanCode, string start, string end)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var invTypeCodeParameter = invTypeCode != null ?
                new ObjectParameter("InvTypeCode", invTypeCode) :
                new ObjectParameter("InvTypeCode", typeof(string));
    
            var ratePlanCodeParameter = ratePlanCode != null ?
                new ObjectParameter("RatePlanCode", ratePlanCode) :
                new ObjectParameter("RatePlanCode", typeof(string));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOFRHotelARIForChannelMgr_Result>("uspGetOFRHotelARIForChannelMgr", hotelCodeParameter, invTypeCodeParameter, ratePlanCodeParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOFRHotelProductsForChannelMgr(string hotelCode)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOFRHotelProductsForChannelMgr", hotelCodeParameter);
        }
    
        public virtual ObjectResult<uspGetOFRhotelsForChannelMgr_Result> uspGetOFRhotelsForChannelMgr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOFRhotelsForChannelMgr_Result>("uspGetOFRhotelsForChannelMgr");
        }
    
        public virtual int uspGetPropertyPhotos(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetPropertyPhotos", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetPropertyPhotosTG_Result> uspGetPropertyPhotosTG(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertyPhotosTG_Result>("uspGetPropertyPhotosTG", vendorIdParameter);
        }
    
        public virtual int uspGetRejectionCompetitionRates(Nullable<int> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRejectionCompetitionRates", iBookingIdParameter);
        }
    
        public virtual int uspGetRoomAmenitiesTG(string vendorId, string iRoomTypeId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var iRoomTypeIdParameter = iRoomTypeId != null ?
                new ObjectParameter("iRoomTypeId", iRoomTypeId) :
                new ObjectParameter("iRoomTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRoomAmenitiesTG", vendorIdParameter, iRoomTypeIdParameter);
        }
    
        public virtual ObjectResult<uspGetRoomDetailsTG_Result> uspGetRoomDetailsTG(string sVendorId, string sRoomTypeId)
        {
            var sVendorIdParameter = sVendorId != null ?
                new ObjectParameter("sVendorId", sVendorId) :
                new ObjectParameter("sVendorId", typeof(string));
    
            var sRoomTypeIdParameter = sRoomTypeId != null ?
                new ObjectParameter("sRoomTypeId", sRoomTypeId) :
                new ObjectParameter("sRoomTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRoomDetailsTG_Result>("uspGetRoomDetailsTG", sVendorIdParameter, sRoomTypeIdParameter);
        }
    
        public virtual ObjectResult<uspGetTripAdvisorRating_TG_Result> uspGetTripAdvisorRating_TG(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTripAdvisorRating_TG_Result>("uspGetTripAdvisorRating_TG", vendorIdParameter);
        }
    
        public virtual ObjectResult<uspSaveNewBookingFromOldBooking_Result> uspSaveNewBookingFromOldBooking(Nullable<int> iBookingId, Nullable<int> iSelectedPropId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveNewBookingFromOldBooking_Result>("uspSaveNewBookingFromOldBooking", iBookingIdParameter, iSelectedPropIdParameter);
        }
    
        public virtual int uspSearchHotelsByBid(Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency, Nullable<short> iStarCategory, string sType, Nullable<decimal> dBidAmount, Nullable<int> iStateId)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var iStarCategoryParameter = iStarCategory.HasValue ?
                new ObjectParameter("iStarCategory", iStarCategory) :
                new ObjectParameter("iStarCategory", typeof(short));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("sType", sType) :
                new ObjectParameter("sType", typeof(string));
    
            var dBidAmountParameter = dBidAmount.HasValue ?
                new ObjectParameter("dBidAmount", dBidAmount) :
                new ObjectParameter("dBidAmount", typeof(decimal));
    
            var iStateIdParameter = iStateId.HasValue ?
                new ObjectParameter("iStateId", iStateId) :
                new ObjectParameter("iStateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchHotelsByBid", dtCheckInParameter, dtCheckOutParameter, currencyParameter, iStarCategoryParameter, sTypeParameter, dBidAmountParameter, iStateIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspClearUserWishList(Nullable<int> iUserId)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspClearUserWishList", iUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspManageUserWishList(Nullable<int> iUserId, Nullable<int> iD)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspManageUserWishList", iUserIdParameter, iDParameter);
        }
    
        public virtual int uspPropertyRoomInventory(Nullable<int> iBookingId, string type, Nullable<int> user)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPropertyRoomInventory", iBookingIdParameter, typeParameter, userParameter);
        }
    
        public virtual int uspGetBidHotelsFinalList_Test(Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency, Nullable<short> iStarCategory, string sType, Nullable<decimal> dBidAmount)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var iStarCategoryParameter = iStarCategory.HasValue ?
                new ObjectParameter("iStarCategory", iStarCategory) :
                new ObjectParameter("iStarCategory", typeof(short));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("sType", sType) :
                new ObjectParameter("sType", typeof(string));
    
            var dBidAmountParameter = dBidAmount.HasValue ?
                new ObjectParameter("dBidAmount", dBidAmount) :
                new ObjectParameter("dBidAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidHotelsFinalList_Test", dtCheckInParameter, dtCheckOutParameter, currencyParameter, iStarCategoryParameter, sTypeParameter, dBidAmountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspHotelResNotif(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspHotelResNotif", iBookingIdParameter);
        }
    
        public virtual int uspSetRecentViews(Nullable<long> customerId, Nullable<int> iPropId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetRecentViews", customerIdParameter, iPropIdParameter);
        }
    
        public virtual int uspGetRejectionCompetitionRates_Test(Nullable<int> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRejectionCompetitionRates_Test", iBookingIdParameter);
        }
    
        public virtual int uspGetYouMayLikeHotels_test(Nullable<long> iCustomerId)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetYouMayLikeHotels_test", iCustomerIdParameter);
        }
    
        public virtual int uspGetBookingDetailsByBookingId_Old(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBookingDetailsByBookingId_Old", bookingidParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetailsById_Result> uspGetBookingDetailsById(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetailsById_Result>("uspGetBookingDetailsById", iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspGetHotelFacilitiesByHeaderTG_Result> uspGetHotelFacilitiesByHeaderTG(string sAmenityIds)
        {
            var sAmenityIdsParameter = sAmenityIds != null ?
                new ObjectParameter("sAmenityIds", sAmenityIds) :
                new ObjectParameter("sAmenityIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetHotelFacilitiesByHeaderTG_Result>("uspGetHotelFacilitiesByHeaderTG", sAmenityIdsParameter);
        }
    
        public virtual int uspSetExchangeRate(Nullable<int> user)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetExchangeRate", userParameter);
        }
    
        public virtual int uspUpdateDaywiseBookingRate(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateDaywiseBookingRate", iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspGetExchangeRates_Result> uspGetExchangeRates(string sCurrencyCode)
        {
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetExchangeRates_Result>("uspGetExchangeRates", sCurrencyCodeParameter);
        }
    
        public virtual int uspSetTopSellingHotels(Nullable<int> iStar, Nullable<int> iCityId)
        {
            var iStarParameter = iStar.HasValue ?
                new ObjectParameter("iStar", iStar) :
                new ObjectParameter("iStar", typeof(int));
    
            var iCityIdParameter = iCityId.HasValue ?
                new ObjectParameter("iCityId", iCityId) :
                new ObjectParameter("iCityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetTopSellingHotels", iStarParameter, iCityIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetOFRHotelARIForMaximojoChannelMgr(string hotelCode, string start, string end)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOFRHotelARIForMaximojoChannelMgr", hotelCodeParameter, startParameter, endParameter);
        }
    
        public virtual int uspSearchRoomsForHotel_OLD(Nullable<int> iHotelID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<bool> bLogin, string currency, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> specialDeal)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchRoomsForHotel_OLD", iHotelIDParameter, dtCheckInParameter, dtCheckOutParameter, bLoginParameter, currencyParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, dMinPriceParameter, dMaxPriceParameter, specialDealParameter);
        }
    
        public virtual ObjectResult<uspGetPropertiesAndChainByConserveCommission_Result> uspGetPropertiesAndChainByConserveCommission(Nullable<int> iCCId, string search)
        {
            var iCCIdParameter = iCCId.HasValue ?
                new ObjectParameter("iCCId", iCCId) :
                new ObjectParameter("iCCId", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPropertiesAndChainByConserveCommission_Result>("uspGetPropertiesAndChainByConserveCommission", iCCIdParameter, searchParameter);
        }
    
        public virtual ObjectResult<string> uspGetOFRHotelRPForMaximojoChannelMgr(string hotelCode, string rates, string start, string end)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var ratesParameter = rates != null ?
                new ObjectParameter("Rates", rates) :
                new ObjectParameter("Rates", typeof(string));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOFRHotelRPForMaximojoChannelMgr", hotelCodeParameter, ratesParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<uspGetSharingInformationByBookingId_Result> uspGetSharingInformationByBookingId(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSharingInformationByBookingId_Result>("uspGetSharingInformationByBookingId", bookingidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspUpdateChannelMgrTracker(Nullable<long> iID, Nullable<int> iChannelMgrId, string sReqMsg)
        {
            var iIDParameter = iID.HasValue ?
                new ObjectParameter("iID", iID) :
                new ObjectParameter("iID", typeof(long));
    
            var iChannelMgrIdParameter = iChannelMgrId.HasValue ?
                new ObjectParameter("iChannelMgrId", iChannelMgrId) :
                new ObjectParameter("iChannelMgrId", typeof(int));
    
            var sReqMsgParameter = sReqMsg != null ?
                new ObjectParameter("sReqMsg", sReqMsg) :
                new ObjectParameter("sReqMsg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspUpdateChannelMgrTracker", iIDParameter, iChannelMgrIdParameter, sReqMsgParameter);
        }
    
        public virtual ObjectResult<uspUpdateHotelASSForMaximojoChannelMgr_Result> uspUpdateHotelASSForMaximojoChannelMgr(string hotelCode, Nullable<int> bookingLimit, Nullable<int> iRoomId, Nullable<long> iRPId, string start, string end, Nullable<int> minLOS, Nullable<int> maxLOS, Nullable<bool> stopSell, Nullable<bool> mon, Nullable<bool> tue, Nullable<bool> wed, Nullable<bool> thu, Nullable<bool> fri, Nullable<bool> sat, Nullable<bool> sun)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var bookingLimitParameter = bookingLimit.HasValue ?
                new ObjectParameter("BookingLimit", bookingLimit) :
                new ObjectParameter("BookingLimit", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(int));
    
            var iRPIdParameter = iRPId.HasValue ?
                new ObjectParameter("iRPId", iRPId) :
                new ObjectParameter("iRPId", typeof(long));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var minLOSParameter = minLOS.HasValue ?
                new ObjectParameter("MinLOS", minLOS) :
                new ObjectParameter("MinLOS", typeof(int));
    
            var maxLOSParameter = maxLOS.HasValue ?
                new ObjectParameter("MaxLOS", maxLOS) :
                new ObjectParameter("MaxLOS", typeof(int));
    
            var stopSellParameter = stopSell.HasValue ?
                new ObjectParameter("StopSell", stopSell) :
                new ObjectParameter("StopSell", typeof(bool));
    
            var monParameter = mon.HasValue ?
                new ObjectParameter("Mon", mon) :
                new ObjectParameter("Mon", typeof(bool));
    
            var tueParameter = tue.HasValue ?
                new ObjectParameter("Tue", tue) :
                new ObjectParameter("Tue", typeof(bool));
    
            var wedParameter = wed.HasValue ?
                new ObjectParameter("Wed", wed) :
                new ObjectParameter("Wed", typeof(bool));
    
            var thuParameter = thu.HasValue ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(bool));
    
            var friParameter = fri.HasValue ?
                new ObjectParameter("Fri", fri) :
                new ObjectParameter("Fri", typeof(bool));
    
            var satParameter = sat.HasValue ?
                new ObjectParameter("Sat", sat) :
                new ObjectParameter("Sat", typeof(bool));
    
            var sunParameter = sun.HasValue ?
                new ObjectParameter("Sun", sun) :
                new ObjectParameter("Sun", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspUpdateHotelASSForMaximojoChannelMgr_Result>("uspUpdateHotelASSForMaximojoChannelMgr", hotelCodeParameter, bookingLimitParameter, iRoomIdParameter, iRPIdParameter, startParameter, endParameter, minLOSParameter, maxLOSParameter, stopSellParameter, monParameter, tueParameter, wedParameter, thuParameter, friParameter, satParameter, sunParameter);
        }
    
        public virtual int uspUpdateLoyalityPointsByBooking(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateLoyalityPointsByBooking", iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspGetBookingsToSyncWithChannelMgr_Result> uspGetBookingsToSyncWithChannelMgr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingsToSyncWithChannelMgr_Result>("uspGetBookingsToSyncWithChannelMgr");
        }
    
        public virtual ObjectResult<uspHotelResNotif_Old_Result> uspHotelResNotif_Old(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspHotelResNotif_Old_Result>("uspHotelResNotif_Old", iBookingIdParameter);
        }
    
        public virtual int uspUpdateHotelAmountPerOccForMaximojoChannelMgr(string hotelCode, Nullable<int> iRoomId, Nullable<long> iRPId, string start, string end, Nullable<bool> mon, Nullable<bool> tue, Nullable<bool> wed, Nullable<bool> thu, Nullable<bool> fri, Nullable<bool> sat, Nullable<bool> sun, Nullable<decimal> additionalGuestAmount, string currencyCode)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(int));
    
            var iRPIdParameter = iRPId.HasValue ?
                new ObjectParameter("iRPId", iRPId) :
                new ObjectParameter("iRPId", typeof(long));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var monParameter = mon.HasValue ?
                new ObjectParameter("Mon", mon) :
                new ObjectParameter("Mon", typeof(bool));
    
            var tueParameter = tue.HasValue ?
                new ObjectParameter("Tue", tue) :
                new ObjectParameter("Tue", typeof(bool));
    
            var wedParameter = wed.HasValue ?
                new ObjectParameter("Wed", wed) :
                new ObjectParameter("Wed", typeof(bool));
    
            var thuParameter = thu.HasValue ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(bool));
    
            var friParameter = fri.HasValue ?
                new ObjectParameter("Fri", fri) :
                new ObjectParameter("Fri", typeof(bool));
    
            var satParameter = sat.HasValue ?
                new ObjectParameter("Sat", sat) :
                new ObjectParameter("Sat", typeof(bool));
    
            var sunParameter = sun.HasValue ?
                new ObjectParameter("Sun", sun) :
                new ObjectParameter("Sun", typeof(bool));
    
            var additionalGuestAmountParameter = additionalGuestAmount.HasValue ?
                new ObjectParameter("AdditionalGuestAmount", additionalGuestAmount) :
                new ObjectParameter("AdditionalGuestAmount", typeof(decimal));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateHotelAmountPerOccForMaximojoChannelMgr", hotelCodeParameter, iRoomIdParameter, iRPIdParameter, startParameter, endParameter, monParameter, tueParameter, wedParameter, thuParameter, friParameter, satParameter, sunParameter, additionalGuestAmountParameter, currencyCodeParameter);
        }
    
        public virtual int uspProvideFinalOffer(Nullable<int> iBookingId, Nullable<decimal> finalOffer, Nullable<int> user, Nullable<bool> convert)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var finalOfferParameter = finalOffer.HasValue ?
                new ObjectParameter("FinalOffer", finalOffer) :
                new ObjectParameter("FinalOffer", typeof(decimal));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var convertParameter = convert.HasValue ?
                new ObjectParameter("Convert", convert) :
                new ObjectParameter("Convert", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspProvideFinalOffer", iBookingIdParameter, finalOfferParameter, userParameter, convertParameter);
        }
    
        public virtual int uspGetBidHotelsFinalListForUnfinished(Nullable<int> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidHotelsFinalListForUnfinished", iBookingIdParameter);
        }
    
        public virtual int uspGetWishListByCustomerId_Test(Nullable<int> iUserId, string sCurrencyCode)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetWishListByCustomerId_Test", iUserIdParameter, sCurrencyCodeParameter);
        }
    
        public virtual ObjectResult<uspSaveBidHotel_Result> uspSaveBidHotel(Nullable<int> iBookingId, Nullable<int> iSelectedPropId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveBidHotel_Result>("uspSaveBidHotel", iBookingIdParameter, iSelectedPropIdParameter);
        }
    
        public virtual int uspUpdateHotelARIForChannelMgr(string hotelCode, string updateType, string currencyCode, Nullable<int> iRoomId, Nullable<long> iRPId, string start, string end, Nullable<bool> mon, Nullable<bool> tue, Nullable<bool> wed, Nullable<bool> thu, Nullable<bool> fri, Nullable<bool> sat, Nullable<bool> sun, Nullable<decimal> additionalGuestAmount, string master, string arrival, string departure, Nullable<int> minAdvancedBookingOffset, Nullable<int> maxAdvancedBookingOffset, Nullable<int> minLoSOnArrival, Nullable<int> maxLoSOnArrival, Nullable<int> minLoSOnArrivalThrough, Nullable<int> maxLoSOnArrivalThrough, string description, Nullable<int> releaseDays, Nullable<int> allotment)
        {
            var hotelCodeParameter = hotelCode != null ?
                new ObjectParameter("HotelCode", hotelCode) :
                new ObjectParameter("HotelCode", typeof(string));
    
            var updateTypeParameter = updateType != null ?
                new ObjectParameter("UpdateType", updateType) :
                new ObjectParameter("UpdateType", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(int));
    
            var iRPIdParameter = iRPId.HasValue ?
                new ObjectParameter("iRPId", iRPId) :
                new ObjectParameter("iRPId", typeof(long));
    
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var monParameter = mon.HasValue ?
                new ObjectParameter("Mon", mon) :
                new ObjectParameter("Mon", typeof(bool));
    
            var tueParameter = tue.HasValue ?
                new ObjectParameter("Tue", tue) :
                new ObjectParameter("Tue", typeof(bool));
    
            var wedParameter = wed.HasValue ?
                new ObjectParameter("Wed", wed) :
                new ObjectParameter("Wed", typeof(bool));
    
            var thuParameter = thu.HasValue ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(bool));
    
            var friParameter = fri.HasValue ?
                new ObjectParameter("Fri", fri) :
                new ObjectParameter("Fri", typeof(bool));
    
            var satParameter = sat.HasValue ?
                new ObjectParameter("Sat", sat) :
                new ObjectParameter("Sat", typeof(bool));
    
            var sunParameter = sun.HasValue ?
                new ObjectParameter("Sun", sun) :
                new ObjectParameter("Sun", typeof(bool));
    
            var additionalGuestAmountParameter = additionalGuestAmount.HasValue ?
                new ObjectParameter("AdditionalGuestAmount", additionalGuestAmount) :
                new ObjectParameter("AdditionalGuestAmount", typeof(decimal));
    
            var masterParameter = master != null ?
                new ObjectParameter("Master", master) :
                new ObjectParameter("Master", typeof(string));
    
            var arrivalParameter = arrival != null ?
                new ObjectParameter("Arrival", arrival) :
                new ObjectParameter("Arrival", typeof(string));
    
            var departureParameter = departure != null ?
                new ObjectParameter("Departure", departure) :
                new ObjectParameter("Departure", typeof(string));
    
            var minAdvancedBookingOffsetParameter = minAdvancedBookingOffset.HasValue ?
                new ObjectParameter("MinAdvancedBookingOffset", minAdvancedBookingOffset) :
                new ObjectParameter("MinAdvancedBookingOffset", typeof(int));
    
            var maxAdvancedBookingOffsetParameter = maxAdvancedBookingOffset.HasValue ?
                new ObjectParameter("MaxAdvancedBookingOffset", maxAdvancedBookingOffset) :
                new ObjectParameter("MaxAdvancedBookingOffset", typeof(int));
    
            var minLoSOnArrivalParameter = minLoSOnArrival.HasValue ?
                new ObjectParameter("MinLoSOnArrival", minLoSOnArrival) :
                new ObjectParameter("MinLoSOnArrival", typeof(int));
    
            var maxLoSOnArrivalParameter = maxLoSOnArrival.HasValue ?
                new ObjectParameter("MaxLoSOnArrival", maxLoSOnArrival) :
                new ObjectParameter("MaxLoSOnArrival", typeof(int));
    
            var minLoSOnArrivalThroughParameter = minLoSOnArrivalThrough.HasValue ?
                new ObjectParameter("MinLoSOnArrivalThrough", minLoSOnArrivalThrough) :
                new ObjectParameter("MinLoSOnArrivalThrough", typeof(int));
    
            var maxLoSOnArrivalThroughParameter = maxLoSOnArrivalThrough.HasValue ?
                new ObjectParameter("MaxLoSOnArrivalThrough", maxLoSOnArrivalThrough) :
                new ObjectParameter("MaxLoSOnArrivalThrough", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var releaseDaysParameter = releaseDays.HasValue ?
                new ObjectParameter("ReleaseDays", releaseDays) :
                new ObjectParameter("ReleaseDays", typeof(int));
    
            var allotmentParameter = allotment.HasValue ?
                new ObjectParameter("Allotment", allotment) :
                new ObjectParameter("Allotment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateHotelARIForChannelMgr", hotelCodeParameter, updateTypeParameter, currencyCodeParameter, iRoomIdParameter, iRPIdParameter, startParameter, endParameter, monParameter, tueParameter, wedParameter, thuParameter, friParameter, satParameter, sunParameter, additionalGuestAmountParameter, masterParameter, arrivalParameter, departureParameter, minAdvancedBookingOffsetParameter, maxAdvancedBookingOffsetParameter, minLoSOnArrivalParameter, maxLoSOnArrivalParameter, minLoSOnArrivalThroughParameter, maxLoSOnArrivalThroughParameter, descriptionParameter, releaseDaysParameter, allotmentParameter);
        }
    
        public virtual ObjectResult<uspGetBookingGuestRoomDetails_Result> uspGetBookingGuestRoomDetails(Nullable<int> bookingId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingGuestRoomDetails_Result>("uspGetBookingGuestRoomDetails", bookingIdParameter);
        }
    
        public virtual int uspGetUpgradeList(Nullable<int> iBookingId, Nullable<int> propid)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var propidParameter = propid.HasValue ?
                new ObjectParameter("propid", propid) :
                new ObjectParameter("propid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetUpgradeList", iBookingIdParameter, propidParameter);
        }
    
        public virtual int uspInsertSyncBookingToChannelMgrTracker(Nullable<long> iBookingId, string cSyncStatus, string sXMLString, string sError)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var cSyncStatusParameter = cSyncStatus != null ?
                new ObjectParameter("cSyncStatus", cSyncStatus) :
                new ObjectParameter("cSyncStatus", typeof(string));
    
            var sXMLStringParameter = sXMLString != null ?
                new ObjectParameter("sXMLString", sXMLString) :
                new ObjectParameter("sXMLString", typeof(string));
    
            var sErrorParameter = sError != null ?
                new ObjectParameter("sError", sError) :
                new ObjectParameter("sError", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertSyncBookingToChannelMgrTracker", iBookingIdParameter, cSyncStatusParameter, sXMLStringParameter, sErrorParameter);
        }
    
        public virtual int uspUpdateBookingSyncStatusChannelMgr(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBookingSyncStatusChannelMgr", iBookingIdParameter);
        }
    
        public virtual int uspCalculateCancellationCharges(Nullable<long> iBookingId, Nullable<decimal> iCountryOffset)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var iCountryOffsetParameter = iCountryOffset.HasValue ?
                new ObjectParameter("iCountryOffset", iCountryOffset) :
                new ObjectParameter("iCountryOffset", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateCancellationCharges", iBookingIdParameter, iCountryOffsetParameter);
        }
    
        public virtual int uspCancelBookingOFR(Nullable<long> iBookingId, Nullable<decimal> iCountryOffset)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var iCountryOffsetParameter = iCountryOffset.HasValue ?
                new ObjectParameter("iCountryOffset", iCountryOffset) :
                new ObjectParameter("iCountryOffset", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCancelBookingOFR", iBookingIdParameter, iCountryOffsetParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetailsByBookingIdPhoneEmail_Result> uspGetBookingDetailsByBookingIdPhoneEmail(Nullable<int> bookingid, string sEmail, string sPhone)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            var sEmailParameter = sEmail != null ?
                new ObjectParameter("sEmail", sEmail) :
                new ObjectParameter("sEmail", typeof(string));
    
            var sPhoneParameter = sPhone != null ?
                new ObjectParameter("sPhone", sPhone) :
                new ObjectParameter("sPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetailsByBookingIdPhoneEmail_Result>("uspGetBookingDetailsByBookingIdPhoneEmail", bookingidParameter, sEmailParameter, sPhoneParameter);
        }
    
        public virtual ObjectResult<uspSaveBidHotelUpgrade_Result> uspSaveBidHotelUpgrade(Nullable<int> iBookingId, Nullable<int> iSelectedPropId, Nullable<long> iRoomId, Nullable<decimal> dExtraPaid, Nullable<decimal> dExtraTaxPaid)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            var dExtraPaidParameter = dExtraPaid.HasValue ?
                new ObjectParameter("dExtraPaid", dExtraPaid) :
                new ObjectParameter("dExtraPaid", typeof(decimal));
    
            var dExtraTaxPaidParameter = dExtraTaxPaid.HasValue ?
                new ObjectParameter("dExtraTaxPaid", dExtraTaxPaid) :
                new ObjectParameter("dExtraTaxPaid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveBidHotelUpgrade_Result>("uspSaveBidHotelUpgrade", iBookingIdParameter, iSelectedPropIdParameter, iRoomIdParameter, dExtraPaidParameter, dExtraTaxPaidParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int uspAutoReleaseInventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAutoReleaseInventory");
        }
    
        public virtual ObjectResult<uspBookingInsightsRoomsProductivityDashBoard_Result> uspBookingInsightsRoomsProductivityDashBoard(Nullable<int> propId, Nullable<int> days, string bookingType, string nightsOrRevenue)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            var bookingTypeParameter = bookingType != null ?
                new ObjectParameter("BookingType", bookingType) :
                new ObjectParameter("BookingType", typeof(string));
    
            var nightsOrRevenueParameter = nightsOrRevenue != null ?
                new ObjectParameter("NightsOrRevenue", nightsOrRevenue) :
                new ObjectParameter("NightsOrRevenue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBookingInsightsRoomsProductivityDashBoard_Result>("uspBookingInsightsRoomsProductivityDashBoard", propIdParameter, daysParameter, bookingTypeParameter, nightsOrRevenueParameter);
        }
    
        public virtual int uspCalculateCancellationChargesAmend(Nullable<long> iBookingId, Nullable<decimal> iCountryOffset, Nullable<System.DateTime> dtCheckInNew, Nullable<System.DateTime> dtCheckOutNew, Nullable<bool> bIsModifyDate)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var iCountryOffsetParameter = iCountryOffset.HasValue ?
                new ObjectParameter("iCountryOffset", iCountryOffset) :
                new ObjectParameter("iCountryOffset", typeof(decimal));
    
            var dtCheckInNewParameter = dtCheckInNew.HasValue ?
                new ObjectParameter("dtCheckInNew", dtCheckInNew) :
                new ObjectParameter("dtCheckInNew", typeof(System.DateTime));
    
            var dtCheckOutNewParameter = dtCheckOutNew.HasValue ?
                new ObjectParameter("dtCheckOutNew", dtCheckOutNew) :
                new ObjectParameter("dtCheckOutNew", typeof(System.DateTime));
    
            var bIsModifyDateParameter = bIsModifyDate.HasValue ?
                new ObjectParameter("bIsModifyDate", bIsModifyDate) :
                new ObjectParameter("bIsModifyDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateCancellationChargesAmend", iBookingIdParameter, iCountryOffsetParameter, dtCheckInNewParameter, dtCheckOutNewParameter, bIsModifyDateParameter);
        }
    
        public virtual int uspCalculateCancellationChargesAmend_Test(Nullable<long> iBookingId, Nullable<decimal> iCountryOffset, Nullable<System.DateTime> dtCheckInNew, Nullable<System.DateTime> dtCheckOutNew, Nullable<bool> bIsModifyDate)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var iCountryOffsetParameter = iCountryOffset.HasValue ?
                new ObjectParameter("iCountryOffset", iCountryOffset) :
                new ObjectParameter("iCountryOffset", typeof(decimal));
    
            var dtCheckInNewParameter = dtCheckInNew.HasValue ?
                new ObjectParameter("dtCheckInNew", dtCheckInNew) :
                new ObjectParameter("dtCheckInNew", typeof(System.DateTime));
    
            var dtCheckOutNewParameter = dtCheckOutNew.HasValue ?
                new ObjectParameter("dtCheckOutNew", dtCheckOutNew) :
                new ObjectParameter("dtCheckOutNew", typeof(System.DateTime));
    
            var bIsModifyDateParameter = bIsModifyDate.HasValue ?
                new ObjectParameter("bIsModifyDate", bIsModifyDate) :
                new ObjectParameter("bIsModifyDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateCancellationChargesAmend_Test", iBookingIdParameter, iCountryOffsetParameter, dtCheckInNewParameter, dtCheckOutNewParameter, bIsModifyDateParameter);
        }
    
        public virtual int uspCalculateRankOfHotelForDashBoard(Nullable<System.DateTime> dtCheckIn, Nullable<int> propId)
        {
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculateRankOfHotelForDashBoard", dtCheckInParameter, propIdParameter);
        }
    
        public virtual ObjectResult<uspCancelBooking_TG_Result> uspCancelBooking_TG(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspCancelBooking_TG_Result>("uspCancelBooking_TG", iBookingIdParameter);
        }
    
        public virtual int uspCheckIfNegotiationApplicableByBid_Test(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckIfNegotiationApplicableByBid_Test", iBookingIdParameter);
        }
    
        public virtual int uspDailyScheduler()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDailyScheduler");
        }
    
        public virtual int uspDashBoardNotifications(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDashBoardNotifications", iPropIdParameter);
        }
    
        public virtual ObjectResult<uspGetAllUsers_Result> uspGetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllUsers_Result>("uspGetAllUsers");
        }
    
        public virtual int uspGetBestPossibleRatesForDashBoard_Test(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBestPossibleRatesForDashBoard_Test", propIdParameter);
        }
    
        public virtual int uspGetBidSimulateDataCorp(Nullable<int> propId, string dtArrival, string dtBooking, Nullable<short> lOS, Nullable<short> rooms, Nullable<short> occupancy)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtArrivalParameter = dtArrival != null ?
                new ObjectParameter("dtArrival", dtArrival) :
                new ObjectParameter("dtArrival", typeof(string));
    
            var dtBookingParameter = dtBooking != null ?
                new ObjectParameter("dtBooking", dtBooking) :
                new ObjectParameter("dtBooking", typeof(string));
    
            var lOSParameter = lOS.HasValue ?
                new ObjectParameter("LOS", lOS) :
                new ObjectParameter("LOS", typeof(short));
    
            var roomsParameter = rooms.HasValue ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(short));
    
            var occupancyParameter = occupancy.HasValue ?
                new ObjectParameter("Occupancy", occupancy) :
                new ObjectParameter("Occupancy", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidSimulateDataCorp", propIdParameter, dtArrivalParameter, dtBookingParameter, lOSParameter, roomsParameter, occupancyParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetailsByBookingId_ForNotifications_Result> uspGetBookingDetailsByBookingId_ForNotifications(Nullable<int> bookingid, Nullable<bool> currencyType)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            var currencyTypeParameter = currencyType.HasValue ?
                new ObjectParameter("CurrencyType", currencyType) :
                new ObjectParameter("CurrencyType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetailsByBookingId_ForNotifications_Result>("uspGetBookingDetailsByBookingId_ForNotifications", bookingidParameter, currencyTypeParameter);
        }
    
        public virtual ObjectResult<uspGetBookingDetailsByBookingId_ForNotificationsRM_Result> uspGetBookingDetailsByBookingId_ForNotificationsRM(Nullable<int> bookingid, Nullable<bool> currencyType)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            var currencyTypeParameter = currencyType.HasValue ?
                new ObjectParameter("CurrencyType", currencyType) :
                new ObjectParameter("CurrencyType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingDetailsByBookingId_ForNotificationsRM_Result>("uspGetBookingDetailsByBookingId_ForNotificationsRM", bookingidParameter, currencyTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetBookingOverviewDashBoard(Nullable<int> iPropId, Nullable<int> days)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetBookingOverviewDashBoard", iPropIdParameter, daysParameter);
        }
    
        public virtual ObjectResult<uspGetExpiringPointsToSendReminder_Result> uspGetExpiringPointsToSendReminder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetExpiringPointsToSendReminder_Result>("uspGetExpiringPointsToSendReminder");
        }
    
        public virtual int uspGetMAXDiscountofCompSetLast7_Old(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetMAXDiscountofCompSetLast7_Old", propIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetMessageToShareAfterBooking(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetMessageToShareAfterBooking", iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspGetNegotiationInsightsDashBoard_Result> uspGetNegotiationInsightsDashBoard(Nullable<int> iPropId, Nullable<int> days)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetNegotiationInsightsDashBoard_Result>("uspGetNegotiationInsightsDashBoard", iPropIdParameter, daysParameter);
        }
    
        public virtual int uspGetRankForDashBoard(Nullable<int> propId)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRankForDashBoard", propIdParameter);
        }
    
        public virtual int uspGetRoomAndRatePlanForBulk_Test(Nullable<int> iPropId, Nullable<bool> onlyBase)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var onlyBaseParameter = onlyBase.HasValue ?
                new ObjectParameter("OnlyBase", onlyBase) :
                new ObjectParameter("OnlyBase", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRoomAndRatePlanForBulk_Test", iPropIdParameter, onlyBaseParameter);
        }
    
        public virtual int uspGetUpgradeList_Test(Nullable<int> iBookingId, Nullable<int> propid)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var propidParameter = propid.HasValue ?
                new ObjectParameter("propid", propid) :
                new ObjectParameter("propid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetUpgradeList_Test", iBookingIdParameter, propidParameter);
        }
    
        public virtual int uspInsertViewForConv(string cType, Nullable<long> iBookingId)
        {
            var cTypeParameter = cType != null ?
                new ObjectParameter("cType", cType) :
                new ObjectParameter("cType", typeof(string));
    
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertViewForConv", cTypeParameter, iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspMasterDumpRpt_Result> uspMasterDumpRpt(string master, string sStart, string sEnd)
        {
            var masterParameter = master != null ?
                new ObjectParameter("Master", master) :
                new ObjectParameter("Master", typeof(string));
    
            var sStartParameter = sStart != null ?
                new ObjectParameter("sStart", sStart) :
                new ObjectParameter("sStart", typeof(string));
    
            var sEndParameter = sEnd != null ?
                new ObjectParameter("sEnd", sEnd) :
                new ObjectParameter("sEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspMasterDumpRpt_Result>("uspMasterDumpRpt", masterParameter, sStartParameter, sEndParameter);
        }
    
        public virtual ObjectResult<uspPerformanceOverviewDashBoard_Result> uspPerformanceOverviewDashBoard(Nullable<int> propId, Nullable<int> days)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPerformanceOverviewDashBoard_Result>("uspPerformanceOverviewDashBoard", propIdParameter, daysParameter);
        }
    
        public virtual ObjectResult<uspSaveBidHotel_Test_Result> uspSaveBidHotel_Test(Nullable<int> iBookingId, Nullable<int> iSelectedPropId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveBidHotel_Test_Result>("uspSaveBidHotel_Test", iBookingIdParameter, iSelectedPropIdParameter);
        }
    
        public virtual ObjectResult<uspSaveBidHotelUpgradeFromUnfinished_Result> uspSaveBidHotelUpgradeFromUnfinished(Nullable<int> iBookingId, Nullable<int> iSelectedPropId, Nullable<long> iRoomId, Nullable<decimal> dExtraPaid, Nullable<decimal> dExtraTaxPaid, string sAuthCode)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            var dExtraPaidParameter = dExtraPaid.HasValue ?
                new ObjectParameter("dExtraPaid", dExtraPaid) :
                new ObjectParameter("dExtraPaid", typeof(decimal));
    
            var dExtraTaxPaidParameter = dExtraTaxPaid.HasValue ?
                new ObjectParameter("dExtraTaxPaid", dExtraTaxPaid) :
                new ObjectParameter("dExtraTaxPaid", typeof(decimal));
    
            var sAuthCodeParameter = sAuthCode != null ?
                new ObjectParameter("sAuthCode", sAuthCode) :
                new ObjectParameter("sAuthCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveBidHotelUpgradeFromUnfinished_Result>("uspSaveBidHotelUpgradeFromUnfinished", iBookingIdParameter, iSelectedPropIdParameter, iRoomIdParameter, dExtraPaidParameter, dExtraTaxPaidParameter, sAuthCodeParameter);
        }
    
        public virtual ObjectResult<uspSaveBidHotelUpgradeFromUnfinished_Test_Result> uspSaveBidHotelUpgradeFromUnfinished_Test(Nullable<int> iBookingId, Nullable<int> iSelectedPropId, Nullable<long> iRoomId, Nullable<decimal> dExtraPaid, Nullable<decimal> dExtraTaxPaid, string sAuthCode)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            var dExtraPaidParameter = dExtraPaid.HasValue ?
                new ObjectParameter("dExtraPaid", dExtraPaid) :
                new ObjectParameter("dExtraPaid", typeof(decimal));
    
            var dExtraTaxPaidParameter = dExtraTaxPaid.HasValue ?
                new ObjectParameter("dExtraTaxPaid", dExtraTaxPaid) :
                new ObjectParameter("dExtraTaxPaid", typeof(decimal));
    
            var sAuthCodeParameter = sAuthCode != null ?
                new ObjectParameter("sAuthCode", sAuthCode) :
                new ObjectParameter("sAuthCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveBidHotelUpgradeFromUnfinished_Test_Result>("uspSaveBidHotelUpgradeFromUnfinished_Test", iBookingIdParameter, iSelectedPropIdParameter, iRoomIdParameter, dExtraPaidParameter, dExtraTaxPaidParameter, sAuthCodeParameter);
        }
    
        public virtual int uspSaveCorporateLinking(Nullable<int> iPropId, Nullable<int> iActionBy)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSaveCorporateLinking", iPropIdParameter, iActionByParameter);
        }
    
        public virtual ObjectResult<uspSaveNewBookingFromOldBooking_Test_Result> uspSaveNewBookingFromOldBooking_Test(Nullable<int> iBookingId, Nullable<int> iSelectedPropId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(int));
    
            var iSelectedPropIdParameter = iSelectedPropId.HasValue ?
                new ObjectParameter("iSelectedPropId", iSelectedPropId) :
                new ObjectParameter("iSelectedPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveNewBookingFromOldBooking_Test_Result>("uspSaveNewBookingFromOldBooking_Test", iBookingIdParameter, iSelectedPropIdParameter);
        }
    
        public virtual int uspSetDataForDashBoard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetDataForDashBoard");
        }
    
        public virtual int uspSetDataForDashBoard_Old()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetDataForDashBoard_Old");
        }
    
        public virtual int uspUndoUnfinishedAmendments(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUndoUnfinishedAmendments", iDParameter);
        }
    
        public virtual int uspUpdateTripAdvisorData(Nullable<int> lastUpdatedRecord)
        {
            var lastUpdatedRecordParameter = lastUpdatedRecord.HasValue ?
                new ObjectParameter("LastUpdatedRecord", lastUpdatedRecord) :
                new ObjectParameter("LastUpdatedRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateTripAdvisorData", lastUpdatedRecordParameter);
        }
    
        public virtual int uspAddUpdateDeleteCorporateCompany(Nullable<int> iCompanyId, string sCompanyName, string sPrimaryContact, string sTelephoneNumber, string sEmailAddress, string sMobileNumber, string cStatus, Nullable<int> iActionBy, string sActionType, string sEntityType, string sRegisteredEntityName, string sGstinNumber, string sPINCode, Nullable<int> iCountryId, Nullable<int> iStateId, Nullable<int> iCityId, string sAddress)
        {
            var iCompanyIdParameter = iCompanyId.HasValue ?
                new ObjectParameter("iCompanyId", iCompanyId) :
                new ObjectParameter("iCompanyId", typeof(int));
    
            var sCompanyNameParameter = sCompanyName != null ?
                new ObjectParameter("sCompanyName", sCompanyName) :
                new ObjectParameter("sCompanyName", typeof(string));
    
            var sPrimaryContactParameter = sPrimaryContact != null ?
                new ObjectParameter("sPrimaryContact", sPrimaryContact) :
                new ObjectParameter("sPrimaryContact", typeof(string));
    
            var sTelephoneNumberParameter = sTelephoneNumber != null ?
                new ObjectParameter("sTelephoneNumber", sTelephoneNumber) :
                new ObjectParameter("sTelephoneNumber", typeof(string));
    
            var sEmailAddressParameter = sEmailAddress != null ?
                new ObjectParameter("sEmailAddress", sEmailAddress) :
                new ObjectParameter("sEmailAddress", typeof(string));
    
            var sMobileNumberParameter = sMobileNumber != null ?
                new ObjectParameter("sMobileNumber", sMobileNumber) :
                new ObjectParameter("sMobileNumber", typeof(string));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var sActionTypeParameter = sActionType != null ?
                new ObjectParameter("sActionType", sActionType) :
                new ObjectParameter("sActionType", typeof(string));
    
            var sEntityTypeParameter = sEntityType != null ?
                new ObjectParameter("sEntityType", sEntityType) :
                new ObjectParameter("sEntityType", typeof(string));
    
            var sRegisteredEntityNameParameter = sRegisteredEntityName != null ?
                new ObjectParameter("sRegisteredEntityName", sRegisteredEntityName) :
                new ObjectParameter("sRegisteredEntityName", typeof(string));
    
            var sGstinNumberParameter = sGstinNumber != null ?
                new ObjectParameter("sGstinNumber", sGstinNumber) :
                new ObjectParameter("sGstinNumber", typeof(string));
    
            var sPINCodeParameter = sPINCode != null ?
                new ObjectParameter("sPINCode", sPINCode) :
                new ObjectParameter("sPINCode", typeof(string));
    
            var iCountryIdParameter = iCountryId.HasValue ?
                new ObjectParameter("iCountryId", iCountryId) :
                new ObjectParameter("iCountryId", typeof(int));
    
            var iStateIdParameter = iStateId.HasValue ?
                new ObjectParameter("iStateId", iStateId) :
                new ObjectParameter("iStateId", typeof(int));
    
            var iCityIdParameter = iCityId.HasValue ?
                new ObjectParameter("iCityId", iCityId) :
                new ObjectParameter("iCityId", typeof(int));
    
            var sAddressParameter = sAddress != null ?
                new ObjectParameter("sAddress", sAddress) :
                new ObjectParameter("sAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUpdateDeleteCorporateCompany", iCompanyIdParameter, sCompanyNameParameter, sPrimaryContactParameter, sTelephoneNumberParameter, sEmailAddressParameter, sMobileNumberParameter, cStatusParameter, iActionByParameter, sActionTypeParameter, sEntityTypeParameter, sRegisteredEntityNameParameter, sGstinNumberParameter, sPINCodeParameter, iCountryIdParameter, iStateIdParameter, iCityIdParameter, sAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspAddUpdateDeleteCorporateDomain(Nullable<int> iCorporateDomainId, Nullable<int> iCompanyId, string sDomainName, Nullable<System.DateTime> dtActionDate, Nullable<int> iActionBy, string sActionType)
        {
            var iCorporateDomainIdParameter = iCorporateDomainId.HasValue ?
                new ObjectParameter("iCorporateDomainId", iCorporateDomainId) :
                new ObjectParameter("iCorporateDomainId", typeof(int));
    
            var iCompanyIdParameter = iCompanyId.HasValue ?
                new ObjectParameter("iCompanyId", iCompanyId) :
                new ObjectParameter("iCompanyId", typeof(int));
    
            var sDomainNameParameter = sDomainName != null ?
                new ObjectParameter("sDomainName", sDomainName) :
                new ObjectParameter("sDomainName", typeof(string));
    
            var dtActionDateParameter = dtActionDate.HasValue ?
                new ObjectParameter("dtActionDate", dtActionDate) :
                new ObjectParameter("dtActionDate", typeof(System.DateTime));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var sActionTypeParameter = sActionType != null ?
                new ObjectParameter("sActionType", sActionType) :
                new ObjectParameter("sActionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspAddUpdateDeleteCorporateDomain", iCorporateDomainIdParameter, iCompanyIdParameter, sDomainNameParameter, dtActionDateParameter, iActionByParameter, sActionTypeParameter);
        }
    
        public virtual ObjectResult<uspAddDeleteBlackListDomain_Result> uspAddDeleteBlackListDomain(string sDomainName, string cStatus, Nullable<int> iActionBy, string sActionType)
        {
            var sDomainNameParameter = sDomainName != null ?
                new ObjectParameter("sDomainName", sDomainName) :
                new ObjectParameter("sDomainName", typeof(string));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var sActionTypeParameter = sActionType != null ?
                new ObjectParameter("sActionType", sActionType) :
                new ObjectParameter("sActionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAddDeleteBlackListDomain_Result>("uspAddDeleteBlackListDomain", sDomainNameParameter, cStatusParameter, iActionByParameter, sActionTypeParameter);
        }
    
        public virtual ObjectResult<uspDeleteBlackListDomain_Result> uspDeleteBlackListDomain(string sDomainName)
        {
            var sDomainNameParameter = sDomainName != null ?
                new ObjectParameter("sDomainName", sDomainName) :
                new ObjectParameter("sDomainName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspDeleteBlackListDomain_Result>("uspDeleteBlackListDomain", sDomainNameParameter);
        }
    
        public virtual ObjectResult<uspDeleteCorporateCompany_Result> uspDeleteCorporateCompany(Nullable<int> iCompanyId)
        {
            var iCompanyIdParameter = iCompanyId.HasValue ?
                new ObjectParameter("iCompanyId", iCompanyId) :
                new ObjectParameter("iCompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspDeleteCorporateCompany_Result>("uspDeleteCorporateCompany", iCompanyIdParameter);
        }
    
        public virtual int uspGetLinkingRange(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetLinkingRange", iPropIdParameter);
        }
    
        public virtual int uspGetRatePlanOverViewBid_TT(Nullable<int> propId, string dtStart)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRatePlanOverViewBid_TT", propIdParameter, dtStartParameter);
        }
    
        public virtual ObjectResult<uspGetBookingsForTripAdvisorReview_Result> uspGetBookingsForTripAdvisorReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingsForTripAdvisorReview_Result>("uspGetBookingsForTripAdvisorReview");
        }
    
        public virtual int UpdateBookingTripAdvisorReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBookingTripAdvisorReview");
        }
    
        public virtual int UpdateBookingTripAdvisorReviewById(string customerEmail)
        {
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("customerEmail", customerEmail) :
                new ObjectParameter("customerEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBookingTripAdvisorReviewById", customerEmailParameter);
        }
    
        public virtual ObjectResult<uspGetAwardLogByPropId_Result> uspGetAwardLogByPropId(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAwardLogByPropId_Result>("uspGetAwardLogByPropId", iPropIdParameter);
        }
    
        public virtual int uspGetPropertyTripAdvisorId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetPropertyTripAdvisorId");
        }
    
        public virtual int uspGetSearchedHotelsDetailsCorp(Nullable<int> iPlaceID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<int> iAreaType, string sHotelSearch, Nullable<int> iFilterLocality, string sStarRating, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> bLogin, Nullable<int> iUserId, Nullable<bool> specialDeal, string sCurrencyCode, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<bool> internet, Nullable<bool> parking, Nullable<bool> nonSmoking, Nullable<bool> facilitiesDifferentlyAbled, Nullable<bool> fitnessCenter, Nullable<bool> familyRooms, Nullable<bool> restaurant, Nullable<bool> roomService, Nullable<bool> transfers, Nullable<bool> petFriendly, Nullable<bool> spa, Nullable<bool> outdoorPool, Nullable<bool> indoorPool, Nullable<bool> childcare, Nullable<bool> childrensClub, Nullable<bool> laundryServices, Nullable<bool> airconditionerHotel)
        {
            var iPlaceIDParameter = iPlaceID.HasValue ?
                new ObjectParameter("iPlaceID", iPlaceID) :
                new ObjectParameter("iPlaceID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var iAreaTypeParameter = iAreaType.HasValue ?
                new ObjectParameter("iAreaType", iAreaType) :
                new ObjectParameter("iAreaType", typeof(int));
    
            var sHotelSearchParameter = sHotelSearch != null ?
                new ObjectParameter("sHotelSearch", sHotelSearch) :
                new ObjectParameter("sHotelSearch", typeof(string));
    
            var iFilterLocalityParameter = iFilterLocality.HasValue ?
                new ObjectParameter("iFilterLocality", iFilterLocality) :
                new ObjectParameter("iFilterLocality", typeof(int));
    
            var sStarRatingParameter = sStarRating != null ?
                new ObjectParameter("sStarRating", sStarRating) :
                new ObjectParameter("sStarRating", typeof(string));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(int));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            var sCurrencyCodeParameter = sCurrencyCode != null ?
                new ObjectParameter("sCurrencyCode", sCurrencyCode) :
                new ObjectParameter("sCurrencyCode", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var internetParameter = internet.HasValue ?
                new ObjectParameter("Internet", internet) :
                new ObjectParameter("Internet", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("Parking", parking) :
                new ObjectParameter("Parking", typeof(bool));
    
            var nonSmokingParameter = nonSmoking.HasValue ?
                new ObjectParameter("NonSmoking", nonSmoking) :
                new ObjectParameter("NonSmoking", typeof(bool));
    
            var facilitiesDifferentlyAbledParameter = facilitiesDifferentlyAbled.HasValue ?
                new ObjectParameter("FacilitiesDifferentlyAbled", facilitiesDifferentlyAbled) :
                new ObjectParameter("FacilitiesDifferentlyAbled", typeof(bool));
    
            var fitnessCenterParameter = fitnessCenter.HasValue ?
                new ObjectParameter("FitnessCenter", fitnessCenter) :
                new ObjectParameter("FitnessCenter", typeof(bool));
    
            var familyRoomsParameter = familyRooms.HasValue ?
                new ObjectParameter("FamilyRooms", familyRooms) :
                new ObjectParameter("FamilyRooms", typeof(bool));
    
            var restaurantParameter = restaurant.HasValue ?
                new ObjectParameter("Restaurant", restaurant) :
                new ObjectParameter("Restaurant", typeof(bool));
    
            var roomServiceParameter = roomService.HasValue ?
                new ObjectParameter("RoomService", roomService) :
                new ObjectParameter("RoomService", typeof(bool));
    
            var transfersParameter = transfers.HasValue ?
                new ObjectParameter("Transfers", transfers) :
                new ObjectParameter("Transfers", typeof(bool));
    
            var petFriendlyParameter = petFriendly.HasValue ?
                new ObjectParameter("PetFriendly", petFriendly) :
                new ObjectParameter("PetFriendly", typeof(bool));
    
            var spaParameter = spa.HasValue ?
                new ObjectParameter("Spa", spa) :
                new ObjectParameter("Spa", typeof(bool));
    
            var outdoorPoolParameter = outdoorPool.HasValue ?
                new ObjectParameter("OutdoorPool", outdoorPool) :
                new ObjectParameter("OutdoorPool", typeof(bool));
    
            var indoorPoolParameter = indoorPool.HasValue ?
                new ObjectParameter("IndoorPool", indoorPool) :
                new ObjectParameter("IndoorPool", typeof(bool));
    
            var childcareParameter = childcare.HasValue ?
                new ObjectParameter("Childcare", childcare) :
                new ObjectParameter("Childcare", typeof(bool));
    
            var childrensClubParameter = childrensClub.HasValue ?
                new ObjectParameter("ChildrensClub", childrensClub) :
                new ObjectParameter("ChildrensClub", typeof(bool));
    
            var laundryServicesParameter = laundryServices.HasValue ?
                new ObjectParameter("LaundryServices", laundryServices) :
                new ObjectParameter("LaundryServices", typeof(bool));
    
            var airconditionerHotelParameter = airconditionerHotel.HasValue ?
                new ObjectParameter("AirconditionerHotel", airconditionerHotel) :
                new ObjectParameter("AirconditionerHotel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetSearchedHotelsDetailsCorp", iPlaceIDParameter, dtCheckInParameter, dtCheckOutParameter, iAreaTypeParameter, sHotelSearchParameter, iFilterLocalityParameter, sStarRatingParameter, dMinPriceParameter, dMaxPriceParameter, bLoginParameter, iUserIdParameter, specialDealParameter, sCurrencyCodeParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, internetParameter, parkingParameter, nonSmokingParameter, facilitiesDifferentlyAbledParameter, fitnessCenterParameter, familyRoomsParameter, restaurantParameter, roomServiceParameter, transfersParameter, petFriendlyParameter, spaParameter, outdoorPoolParameter, indoorPoolParameter, childcareParameter, childrensClubParameter, laundryServicesParameter, airconditionerHotelParameter);
        }
    
        public virtual int uspSearchRoomsForHotelCorp(Nullable<int> iHotelID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<bool> bLogin, string currency, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> specialDeal)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchRoomsForHotelCorp", iHotelIDParameter, dtCheckInParameter, dtCheckOutParameter, bLoginParameter, currencyParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, dMinPriceParameter, dMaxPriceParameter, specialDealParameter);
        }
    
        public virtual ObjectResult<string> GetEmailByModule(string sModule)
        {
            var sModuleParameter = sModule != null ?
                new ObjectParameter("sModule", sModule) :
                new ObjectParameter("sModule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmailByModule", sModuleParameter);
        }
    
        public virtual ObjectResult<string> usp_delete_cascade(string base_table_name, string base_criteria)
        {
            var base_table_nameParameter = base_table_name != null ?
                new ObjectParameter("base_table_name", base_table_name) :
                new ObjectParameter("base_table_name", typeof(string));
    
            var base_criteriaParameter = base_criteria != null ?
                new ObjectParameter("base_criteria", base_criteria) :
                new ObjectParameter("base_criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_delete_cascade", base_table_nameParameter, base_criteriaParameter);
        }
    
        public virtual int uspCancelBookingOFR_Test(Nullable<long> iBookingId, Nullable<decimal> iCountryOffset)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            var iCountryOffsetParameter = iCountryOffset.HasValue ?
                new ObjectParameter("iCountryOffset", iCountryOffset) :
                new ObjectParameter("iCountryOffset", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCancelBookingOFR_Test", iBookingIdParameter, iCountryOffsetParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckCorporateEmail(Nullable<long> iUserId, string sEmail)
        {
            var iUserIdParameter = iUserId.HasValue ?
                new ObjectParameter("iUserId", iUserId) :
                new ObjectParameter("iUserId", typeof(long));
    
            var sEmailParameter = sEmail != null ?
                new ObjectParameter("sEmail", sEmail) :
                new ObjectParameter("sEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckCorporateEmail", iUserIdParameter, sEmailParameter);
        }
    
        public virtual int uspDashBoardNotifications_Test(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDashBoardNotifications_Test", iPropIdParameter);
        }
    
        public virtual int uspGetBidSimulateDataCorpPublic(Nullable<int> propId, string dtArrival, string dtBooking, Nullable<short> lOS, Nullable<short> rooms, Nullable<short> occupancy, string type)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtArrivalParameter = dtArrival != null ?
                new ObjectParameter("dtArrival", dtArrival) :
                new ObjectParameter("dtArrival", typeof(string));
    
            var dtBookingParameter = dtBooking != null ?
                new ObjectParameter("dtBooking", dtBooking) :
                new ObjectParameter("dtBooking", typeof(string));
    
            var lOSParameter = lOS.HasValue ?
                new ObjectParameter("LOS", lOS) :
                new ObjectParameter("LOS", typeof(short));
    
            var roomsParameter = rooms.HasValue ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(short));
    
            var occupancyParameter = occupancy.HasValue ?
                new ObjectParameter("Occupancy", occupancy) :
                new ObjectParameter("Occupancy", typeof(short));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBidSimulateDataCorpPublic", propIdParameter, dtArrivalParameter, dtBookingParameter, lOSParameter, roomsParameter, occupancyParameter, typeParameter);
        }
    
        public virtual int uspGetMasterTaxMappings(string search, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, string sortBy, ObjectParameter totalCount)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetMasterTaxMappings", searchParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, sortByParameter, totalCount);
        }
    
        public virtual int uspGetMasterTaxMappingsExports(string sIds)
        {
            var sIdsParameter = sIds != null ?
                new ObjectParameter("sIds", sIds) :
                new ObjectParameter("sIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetMasterTaxMappingsExports", sIdsParameter);
        }
    
        public virtual int uspGetMinIncomeList(string starCategory, Nullable<int> iCityId, string stateIds, string propIds, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, string sortBy, ObjectParameter totalCount)
        {
            var starCategoryParameter = starCategory != null ?
                new ObjectParameter("StarCategory", starCategory) :
                new ObjectParameter("StarCategory", typeof(string));
    
            var iCityIdParameter = iCityId.HasValue ?
                new ObjectParameter("iCityId", iCityId) :
                new ObjectParameter("iCityId", typeof(int));
    
            var stateIdsParameter = stateIds != null ?
                new ObjectParameter("StateIds", stateIds) :
                new ObjectParameter("StateIds", typeof(string));
    
            var propIdsParameter = propIds != null ?
                new ObjectParameter("PropIds", propIds) :
                new ObjectParameter("PropIds", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetMinIncomeList", starCategoryParameter, iCityIdParameter, stateIdsParameter, propIdsParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, sortByParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetMinIncomeListToExport_Result> uspGetMinIncomeListToExport(string sPropIds)
        {
            var sPropIdsParameter = sPropIds != null ?
                new ObjectParameter("sPropIds", sPropIds) :
                new ObjectParameter("sPropIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetMinIncomeListToExport_Result>("uspGetMinIncomeListToExport", sPropIdsParameter);
        }
    
        public virtual int uspGetRatePlanOverViewBid_Bak(Nullable<int> propId, string dtStart)
        {
            var propIdParameter = propId.HasValue ?
                new ObjectParameter("PropId", propId) :
                new ObjectParameter("PropId", typeof(int));
    
            var dtStartParameter = dtStart != null ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetRatePlanOverViewBid_Bak", propIdParameter, dtStartParameter);
        }
    
        public virtual int uspSearchRoomsForHotelCorp_Test(Nullable<int> iHotelID, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, Nullable<bool> bLogin, string currency, Nullable<bool> bIsAirConditioning, Nullable<bool> bIsBathtub, Nullable<bool> bIsFlatScreenTV, Nullable<bool> bIsSoundproof, Nullable<bool> bIsView, Nullable<bool> bIsInternetFacilities, Nullable<bool> bIsPrivatePool, Nullable<bool> bIsRoomService, Nullable<decimal> dMinPrice, Nullable<decimal> dMaxPrice, Nullable<bool> specialDeal)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var bLoginParameter = bLogin.HasValue ?
                new ObjectParameter("bLogin", bLogin) :
                new ObjectParameter("bLogin", typeof(bool));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var bIsAirConditioningParameter = bIsAirConditioning.HasValue ?
                new ObjectParameter("bIsAirConditioning", bIsAirConditioning) :
                new ObjectParameter("bIsAirConditioning", typeof(bool));
    
            var bIsBathtubParameter = bIsBathtub.HasValue ?
                new ObjectParameter("bIsBathtub", bIsBathtub) :
                new ObjectParameter("bIsBathtub", typeof(bool));
    
            var bIsFlatScreenTVParameter = bIsFlatScreenTV.HasValue ?
                new ObjectParameter("bIsFlatScreenTV", bIsFlatScreenTV) :
                new ObjectParameter("bIsFlatScreenTV", typeof(bool));
    
            var bIsSoundproofParameter = bIsSoundproof.HasValue ?
                new ObjectParameter("bIsSoundproof", bIsSoundproof) :
                new ObjectParameter("bIsSoundproof", typeof(bool));
    
            var bIsViewParameter = bIsView.HasValue ?
                new ObjectParameter("bIsView", bIsView) :
                new ObjectParameter("bIsView", typeof(bool));
    
            var bIsInternetFacilitiesParameter = bIsInternetFacilities.HasValue ?
                new ObjectParameter("bIsInternetFacilities", bIsInternetFacilities) :
                new ObjectParameter("bIsInternetFacilities", typeof(bool));
    
            var bIsPrivatePoolParameter = bIsPrivatePool.HasValue ?
                new ObjectParameter("bIsPrivatePool", bIsPrivatePool) :
                new ObjectParameter("bIsPrivatePool", typeof(bool));
    
            var bIsRoomServiceParameter = bIsRoomService.HasValue ?
                new ObjectParameter("bIsRoomService", bIsRoomService) :
                new ObjectParameter("bIsRoomService", typeof(bool));
    
            var dMinPriceParameter = dMinPrice.HasValue ?
                new ObjectParameter("dMinPrice", dMinPrice) :
                new ObjectParameter("dMinPrice", typeof(decimal));
    
            var dMaxPriceParameter = dMaxPrice.HasValue ?
                new ObjectParameter("dMaxPrice", dMaxPrice) :
                new ObjectParameter("dMaxPrice", typeof(decimal));
    
            var specialDealParameter = specialDeal.HasValue ?
                new ObjectParameter("SpecialDeal", specialDeal) :
                new ObjectParameter("SpecialDeal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchRoomsForHotelCorp_Test", iHotelIDParameter, dtCheckInParameter, dtCheckOutParameter, bLoginParameter, currencyParameter, bIsAirConditioningParameter, bIsBathtubParameter, bIsFlatScreenTVParameter, bIsSoundproofParameter, bIsViewParameter, bIsInternetFacilitiesParameter, bIsPrivatePoolParameter, bIsRoomServiceParameter, dMinPriceParameter, dMaxPriceParameter, specialDealParameter);
        }
    
        public virtual int uspSetMasterTax(Nullable<int> iMasterTaxId, Nullable<int> iRangeId, Nullable<System.DateTime> dtStayFrom, Nullable<System.DateTime> dtStayTo, Nullable<bool> bAllStates, Nullable<int> iActionBy)
        {
            var iMasterTaxIdParameter = iMasterTaxId.HasValue ?
                new ObjectParameter("iMasterTaxId", iMasterTaxId) :
                new ObjectParameter("iMasterTaxId", typeof(int));
    
            var iRangeIdParameter = iRangeId.HasValue ?
                new ObjectParameter("iRangeId", iRangeId) :
                new ObjectParameter("iRangeId", typeof(int));
    
            var dtStayFromParameter = dtStayFrom.HasValue ?
                new ObjectParameter("dtStayFrom", dtStayFrom) :
                new ObjectParameter("dtStayFrom", typeof(System.DateTime));
    
            var dtStayToParameter = dtStayTo.HasValue ?
                new ObjectParameter("dtStayTo", dtStayTo) :
                new ObjectParameter("dtStayTo", typeof(System.DateTime));
    
            var bAllStatesParameter = bAllStates.HasValue ?
                new ObjectParameter("bAllStates", bAllStates) :
                new ObjectParameter("bAllStates", typeof(bool));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSetMasterTax", iMasterTaxIdParameter, iRangeIdParameter, dtStayFromParameter, dtStayToParameter, bAllStatesParameter, iActionByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspSetMinIncome(string sPropIds, Nullable<decimal> dMinimumIncome, Nullable<System.DateTime> dtMinIncomeActionDate, Nullable<int> iActionBy)
        {
            var sPropIdsParameter = sPropIds != null ?
                new ObjectParameter("sPropIds", sPropIds) :
                new ObjectParameter("sPropIds", typeof(string));
    
            var dMinimumIncomeParameter = dMinimumIncome.HasValue ?
                new ObjectParameter("dMinimumIncome", dMinimumIncome) :
                new ObjectParameter("dMinimumIncome", typeof(decimal));
    
            var dtMinIncomeActionDateParameter = dtMinIncomeActionDate.HasValue ?
                new ObjectParameter("dtMinIncomeActionDate", dtMinIncomeActionDate) :
                new ObjectParameter("dtMinIncomeActionDate", typeof(System.DateTime));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspSetMinIncome", sPropIdsParameter, dMinimumIncomeParameter, dtMinIncomeActionDateParameter, iActionByParameter);
        }
    
        public virtual ObjectResult<uspTripAdvisorMonthlyReport_Result> uspTripAdvisorMonthlyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTripAdvisorMonthlyReport_Result>("uspTripAdvisorMonthlyReport");
        }
    
        public virtual int uspUpdateLOCIDfromLIVEdata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateLOCIDfromLIVEdata");
        }
    
        public virtual ObjectResult<uspEnableDisableMasterTax_Result> uspEnableDisableMasterTax(Nullable<int> iMasterTaxId, string cStatus, Nullable<int> iActionBy)
        {
            var iMasterTaxIdParameter = iMasterTaxId.HasValue ?
                new ObjectParameter("iMasterTaxId", iMasterTaxId) :
                new ObjectParameter("iMasterTaxId", typeof(int));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspEnableDisableMasterTax_Result>("uspEnableDisableMasterTax", iMasterTaxIdParameter, cStatusParameter, iActionByParameter);
        }
    
        public virtual int uspGetBookingsForTaxChange(Nullable<bool> bAllDates, Nullable<System.DateTime> dtStart, Nullable<System.DateTime> dtEnd)
        {
            var bAllDatesParameter = bAllDates.HasValue ?
                new ObjectParameter("bAllDates", bAllDates) :
                new ObjectParameter("bAllDates", typeof(bool));
    
            var dtStartParameter = dtStart.HasValue ?
                new ObjectParameter("dtStart", dtStart) :
                new ObjectParameter("dtStart", typeof(System.DateTime));
    
            var dtEndParameter = dtEnd.HasValue ?
                new ObjectParameter("dtEnd", dtEnd) :
                new ObjectParameter("dtEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetBookingsForTaxChange", bAllDatesParameter, dtStartParameter, dtEndParameter);
        }
    
        public virtual ObjectResult<uspGetBookingsForTaxChangeForEmail_Result> uspGetBookingsForTaxChangeForEmail(string hotelIds, string cityIds, Nullable<int> iBookingID, Nullable<int> displayLength, Nullable<int> displayStart, string sortDirection, string sortBy, ObjectParameter totalCount)
        {
            var hotelIdsParameter = hotelIds != null ?
                new ObjectParameter("HotelIds", hotelIds) :
                new ObjectParameter("HotelIds", typeof(string));
    
            var cityIdsParameter = cityIds != null ?
                new ObjectParameter("CityIds", cityIds) :
                new ObjectParameter("CityIds", typeof(string));
    
            var iBookingIDParameter = iBookingID.HasValue ?
                new ObjectParameter("iBookingID", iBookingID) :
                new ObjectParameter("iBookingID", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBookingsForTaxChangeForEmail_Result>("uspGetBookingsForTaxChangeForEmail", hotelIdsParameter, cityIdsParameter, iBookingIDParameter, displayLengthParameter, displayStartParameter, sortDirectionParameter, sortByParameter, totalCount);
        }
    
        public virtual ObjectResult<uspGetMasterTaxMappingsToExport_Result> uspGetMasterTaxMappingsToExport(string sIds)
        {
            var sIdsParameter = sIds != null ?
                new ObjectParameter("sIds", sIds) :
                new ObjectParameter("sIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetMasterTaxMappingsToExport_Result>("uspGetMasterTaxMappingsToExport", sIdsParameter);
        }
    
        public virtual int uspUpdateEmailStatusForTaxChange(Nullable<int> iActionBy)
        {
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateEmailStatusForTaxChange", iActionByParameter);
        }
    
        public virtual int uspGetGuestInvoiceDetailsByBookingId(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetGuestInvoiceDetailsByBookingId", bookingidParameter);
        }
    
        [DbFunction("OneFineRateEntities", "ExplodeDatesWOtime")]
        public virtual IQueryable<Nullable<System.DateTime>> ExplodeDatesWOtime(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.DateTime>>("[OneFineRateEntities].[ExplodeDatesWOtime](@startdate, @enddate)", startdateParameter, enddateParameter);
        }
    
        public virtual int uspCancelLoyaltyBooking(Nullable<long> iCustomerId, Nullable<long> iBookingId)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCancelLoyaltyBooking", iCustomerIdParameter, iBookingIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetTaxes(Nullable<int> bookingId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("bookingId", bookingId) :
                new ObjectParameter("bookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetTaxes", bookingIdParameter);
        }
    
        public virtual int uspPreviewOfSelectedRoomForRedemption(Nullable<int> iHotelID, Nullable<int> iCustomerId, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPreviewOfSelectedRoomForRedemption", iHotelIDParameter, iCustomerIdParameter, dtCheckInParameter, dtCheckOutParameter, currencyParameter);
        }
    
        public virtual ObjectResult<uspSaveRatesForRoomRatePlans_Ph_Result> uspSaveRatesForRoomRatePlans_Ph(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> iRoomId, Nullable<int> iRPId, Nullable<int> iPropId, Nullable<int> iActionBy, Nullable<decimal> dSingleRate, Nullable<decimal> dDoubleRate, Nullable<decimal> dTripleRate, Nullable<decimal> dQuadrupleRate, Nullable<decimal> dQuintrupleRate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var iRoomIdParameter = iRoomId.HasValue ?
                new ObjectParameter("iRoomId", iRoomId) :
                new ObjectParameter("iRoomId", typeof(long));
    
            var iRPIdParameter = iRPId.HasValue ?
                new ObjectParameter("iRPId", iRPId) :
                new ObjectParameter("iRPId", typeof(int));
    
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            var iActionByParameter = iActionBy.HasValue ?
                new ObjectParameter("iActionBy", iActionBy) :
                new ObjectParameter("iActionBy", typeof(int));
    
            var dSingleRateParameter = dSingleRate.HasValue ?
                new ObjectParameter("dSingleRate", dSingleRate) :
                new ObjectParameter("dSingleRate", typeof(decimal));
    
            var dDoubleRateParameter = dDoubleRate.HasValue ?
                new ObjectParameter("dDoubleRate", dDoubleRate) :
                new ObjectParameter("dDoubleRate", typeof(decimal));
    
            var dTripleRateParameter = dTripleRate.HasValue ?
                new ObjectParameter("dTripleRate", dTripleRate) :
                new ObjectParameter("dTripleRate", typeof(decimal));
    
            var dQuadrupleRateParameter = dQuadrupleRate.HasValue ?
                new ObjectParameter("dQuadrupleRate", dQuadrupleRate) :
                new ObjectParameter("dQuadrupleRate", typeof(decimal));
    
            var dQuintrupleRateParameter = dQuintrupleRate.HasValue ?
                new ObjectParameter("dQuintrupleRate", dQuintrupleRate) :
                new ObjectParameter("dQuintrupleRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSaveRatesForRoomRatePlans_Ph_Result>("uspSaveRatesForRoomRatePlans_Ph", startDateParameter, endDateParameter, iRoomIdParameter, iRPIdParameter, iPropIdParameter, iActionByParameter, dSingleRateParameter, dDoubleRateParameter, dTripleRateParameter, dQuadrupleRateParameter, dQuintrupleRateParameter);
        }
    
        public virtual int uspSearchRoomsForHotelForRedemption(Nullable<int> iHotelID, Nullable<int> iCustomerId, Nullable<System.DateTime> dtCheckIn, Nullable<System.DateTime> dtCheckOut, string currency)
        {
            var iHotelIDParameter = iHotelID.HasValue ?
                new ObjectParameter("iHotelID", iHotelID) :
                new ObjectParameter("iHotelID", typeof(int));
    
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(int));
    
            var dtCheckInParameter = dtCheckIn.HasValue ?
                new ObjectParameter("dtCheckIn", dtCheckIn) :
                new ObjectParameter("dtCheckIn", typeof(System.DateTime));
    
            var dtCheckOutParameter = dtCheckOut.HasValue ?
                new ObjectParameter("dtCheckOut", dtCheckOut) :
                new ObjectParameter("dtCheckOut", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchRoomsForHotelForRedemption", iHotelIDParameter, iCustomerIdParameter, dtCheckInParameter, dtCheckOutParameter, currencyParameter);
        }
    
        public virtual int uspUpdateCityAreaLocalityForSearchByPropId(Nullable<int> iPropId)
        {
            var iPropIdParameter = iPropId.HasValue ?
                new ObjectParameter("iPropId", iPropId) :
                new ObjectParameter("iPropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateCityAreaLocalityForSearchByPropId", iPropIdParameter);
        }
    
        public virtual int uspUpdateFreebiesByBookingId(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateFreebiesByBookingId", iBookingIdParameter);
        }
    
        public virtual ObjectResult<uspUpdateLoyaltyBookingStatus_Result> uspUpdateLoyaltyBookingStatus(Nullable<long> iCustomerId, Nullable<long> iBookingId)
        {
            var iCustomerIdParameter = iCustomerId.HasValue ?
                new ObjectParameter("iCustomerId", iCustomerId) :
                new ObjectParameter("iCustomerId", typeof(long));
    
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspUpdateLoyaltyBookingStatus_Result>("uspUpdateLoyaltyBookingStatus", iCustomerIdParameter, iBookingIdParameter);
        }
    
        public virtual int uspUpdateRedemptionLoyalityPointsByBooking(Nullable<long> iBookingId)
        {
            var iBookingIdParameter = iBookingId.HasValue ?
                new ObjectParameter("iBookingId", iBookingId) :
                new ObjectParameter("iBookingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRedemptionLoyalityPointsByBooking", iBookingIdParameter);
        }
    }
}
