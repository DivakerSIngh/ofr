@model OneFineRateBLL.Entities.BookingGuestDetails
@using OneFineRateAppUtil

@{
    ViewBag.Title = "GuestInformation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    String GrandTotal = "";
    var showRefundMessage = ViewBag.showRefundMessage;
}



<style>
        label.error {
            color: red !important;
        }

        .ptype {
            width: 100% !important;
        }
        .ptypeo{
            width:100% !important;
        }
        

        .select2 {
            width: 50% !important;
            float: left !important;
        }

        .select2-container--default .select2-selection--single {
            height: 34px;
        }

            .select2-container--default .select2-selection--single .select2-selection__rendered {
                line-height: 33px;
            }
            @@media only screen and (max-device-width: 375px) {
                .select2 {
                    width: 100% !important;
                    float: left !important;
                }
                .gphone {
                    width: 100% !important;
                }
                .gphoneo {
                    width: 100% !important;
                }
    }
    @@media only screen and (max-device-width: 480px) {
        .select2 {
            width: 100% !important;
            float: left !important;
        }
        .gphone {
            width: 100% !important;
        }
        .gphoneo {
            width: 100% !important;
        }
    }
    @@media only screen and (max-device-width: 568px) {
        .select2 {
            width: 100% !important;
            float: left !important;
        }
        .gphone {
            width: 100% !important;
        }
        .gphoneo {
            width: 100% !important;
        }
    }
</style>


@using (Html.BeginForm("UpdateGuestInformation", "Negotiation", FormMethod.Post, new { ReturnUrl = ViewBag.ReturnUrl, id = Request.Browser.IsMobileDevice ? "frmBooking_Mobile" : "frmBooking", role = "form" }))
{

    @Html.HiddenFor(m => Model.sPropertyName)
    @Html.HiddenFor(m => Model.sPropertyAddress)
    @Html.HiddenFor(m => Model.iStarCategory)

    @Html.HiddenFor(m => Model.objBooking.iBookingId)
    @Html.HiddenFor(m => Model.objBooking.iPropId)
    @Html.HiddenFor(m => Model.objBooking.iCustomerId)
    @Html.HiddenFor(m => Model.objBooking.iGuestId)
    @Html.HiddenFor(m => Model.objBooking.iCountryOffset)
    @Html.HiddenFor(m => Model.objBooking.sCountryTimeZone)
    @Html.HiddenFor(m => Model.objBooking.dtCheckIn)
    @Html.HiddenFor(m => Model.objBooking.dtChekOut)
    @Html.HiddenFor(m => Model.objBooking.dtReservationDate)
    @Html.HiddenFor(m => Model.objBooking.cBookingType)
    @Html.HiddenFor(m => Model.objBooking.iNegotiateAttempts)
    @Html.HiddenFor(m => Model.objBooking.sPromoCode)
    @Html.HiddenFor(m => Model.objBooking.bPromoDiscount)
    @Html.HiddenFor(m => Model.objBooking.bPromoAmenity)
    @Html.HiddenFor(m => Model.objBooking.sTitleOFR)
    @Html.HiddenFor(m => Model.objBooking.sFirstNameOFR)
    @Html.HiddenFor(m => Model.objBooking.sLastNameOFR)
    @Html.HiddenFor(m => Model.objBooking.sEmailOFR)
    @Html.HiddenFor(m => Model.objBooking.sMobileOFR)
    @Html.HiddenFor(m => Model.objBooking.dtActionDate)
    @Html.HiddenFor(m => Model.objBooking.iActionBy)
    @Html.HiddenFor(m => Model.objBooking.BookingStatus)
    @Html.HiddenFor(m => Model.objBooking.PaymentStatus)
    @Html.HiddenFor(m => Model.objBooking.ActualBookingType)
    @Html.HiddenFor(m => Model.objBooking.dTotalNegotiateAmount)
    @Html.HiddenFor(m => Model.objBooking.dAdvNegotiateAmount)
    @Html.HiddenFor(m => Model.objBooking.dBidAmount)
    @Html.HiddenFor(m => Model.objBooking.dTotalAmount)
    @Html.HiddenFor(m => Model.objBooking.dTotalComm)
    @Html.HiddenFor(m => Model.objBooking.dTaxes)
    @Html.HiddenFor(m => Model.objBooking.dTaxesForHotel)
    @Html.HiddenFor(m => Model.objBooking.dTotalExtraBedAmount)
    @Html.HiddenFor(m => Model.objBooking.dDiscountedBidPrice)
    @Html.HiddenFor(m => Model.objBooking.dCustomerPayable)
    @Html.HiddenFor(m => Model.objBooking.bIsFeedBackEmailSent)
    @Html.HiddenFor(m => Model.objBooking.bIsCustSmsSent)
    @Html.HiddenFor(m => Model.objBooking.bIsHotelSmsSent)
    @Html.HiddenFor(m => Model.objBooking.iCounterOffer)
    @Html.HiddenFor(m => Model.objBooking.iLinkedBookingId)
    @Html.HiddenFor(m => Model.objBooking.bInvBlocked)
    @Html.HiddenFor(m => Model.objBooking.sExtra1)
    @Html.HiddenFor(m => Model.objBooking.dccPrice)
    @Html.HiddenFor(m => Model.objBooking.dccDiscount)
    @Html.HiddenFor(m => Model.objBooking.dSafeguardComm)
    @Html.HiddenFor(m => Model.objBooking.ccType)
    @Html.HiddenFor(m => Model.objBooking.dTotalCommOriginal)
    @Html.HiddenFor(m => Model.objBooking.dTaxesOriginal)
    @Html.HiddenFor(m => Model.objBooking.sProvisionalBookingIdTG)
    @Html.HiddenFor(m => Model.objBooking.sProvisionalTrxnTypeTG)
    @Html.HiddenFor(m => Model.objBooking.sFinalTrxnTypeTG)
    @Html.HiddenFor(m => Model.objBooking.sFinalBookingIdTG)
    @Html.HiddenFor(m => Model.objBooking.bSyncToChannelMgr)
    @Html.HiddenFor(m => Model.objBooking.dtSyncToChannelMgr)
    @Html.HiddenFor(m => Model.objBooking.cSyncStatus)
    @Html.HiddenFor(m => Model.objBooking.iBidStarCategory)
    @Html.HiddenFor(m => Model.objBooking.sBidType)
    @Html.HiddenFor(m => Model.objBooking.sIDs)
    @Html.HiddenFor(m => Model.objBooking.dRefundAmount)
    @Html.HiddenFor(m => Model.objBooking.cRefundStatus)
    @Html.HiddenFor(m => Model.objBooking.cAmendStatus)
    @Html.HiddenFor(m => Model.objBooking.sPaymentMode)
    @Html.HiddenFor(m => Model.objBooking.sOAuth)
    @Html.HiddenFor(m => Model.objBooking.sExtra2)
    @Html.HiddenFor(m => Model.objBooking.sExtra3)
    @Html.HiddenFor(m => Model.objBooking.sExtra4)
    @Html.HiddenFor(m => Model.objBooking.sCurrencyCode)
    @Html.HiddenFor(m => Model.IsGuestBooking)
    @Html.HiddenFor(m => Model.CustomerId)
    @Html.HiddenFor(m => m.RatingImageUrl)
    @Html.HiddenFor(m => m.RatingString)
    @Html.HiddenFor(m => m.objBooking.dServiceCharge)
    @Html.HiddenFor(m => m.objBooking.dGSTOnServiceCharge)
    @Html.HiddenFor(m => m.objBooking.dGSTServiceType)
    @Html.HiddenFor(m => m.objBooking.dGSTValue)
    @Html.HiddenFor(m => Model.GuestData, new { id = "hdnJson" })
    @Html.HiddenFor(m => m.objBooking.iCompanyId)
    <input type="hidden" id="showRefundMessage" value="@showRefundMessage" />

    for (int hdni = 0; hdni < Model.lsttblBookDetails.Count; hdni++)
    {
        @Html.HiddenFor(m => Model.lsttblBookDetails[hdni].iBookingDetailsID)
        @Html.HiddenFor(m => Model.lsttblBookDetails[hdni].iBookingId)
        @Html.HiddenFor(m => Model.lsttblBookDetails[hdni].iRoomId)
        @Html.HiddenFor(m => Model.lsttblBookDetails[hdni].iRPId)
        @Html.HiddenFor(m => Model.lsttblBookDetails[hdni].iRooms)
    }

    var finalTaxes = Model.objBooking.dServiceCharge + Model.objBooking.dGSTOnServiceCharge + Convert.ToDecimal(Model.objBooking.dTaxes);

    <div class="container">
        <div class="col-md-12 alert alert-success margintop10">


            <h3 class="mar-padd0">
                You are just one step away to get your confirmation. Please fill in the <strong>required information</strong> .
                @*Want a higher category room: Upgrade at a steal! Check discounted upgraded rates.*@
            </h3>


        </div>
    </div>
    <div class="container margintop10" style="border:0px solid red;">
        <div class="row">

            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-4 col-xs-12">

                        <img src='@System.Configuration.ConfigurationManager.AppSettings["BlobUrl"].ToString()@Model.sMainImgUrl' onerror="this.src = '@Url.Content("~/images/noimage.jpg")'" id="imagePreview" style="height:158px" width="100%">

                    </div>
                    <div class="col-md-6 col-xs-12">
                        <h3 class="mar-padd0"><strong>@Model.sPropertyName</strong></h3>
                        <div class="margintop-5"><img src="~/images/inner-star@(Model.iStarCategory).png" class="srchinner_star"></div>

                        <address>
                            @Model.sPropertyAddress

                            <div class="row margintop10">
                                <div class="col-md-5 col-xs-12 facilityicon">
                                    <ul>
                                        @for (int i = 0; i < Model.lstetblHotelFacilities.Count; i++)
                                        {
                                            <li><img src='@System.Configuration.ConfigurationManager.AppSettings["BlobUrl"].ToString()@Model.lstetblHotelFacilities[i].sImgUrl' id="iconPreview" title="@Model.lstetblHotelFacilities[i].sHotelFacilites" style="height: 20px; width: 20px"></li>
                                        }
                                    </ul>
                                </div>
                                <div class="col-md-7 col-xs-12 facilityicon">
                                    @if (!string.IsNullOrEmpty(Model.RatingImageUrl))
                                    {
                                        <img src="@Model.RatingImageUrl" /><br />
                                    }
                                    @if (!string.IsNullOrEmpty(Model.RatingString))
                                    {
                                        <em class="green">
                                            @Model.RatingString
                                        </em>
                                    }
                                </div>
                                <br />
                            </div>
                            <hr>
                        </address>


                        <div class="row margintop-10">
                            <div class="col-md-5 col-xs-5">Check In</div>
                            <div class="col-md-1 col-xs-1">:</div>
                            <div class="col-md-6 col-xs-5"><strong>@Model.scheckIn</strong></div>

                            <div class="col-md-5 col-xs-5">Check Out</div>
                            <div class="col-md-1 col-xs-1">:</div>
                            <div class="col-md-6 col-xs-5"><strong>@Model.scheckOut</strong></div>

                            <div class="col-md-5 col-xs-5">Room(s)</div>
                            <div class="col-md-1 col-xs-1">:</div>
                            <div class="col-md-6 col-xs-5"><strong>@Model.iNoOfRooms</strong></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-xs-12">
                <div class="row ">
                    <div class="col-md-12">
                        <h4 class="center">Total Summary </h4>
                        <hr>

                        @if (Model.objBooking.cBookingType == "N")
                        {
                            <div class="row">
                                <div class="col-md-6 col-xs-6 pull-left">Rooms Rate</div>
                                <div class="col-md-1 col-xs-1">:</div>

                                @if (Model.objBooking.BookingStatus == "NP")
                                {
                                    GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount) + finalTaxes);
                                    <div class="col-md-5  col-xs-5 pull-right">
                                        <strong>
                                            @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount))
                                        </strong>
                                    </div>
                                }
                                else if (Model.objBooking.BookingStatus == "CP")
                                {
                                    if (Model.objBooking.ccType == "CA")
                                    {
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount + finalTaxes));
                                        <div class="col-md-5  col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount))
                                            </strong>
                                        </div>
                                    }
                                    if (Model.objBooking.ccType == "CR")
                                    {
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dccPrice + finalTaxes));
                                        <div class="col-md-5  col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dccPrice))
                                            </strong>
                                        </div>
                                    }
                                    else
                                    {
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.iCounterOffer + finalTaxes));
                                        <div class="col-md-5  col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.iCounterOffer))
                                            </strong>
                                        </div>
                                    }

                                }
                                else if (Model.objBooking.BookingStatus == "PC")
                                {
                                    if (Model.objBooking.ccType == "RR")
                                    {
                                        <div class="col-md-5 col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalAmount) + Convert.ToDecimal(Model.objBooking.dTotalExtraBedAmount))
                                            </strong>
                                        </div>
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalAmount + Model.objBooking.dTotalExtraBedAmount + finalTaxes) - Convert.ToDecimal(Model.objBooking.dccDiscount));
                                    }
                                    else if (Model.objBooking.ccType == "RA")
                                    {
                                        <div class="col-md-5 col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount))
                                            </strong>
                                        </div>
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalNegotiateAmount + finalTaxes));
                                    }
                                    else if (Model.objBooking.ActualBookingType == "B")
                                    {
                                        GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dCustomerPayable) + finalTaxes + Convert.ToDecimal(Model.objBooking.dAdvNegotiateAmount));
                                        <div class="col-md-5 col-xs-5 pull-right">
                                            <strong>
                                                @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dCustomerPayable) + Convert.ToDecimal(Model.objBooking.dAdvNegotiateAmount))
                                            </strong>
                                        </div>
                                    }

                                }
                                else if (Model.objBooking.BookingStatus == "FA")
                                {
                                    <div class="col-md-5 col-xs-5 pull-right">
                                        <strong>
                                            @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dccPrice))
                                        </strong>
                                    </div>
                                    GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalAmount + Model.objBooking.dccPrice + finalTaxes) - Convert.ToDecimal(Model.objBooking.dccDiscount));

                                }

                            </div>

                        }
                        else if (Model.objBooking.cBookingType == "B")
                        {
                            <div class="row">
                                <div class="col-md-6 col-xs-5 pull-left">Rooms Rate</div>
                                <div class="col-md-1 col-xs-1">:</div>

                                <div class="col-md-5  col-xs-5 pull-right">
                                    <strong>
                                        @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dCustomerPayable))
                                    </strong>
                                </div>


                            </div>

                            GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dCustomerPayable + finalTaxes));
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-md-6 col-xs-5 pull-left">Rooms Rate</div>
                                <div class="col-md-1 col-xs-1">:</div>

                                <div class="col-md-5  col-xs-5 pull-right">
                                    <strong>
                                        @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalAmount))
                                    </strong>
                                </div>
                            </div>

                            if (Model.objBooking.dTotalExtraBedAmount != null && Model.objBooking.dTotalExtraBedAmount != 0)
                            {
                                <div class="row">
                                    <div class="col-md-6  col-xs-5">Extra Bed Charges </div>
                                    <div class="col-md-1 col-xs-1">:</div>
                                    <div class="col-md-5  col-xs-5  pull-right">
                                        <strong>
                                            @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalExtraBedAmount))
                                        </strong>
                                    </div>
                                </div>
                            }

                            GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dTotalAmount + Model.objBooking.dTotalExtraBedAmount + finalTaxes));
                        }

                        @if (Model.objBooking.sExtra3 == "Redeem")
                        {
                            if (finalTaxes > 0)
                            {

                                <div class="row">
                                    <div class="col-md-6  col-xs-5">Points Redeemed</div>
                                    <div class="col-md-1 col-xs-1">:</div>
                                    <div class="col-md-5  col-xs-5  pull-right">
                                        <strong>
                                            @Model.objBooking.RedeemedPoints
                                        </strong>
                                    </div>
                                </div>

                                <hr />

                                <div class="row">
                                    <div class="col-md-6  col-xs-5">Services & Taxes Paid</div>
                                    <div class="col-md-1 col-xs-1">:</div>
                                    <div class="col-md-5  col-xs-5  pull-right">
                                        <strong>
                                            @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(finalTaxes)
                                        </strong>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            if (finalTaxes > 0)
                            {
                                <div class="row">
                                    <div class="col-md-6  col-xs-5">Services & Taxes </div>
                                    <div class="col-md-1 col-xs-1">:</div>
                                    <div class="col-md-5  col-xs-5  pull-right">
                                        <strong>
                                            @Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(finalTaxes)
                                        </strong>
                                    </div>
                                </div>
                            }

                            if (Model.objBooking.ccType == "RR")
                            {
                                <div class="row">
                                    <div class="col-md-6  col-xs-5">Hotel Discount</div>
                                    <div class="col-md-1 col-xs-1">:</div>
                                    <div class="col-md-5  col-xs-5  pull-right"><strong>@Model.Symbol @clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dccDiscount))</strong></div>
                                </div>
                            }

                            if (Model.objBooking.cBookingType == "R")
                            {
                                if (Model.objBooking.bPromoDiscount == true)
                                {
                                    <div class="row">
                                        <div class="col-md-6  col-xs-5">Discount</div>
                                        <div class="col-md-1 col-xs-1">:</div>
                                        <div class="col-md-5  col-xs-5  pull-right">
                                            <strong>
                                                @Model.Symbol @OneFineRateAppUtil.clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.objBooking.dDiscountedBidPrice))
                                            </strong>
                                        </div>
                                    </div>

                                    GrandTotal = clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal((Model.objBooking.dTotalAmount + Model.objBooking.dTotalExtraBedAmount + finalTaxes) - Convert.ToDecimal(Model.objBooking.dDiscountedBidPrice)));
                                }
                                else if (Model.objBooking.bPromoDiscount == false)
                                {
                                    <div class="row">
                                        <div class="col-md-6  col-xs-5">Offer Given</div>
                                        <div class="col-md-1 col-xs-1">:</div>
                                        <div class="col-md-5  col-xs-5  pull-right">
                                            <strong>
                                                @Model.objBooking.bPromoAmenity
                                            </strong>
                                        </div>
                                    </div>
                                }
                            }

                            <hr>

                            <div class="row">
                                <div class="col-md-6  col-xs-5">Total</div>
                                <div class="col-md-1  col-xs-2">:</div>
                                <div class="col-md-5  col-xs-5  pull-right"><strong>@Model.Symbol @GrandTotal</strong></div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="container  margintop30">
        <div class=" greybg-lighter">

            <h4 id="checkur">
                Are you the guest?
                <span class="paddingleft10">
                    @Html.RadioButtonFor(model => model.objBooking.bSelfTravelling, true, new { @class = "radio-inline", @checked = "checked" })
                    <label for="Yes">Yes</label>&nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.RadioButtonFor(model => model.objBooking.bSelfTravelling, false, new { @class = "radio-inline" })
                    <label for="No">No</label>
                </span>
            </h4>

        </div>
    </div>


    <div class="container">

        <div class="margintop30">

            <div class="tablebluebg">Guest Information</div>

            @{int CountIndex = 0;}

            @if (Request.Browser.IsMobileDevice)
            {
                <style>
                    .select2-dropdown {
                        min-width: 200px !important;
                    }
                </style>
                <div class="table-bordered lightgrybg" id="tblmainrooms_mobile">

                    @for (int k = 0; k < Model.lsttblBookDetails.Count; k++)
                    {
                        var occupancy = Model.lsttblBookDetails[k].iOccupancy;

                        <div class="row" id="container@(CountIndex + 1)">

                            <div class="newtr room clearthisdata col-xs-12">

                                <div class="col-xs-4" style="padding-top:15px">
                                    Room
                                </div>
                                <div class="col-xs-8 form-group" style="padding-top:15px">
                                    <label>Room @(CountIndex + 1) - @Model.lsttblBookDetails[k].sRoomName</label>
                                    @Html.HiddenFor(m => Model.lsttblBookDetails[k].iBookingDetailsID, new { @class = "hdnBookingDetailId" })
                                </div>
                                <div class="col-xs-4" style="padding-top:15px">
                                    Guest Name
                                </div>
                                <div class="col-xs-8 form-group">
                                    <input type="text" id="gname_@(CountIndex + 1)" name="gname_@(CountIndex + 1)" class="form-control gname" value="@Model.objBooking.sFirstNameOFR @Model.objBooking.sLastNameOFR" maxlength="50" placeholder="Name" />
                                </div>
                                <div class="col-xs-4">
                                    Mail Id
                                </div>
                                <div class="col-xs-8 form-group">
                                    <input id="gemail_@(CountIndex + 1)" name="gemail_@(CountIndex + 1)" type="email" class="form-control gemail" value="@Model.objBooking.sEmailOFR" maxlength="100" placeholder="Email" />
                                </div>
                                <div class="col-xs-4">
                                    Mobile
                                </div>
                                <div class="col-xs-8 form-group">
                                    @Html.DropDownListFor(model => model.lsttblBookDetails[k].sCountryPhoneCode, new SelectList(Model.CountryCodePhoneList, "sCode", "sFrontendCode", !string.IsNullOrEmpty(Model.lsttblBookDetails[k].sCountryPhoneCode) ? Model.lsttblBookDetails[k].sCountryPhoneCode : "+91"), new { style = "float:left", id = "countryCodeType" + (CountIndex + 1), maxlength = "20", @class ="form-control ddlCountryCodeNego" })
                                    <input type="text" id="gphone_@(CountIndex + 1)" name="gphone_@(CountIndex + 1)" style="width:50%; float:left" pattern=" ^[\-\+]?\d+$" class="form-control gphone" value="@Model.objBooking.sMobileOFR" maxlength="10" placeholder="Phone No." />
                                </div>
                                <div class="col-xs-4">
                                    Bed Preference
                                </div>
                                <div class="col-xs-8 form-group">
                                    <select id="ptype@(CountIndex + 1)" class="form-control ptype mwidth130">
                                        <option value="">Select</option>
                                        <option value="Twin Bed">Twin Bed</option>
                                        <option value="King Bed">King Bed</option>
                                    </select>
                                </div>
                                <div class="col-xs-4">

                                </div>
                                <div id="tddefault@(CountIndex + 1)" class="col-xs-8 form-group">
                                    <div class="margintop10 col-xs-7">
                                    <a id="ancroom@(CountIndex + 1)"
                                       containerid="container@(CountIndex + 1)"
                                       rid="@(Model.lsttblBookDetails[k].iBookingDetailsID)"
                                       roomcount="@(CountIndex + 1)" 
                                       occupancy="@occupancy" 
                                       rname="@Model.lsttblBookDetails[k].sRoomName" 
                                       onclick="AddGuest_Mobile(this);" 
                                       class="showpointer">Add guest</a>
                                    </div>
                                    <div class="margintop10 col-xs-5">
                                        <a class="cleanmobile showpointer" data-parentid="container@(CountIndex + 1)">Cancel</a>
                                    </div>
                                </div>
                            </div>
                                                       
                        </div>
                        CountIndex++;

                    }
                </div>
            }
            else
            {
                <div class="table-responsive table-bordered  padding15 lightgrybg">
                    <table class="table table-bordered table-hover" id="tblmainrooms">
                        <thead>
                            <tr>
                                <th style="width:15%;">Room</th>
                                <th style="width:15%;"> Guest Name<span class="red">*</span></th>
                                <th style="width:15%;">Mail Id<span class="red">*</span>	</th>
                                <th style="width:25%;"> Mobile<span class="red">*</span></th>
                                <th style="width:10%;">Bed Preference </th>
                                <th style="width:20%;">Add Accompanying Guest</th>
                            </tr>
                        </thead>
                        <tbody>

                            @for (int k = 0; k < Model.lsttblBookDetails.Count; k++)
                            {
                                var occupancy = @Model.lsttblBookDetails[k].iOccupancy;

                            <tr class="newtr room@(CountIndex + 1)">

                                <td>
                                    <label>Room @(CountIndex + 1) <br /> @Model.lsttblBookDetails[k].sRoomName</label>
                                    @Html.HiddenFor(m => Model.lsttblBookDetails[k].iBookingDetailsID, new { @class = "hdnBookingDetailId" })
                                </td>
                                <td><input type="text" id="gname_@(CountIndex + 1)" name="gname_@(CountIndex + 1)" class="form-control gname mwidth130" value="@Model.objBooking.sFirstNameOFR @Model.objBooking.sLastNameOFR" maxlength="50" placeholder="Name" /></td>
                                <td><input id="gemail_@(CountIndex + 1)" name="gemail_@(CountIndex + 1)" type="email" class="form-control gemail mwidth130" value="@Model.objBooking.sEmailOFR" maxlength="100" placeholder="Email" /></td>
                                <td>
                                    @Html.DropDownListFor(model => model.lsttblBookDetails[k].sCountryPhoneCode, new SelectList(Model.CountryCodePhoneList, "sCode", "sFrontendCode", !string.IsNullOrEmpty(Model.lsttblBookDetails[k].sCountryPhoneCode) ? Model.lsttblBookDetails[k].sCountryPhoneCode : "+91"), new { style = "float:left", id = "countryCodeType" + (CountIndex + 1), maxlength = "20", @class = "form-control ddlCountryCodeNego" })

                                    <input type="text" id="gphone_@(CountIndex + 1)" name="gphone_@(CountIndex + 1)" style="width:50%; float:left" pattern=" ^[\-\+]?\d+$" class="form-control gphone mwidth130" value="@Model.objBooking.sMobileOFR" maxlength="10" placeholder="Phone No." />
                                </td>
                                <td>

                                    <select id="ptype@(CountIndex + 1)" class="form-control ptype mwidth130">
                                        <option value="">Select</option>
                                        <option value="Twin Bed">Twin Bed</option>
                                        <option value="King Bed">King Bed</option>
                                    </select>

                                </td>
                                <td id="tddefault@(CountIndex + 1)">
                                    <div class="margintop10"><a id="ancroom@(CountIndex + 1)" rid="@(Model.lsttblBookDetails[k].iBookingDetailsID)" roomcount="@(CountIndex + 1)" occupancy="@occupancy" rname="@Model.lsttblBookDetails[k].sRoomName" onclick="return AddGuest(this);" class="showpointer">Add Accompanying Guest</a></div>
                                    <div class="margintop10"><a class="clean showpointer">Cancel</a></div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" id="divRoom@(CountIndex + 1)"></td>
                            </tr>

                                CountIndex++;
                            }

                        </tbody>

                    </table>

                </div>
            }
            <div class="redtext">* confirmation letter will be sent to the contact details provided above.</div>
        </div>
    </div>

    <div class="container">

        <div class="tablebluebg">Preferences</div>
        <div class=" table-responsive table-bordered padding10 lightgrybg">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6 col-xs-12">ARE YOU A SINGLE LADY TRAVELLER?</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "Yes", new { @class = "radio-inline" }) Yes</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "No", new { @class = "radio-inline" }) No</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "NA", new { @class = "radio-inline", @checked = "checked" }) NA</div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-xs-12">DO YOU WANT  ROOM AWAY FROM ELEVATOR?</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_away_elevator, "Yes", new { @class = "radio-inline" }) Yes</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_away_elevator, "No", new { @class = "radio-inline" }) No</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_away_elevator, "NA", new { @class = "radio-inline", @checked = "checked" }) NA</div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-xs-12">DO YOU WANT A SMOKING ROOM?</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_smoking_room, "Yes", new { @class = "radio-inline" }) Yes</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_smoking_room, "No", new { @class = "radio-inline" }) No</div>
                    <div class="col-md-2 col-xs-3">@Html.RadioButtonFor(model => model.objBooking.spref_smoking_room, "NA", new { @class = "radio-inline", @checked = "checked" }) NA</div>
                </div>
        
                        @*<div class="row">
                <div class="@(Request.Browser.IsMobileDevice ? null : Html.Raw("col-md-12"))">
                    <div class=" table-responsive noborder">
                        <table class="table">
                            <thead class="noborder">
                                <tr>
                                    <th>Preferences</th>
                                    <th>Yes</th>
                                    <th>No</th>
                                    <th>NA</th>
                                </tr>
                            </thead>
                            <tbody class="noborder">

                                <tr>
                                    <td>ARE YOU A SINGLE LADY TRAVELLER?</td>
                                    <td>@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "Yes", new { @class = "radio-inline" })</td>
                                    <td>@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "No", new { @class = "radio-inline" })</td>
                                    <td>@Html.RadioButtonFor(model => model.objBooking.spref_single_lady, "NA", new { @class = "radio-inline", @checked = "checked" })</td>

                                </tr>
                                <tr>
                                    <td></td>
                                    
                                </tr>
                                <tr>
                                    <td></td>
                                    
                                </tr>

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>*@
                        <div class="row">
                            <div class="col-md-12">
                                <strong>Are you travelling on any Special occasion?</strong>
                                <div class="form-inline">
                                    @Html.CheckBoxFor(m => m.objBooking.Birthday, new { @class = "checkbox" })
                                    @Html.Label("lblBirthday", "Birthday") &nbsp;&nbsp;&nbsp;&nbsp;
                                    @Html.CheckBoxFor(m => m.objBooking.Anniversary, new { @class = "checkbox" })
                                    @Html.Label("lblAnniversary", "Anniversary") &nbsp;&nbsp;&nbsp;&nbsp;
                                   
                                </div>
                                <div class="form-inline">
                                    @Html.CheckBoxFor(m => m.objBooking.Honeymoon, new { @class = "checkbox" })
                                    @Html.Label("lblHoneymoon", "Honeymoon")
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class=" table-responsive noborder">
                                    <table class="table">
                                        <thead class="noborder">
                                            <tr>
                                                <th></th>
                                                <th>Yes</th>
                                                <th>No</th>
                                                <th>NA</th>
                                            </tr>
                                        </thead>
                                        <tbody class="noborder">
                                            <tr id="divpickup">
                                                <td>Car transfers required ?</td>
                                                <td>@Html.RadioButtonFor(model => model.objBooking.spref_pickup, "Yes", new { @class = "radio-inline" })</td>
                                                <td>@Html.RadioButtonFor(model => model.objBooking.spref_pickup, "No", new { @class = "radio-inline" })</td>
                                                <td>@Html.RadioButtonFor(model => model.objBooking.spref_pickup, "NA", new { @class = "radio-inline", @checked = "checked" })</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <strong>Special Requests (100 characters)</strong>


                                    @Html.TextAreaFor(m => m.objBooking.sSpecialRequests, new { @class = "form-control height100", maxlength = "100" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class=" form-inline">
                                    <strong>EXPECTED CHECK-IN TIME</strong>
                                    @Html.DropDownListFor(m => m.objBooking.sExpectedCheckIn, new List<SelectListItem> {
                                                                            new SelectListItem {Text="I am not sure",Value="I am not sure" },
                                                                            new SelectListItem {Text="00:00 - 01:00",Value="00:00 - 01:00" },new SelectListItem {Text="01:00 - 02:00",Value="01:00 - 02:00" },new SelectListItem {Text="02:00 - 03:00",Value="02:00 - 03:00" },
                                                                            new SelectListItem {Text="03:00 - 04:00",Value="03:00 - 04:00" },new SelectListItem {Text="04:00 - 05:00",Value="04:00 - 05:00" },new SelectListItem {Text="05:00 - 06:00",Value="05:00 - 06:00" },
                                                                            new SelectListItem {Text="06:00 - 07:00",Value="06:00 - 07:00" },new SelectListItem {Text="07:00 - 08:00",Value="07:00 - 08:00" },new SelectListItem {Text="08:00 - 09:00",Value="08:00 - 09:00" },
                                                                            new SelectListItem {Text="09:00 - 10:00",Value="09:00 - 10:00" },new SelectListItem {Text="10:00 - 11:00",Value="10:00 - 11:00" },new SelectListItem {Text="11:00 - 12:00",Value="11:00 - 12:00" },
                                                                            new SelectListItem {Text="12:00 - 13:00",Value="12:00 - 13:00" },new SelectListItem {Text="13:00 - 14:00",Value="13:00 - 14:00" },new SelectListItem {Text="14:00 - 15:00",Value="14:00 - 15:00" },
                                                                            new SelectListItem {Text="15:00 - 16:00",Value="15:00 - 16:00" },new SelectListItem {Text="16:00 - 17:00",Value="16:00 - 17:00" },new SelectListItem {Text="17:00 - 18:00",Value="17:00 - 18:00" },
                                                                            new SelectListItem {Text="18:00 - 19:00",Value="18:00 - 19:00" },new SelectListItem {Text="19:00 - 20:00",Value="19:00 - 20:00" },new SelectListItem {Text="20:00 - 21:00",Value="20:00 - 21:00" },
                                                                            new SelectListItem {Text="21:00 - 22:00",Value="21:00 - 22:00" },new SelectListItem {Text="22:00 - 23:00",Value="22:00 - 23:00" },new SelectListItem {Text="23:00 - 00:00",Value="23:00 - 00:00" },
                                                                            new SelectListItem {Text="00:00 - 01:00(the next day)",Value="00:00 - 01:00(the next day)" },new SelectListItem {Text="01:00 - 02:00(the next day)",Value="01:00 - 02:00(the next day)" }},
                                                                            new { @class = "form-control" })
                                </div>
                                <p>
                                    <span class="red">*</span> Please note that the check-in time of the hotel is <strong>1200hrs</strong>. Early check-in will be subject to availability
                                    and may incur extra charges.
                                </p>
                                <div class="noborder" id="tblpickup" style="display:none;">
                                    <div class="row">
                                        <div class="col-md-3 col-xs-5">Transfer details</div>
                                        <div class="col-md-9 col-xs-6">@Html.TextBoxFor(m => m.objBooking.sFlightNumber, new { @class = "form-control ", maxlength = "200" })</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3 col-xs-5 margintop5">Arrival Time</div>
                                        <div class="col-md-3 col-xs-6 margintop5">@Html.TextBoxFor(m => m.objBooking.sEstArrivalTime, new { @class = "form-control ", maxlength = "10" })</div>
                                        <div class="col-md-3 col-xs-5 margintop5 ">Type Of Car</div>
                                        <div class="col-md-3 col-xs-6 margintop5 ">@Html.DropDownListFor(m => m.objBooking.sTypeOfCar, new SelectList(OneFineRateBLL.BL_tblPropertyAmenitiesMap.GetPropertyParkingList(@Convert.ToInt32(Model.iPropId)), "sCarName", "sCarName"), "", new { @class = "form-control " })</div>
                                    </div>
                                </div>
                                @*<div class="table-responsive noborder">
                                <table id="tblpickup" style="display:none;" class="table">
                                    <tr>
                                        <td style="vertical-align:middle; width:20%;">Transfer details</td>
                                        <td colspan="4">@Html.TextBoxFor(m => m.objBooking.sFlightNumber, new { @class = "form-control ", maxlength = "200" })</td>
                                    </tr>
                                    <tr>
                                        <td style="vertical-align:middle;width:17%;">Arrival Time</td>
                                        <td>@Html.TextBoxFor(m => m.objBooking.sEstArrivalTime, new { @class = "form-control ", maxlength = "10" })</td>
                                        <td style="vertical-align:middle; width: 16%;">Type Of Car</td>
                                        <td>
                                            @Html.DropDownListFor(m => m.objBooking.sTypeOfCar, new SelectList(OneFineRateBLL.BL_tblPropertyAmenitiesMap.GetPropertyParkingList(@Convert.ToInt32(Model.iPropId)), "sCarName", "sCarName"), "", new { @class = "form-control " })
                                        </td>
                                    </tr>
                                </table>
                            </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>

    @*<br />*@

    <div class="container">

        @{ var isGStInfoReadonly = Model.IsCorporateBooking || (Model.objBooking.cBookingType) == "C" ? true : false; }

        <div class="tablebluebg"><b> GSTIN Details :</b></div>

        <div class=" table-responsive table-bordered padding10 lightgrybg">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12">
                        <label class="red">Note : Your GSTIN Compliance invoice shall be sent to you seperately on your email. </label>
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">Legal Name of Entity</label>
                        @if (isGStInfoReadonly)
                        {
                            @Html.TextBoxFor(model => model.GstnEntityName, new { placeholder = "Entity Name", @readonly = true, maxlength = "200", @class = "form-control" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.GstnEntityName, new { placeholder = "Entity Name", maxlength = "200", @class = "form-control" })
                        }

                        @Html.ValidationMessageFor(model => model.GstnEntityName, "", new { @class = "red" })
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">GSTIN of the Bussiness</label>

                        @if (isGStInfoReadonly)
                        {
                            @Html.TextBoxFor(model => model.GstnNumber, new { placeholder = "GSTIN", @readonly = true, maxlength = "200", @class = "form-control" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.GstnNumber, new { placeholder = "GSTIN", maxlength = "200", @class = "form-control" })

                        }
                        @Html.ValidationMessageFor(model => model.GstnNumber, "", new { @class = "red" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.GstnEntityType)

                        <input type="text" id="txtGstnEntityType" readonly class="form-control" />

                        @Html.DropDownListFor(model => model.GstnEntityType, new SelectList(new List<SelectListItem> {

                   new SelectListItem{ Text = "Person/Individual",Value="p" },
                    new SelectListItem{ Text = "Company",Value="c" },
                     new SelectListItem{ Text = "HUF",Value="h" },
                      new SelectListItem{ Text = "Firm",Value="f" },
                       new SelectListItem{ Text = "Association of Person (AOP)",Value="a" },
                        new SelectListItem{ Text = "AOP (Trust)",Value="t" },
                         new SelectListItem{ Text = "Body of Individuals (BOI)",Value="b" },
                          new SelectListItem{ Text = "Local Authorithy",Value="l" },
                           new SelectListItem{ Text = "Artifical Juridical Person",Value="j" },
                            new SelectListItem{ Text = "Government",Value="g" },}, "Value", "Text"), "Select", new { @class = "form-control hide", id = "ddlGstnEntityType" })

                        @Html.ValidationMessageFor(model => model.GstnEntityType, "", new { @class = "red" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("State")
                        <input type="text" id="txtGstnState" readonly class="form-control" />
                        @if (Model.GstnState.HasValue)
                        {
                            @Html.DropDownListFor(model => model.GstnState, new SelectList(OneFineRateBLL.BL_Country.GetStatesByCountryId(Model.GstnState.Value), "iStateId", "sState", Model.GstnState), "Select State", new { @class = "form-control hide", id = "ddlState", @readonly = "readonly" })

                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.GstnState, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control hide", id = "ddlState", @readonly = "readonly" })
                        }

                    </div>
                </div>
            </div>
        </div>

        <script type="text/javascript">



            window.onbeforeunload = function (event) {
                var message = 'Important: Please click on \'Save\' button to leave this page.';
                if (typeof event == 'undefined') {
                    event = window.event;
                }
                if (event) {
                    event.returnValue = message;
                }
                return message;
            };
            $("a").click(function () {
                window.onbeforeunload = null;
            });
            $(function () {
                $('input[type="submit"]').submit(function () {
                    //debugger;
                    window.onbeforeunload = null;
                });
                $('form').submit(function () {
                    //debugger;
                    window.onbeforeunload = null;
                });
            });

        </script>

        <script>
                function GetStateByGSTN(firstTwoDigit) {
                    if ($.isNumeric(firstTwoDigit)) {
                        var url = '@Url.Action("GetStatesByGST", "Negotiation")'

                        $.ajax({
                            type: "GET",
                            global: false,
                            url: url,
                            data: { gstFirstTwoDigit: firstTwoDigit },
                            success: function (data) {
                                if (data.results && data.results.iStateId != 0) {

                                    $("#ddlState").html("<option selected value='" + data.results.iStateId + "'>" + data.results.sState + "</option>").change();
                                    $('#txtGstnState').val($('#ddlState option:selected').text());
                                }
                                else {
                                    $("#ddlState").html("<option selected value=''>Select</option>").change();
                                }
                            }
                        });
                    }
                    else {
                        $("#ddlState").html("<option selected value=''>Select</option>").change();
                    }
                }
            $(function () {
                var entity = $('#ddlGstnEntityType option:selected').text();
                if (entity == 'Select') {
                    $('#txtGstnEntityType').val('');
                }
                else {
                    $('#txtGstnEntityType').val(entity);
                }
                if ($("#GstnNumber").val() != '') {
                    var firstTwoDigit = $("#GstnNumber").val().substring(0, 2);
                    GetStateByGSTN(firstTwoDigit);
                }
                else {
                    var state = $('#ddlState option:selected').text();
                    if (state == 'Select') {
                        $('#txtGstnState').val('');
                    }
                    else {
                        $('#txtGstnState').val(state);
                    }
                }
                $("#ddlGstnEntityType option").each(function (index) {
                    $(this).prop('disabled', true);
                });

                $('#GstnNumber').keyup(function (e) {

                    //debugger;

                    $(this).val($(this).val().toUpperCase());

                    var $thisVal = $(this).val();

                    if ($thisVal.length == 6) {

                        var validEntityType = ['c', 'p', 'h', 'f', 'a', 't', 'b', 'l', 'j', 'g', 'k'];

                        var sixthChar = $thisVal.charAt(5).toString().toLowerCase();

                        if ($.inArray(sixthChar, validEntityType) != -1) {

                            $('#ddlGstnEntityType').val(sixthChar).change();
                            var entity = $('#ddlGstnEntityType option:selected').text();
                            if (entity=='Select')
                                $('#txtGstnEntityType').val('');
                            else
                                $('#txtGstnEntityType').val(entity);
                            var firstTwoDigit = $thisVal.substring(0, 2);
                            GetStateByGSTN(firstTwoDigit);
                        }
                        else {

                            toastr.error('Invalid GST Number');
                        }
                    }

                    else {

                        if ($thisVal.length < 6 && $thisVal.length >= 2) {

                            $('#ddlGstnEntityType').val('').change();
                        }
                    }
                });

                $('#GstnNumber').blur(function (e) {

                    //debugger;

                    var $thisVal = $(this).val();

                    if ($thisVal && $thisVal.length >= 6) {

                        var validEntityType = ['c', 'p', 'h', 'f', 'a', 't', 'b', 'l', 'j', 'g', 'k'];

                        var sixthChar = $thisVal.charAt(5).toString().toLowerCase();

                        if ($.inArray(sixthChar, validEntityType) != -1) {

                            $('#ddlGstnEntityType').val(sixthChar).change();
                            var entity = $('#ddlGstnEntityType option:selected').text();
                            if (entity == 'Select')
                                $('#txtGstnEntityType').val('');
                            else
                                $('#txtGstnEntityType').val(entity);
                            var firstTwoDigit = $thisVal.substring(0, 2);
                            GetStateByGSTN(firstTwoDigit);

                        }
                        else {

                            toastr.error('Invalid GST Number');
                        }
                    }
                    else {

                        $('#ddlGstnEntityType').val('').change();
                        var entity = $('#ddlGstnEntityType option:selected').text();
                        if (entity == 'Select')
                            $('#txtGstnEntityType').val('');
                        else
                            $('#txtGstnEntityType').val(entity);

                        $("#ddlState").val('').change();
                        var state = $('#ddlState option:selected').text();
                        if (state == 'Select') {
                            $('#txtGstnState').val('');
                        }
                        else {
                            $('#txtGstnState').val(state);
                        }
                    }
                });
            });
        </script>

    </div>

    <div class="container">
        <div class='row'><hr /></div> 
        <div class="col-md-12 t-c">
            <p>
                <span class="red">*</span> All requests for bed types, early check in, late check out, smoking room etc, are subject to availability and at the discretion of hotel.
            </p>
        </div>
        <div class="container">
            <div class="col-md-12 center margintop20">
                <button type="submit" class="btn btn-filter btn-lg">Show My Confirmation</button>
            </div>
        </div>
        <!--footer-start here-->
        <div class="marginbottom20">&nbsp;</div>
    </div>
    
            <script src="~/Scripts/additional-methods.js"></script>
            <script>
                $(function () {
                   
                    $("#tblmainrooms :input[type='text']").each(function (index) {
                        // For debugging purposes...
                        localStorage.setItem($(this).attr('id'), $(this).attr('value'));
                    });


                    $("#tblmainrooms :input[type='email']").each(function (index) {
                        // For debugging purposes...
                        localStorage.setItem($(this).attr('id'), $(this).attr('value'));
                    });


                    $("#tblmainrooms").find("select").each(function (i) {

                        var drpid = $(this).attr('id');
                        localStorage.setItem(drpid, $('#' + drpid + ' option:selected').val());
                    });


                    $("input[type=radio][name='objBooking.bSelfTravelling']").change(function () {
                        var selectedDropdown = $(this).next('label:first').text();
                        if (selectedDropdown == 'No') {

                        }
                        else {
                            $("#tblmainrooms :input[type='text']").each(function (index) {
                                // For debugging purposes...
                                var id = $(this).attr('id');
                                $('#' + id).val(localStorage.getItem(id))

                            });
                            $("#tblmainrooms :input[type='email']").each(function (index) {
                                // For debugging purposes...
                                var id = $(this).attr('id');
                                $('#' + id).val(localStorage.getItem(id))

                            });
                            $("#tblmainrooms").find("select").each(function (i) {

                                var drpid = $(this).attr('id');
                                $('#' + drpid).val(localStorage.getItem(drpid)).change();
                            });
                        }
                    });
                });

                $('#frmBooking').validate({});
                $('#frmBooking_Mobile').validate({});
                
                
                if (!document.referrer) {
                    if (typeof history.pushState === 'function') {
                        history.pushState('b', null, null);
                        window.onpopstate = function () {
                            history.pushState('b', null, null);
                            return false;
                        }
                    }
                }
                else {

                    if (typeof history.pushState === 'function') {
                        history.pushState('b', null, null);
                        var previousUrl = document.referrer.toString().toLowerCase();
                        window.onpopstate = function () {
                            history.pushState('b', null, null);
                            return false;
                        }
                    }
                    else {
                        var ignoreHashChange = true;
                        window.onhashchange = function () {
                            if (!ignoreHashChange) {
                                ignoreHashChange = true;
                                window.location.hash = Math.random();
                                return false;
                            }
                            else {
                                ignoreHashChange = false;
                                return false;
                            }
                        };
                    }
                }

                $(function () {
                    $('.ddlCountryCodeNego').val('+91').change();
                    $('.ddlCountryCodeNego').select2();
                })

            </script>

            <script type="text/javascript">

        function isEmail(email) {
            var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            return regex.test(email);
        }

        function validatePhone(txtPhone) {
            var filter = /^[0-9-+]+$/;
            if (filter.test(txtPhone)) {
                if (txtPhone.length != 10) {
                    return false;
                }
                return true;
            }
            else {
                return false;
            }
        }

        var d = new Date();
        var dCheckIn = '';
        var dCheckOut = '';
        var newroomcount = '';
        var Data = [];

        $('.clean').click(function (e) {
            e.preventDefault();
            $($(this).parent().parent().parent()[0].cells).each(function () {
                //$(this).find("input").val('');
                $(this).find("input.gname").val('');
                $(this).find("input.gemail").val('');
                $(this).find("input.gphone").val('');
                $(this).find('select.ptypedefault').prop('selectedIndex', 0);
                $(this).find('select.ptype').prop('selectedIndex', 0).change();
            });
                });
                $('.cleanmobile').click(function (e) {
                    e.preventDefault();
                    var clearDivId = $(this).data('parentid');
                    $("#" + clearDivId +"> .clearthisdata").each(function () {
                        $(this).find("input.gname").val('');
                        $(this).find("input.gemail").val('');
                        $(this).find("input.gphone").val('');
                        $(this).find('select.ptypedefault').prop('selectedIndex', 0);
                        $(this).find('select.ptype').prop('selectedIndex', 0).change();
                    });
                });

       function AddGuest(obj) {

            var roomcount = $(obj).attr('roomcount');
            var rid = $(obj).attr('rid');
            var occupancy = $(obj).attr('occupancy');
            var rname = $(obj).attr('rname');
            var ptypevalue = $('#ptype' + roomcount + '').val();

            var selectCountryCodeType = $('#countryCodeType' + roomcount + ' :selected').val();
            var selectCountryCodeText = $('#countryCodeType' + roomcount + ' :selected').text();

            //if (ptypevalue == '') {
            //    toastr.error('Please select bed Preference');
            //    return false;
            //}
            newroomcount = roomcount + 1;
            var totalguest = $('#tblmainrooms tr.room' + roomcount + '').length;
            var guestcount = totalguest + 1;
            if (totalguest >= occupancy) {
                toastr.warning('More name cannot be added.')
                return false;
            }
            var myval = '';
            var tableRoomId = "tblRoom" + guestcount;
            var txtGNameId = "gnameo_" + roomcount + '' + guestcount;
            var txtGEmailId = "gemailo_" + roomcount + '' + guestcount;
            var txtGPhoneNo = "gphoneo_" + roomcount + '' + guestcount;
            myval += '<table  class="table  table-bordered table-hover" id="tblRoom' + guestcount + '"><tbody>';
            myval += '<tr class="newtr room' + roomcount + '">';
            myval += '<td style="width:15%;"><label>Room ' + roomcount + '</label><input type="hidden" value="' + rid + '" class="hdnBookingDetailId" /></td>';
            myval += '<td  style="width:15%;"><div class="form-group"><input id="' + txtGNameId + '" name="' + txtGNameId + '" type="text" class="form-control gname mwidth130" maxlength="50" placeholder="Name" / ></div></td>';
            myval += '<td  style="width:15%;"><div class="form-group"><input id="' + txtGEmailId + '"  name="' + txtGEmailId + '"  type="email" class="form-control gemailo mwidth130" maxlength="100" placeholder="Email" /></div></td>';
            myval += '<td  style="width:25%;"><div class="form-group">' +
                '<select style="float:left; width:50%" class="form-control ptypedefault" disabled></select>' +
                                      '<input id="' + txtGPhoneNo + '" name="' + txtGPhoneNo + '" type="text" style="width:50%; float:left" pattern="^[\-\+]?\d+$" class="form-control gphoneo mwidth130" maxlength="10" placeholder="Phone No." / ></div></td>';
            myval += '<td  style="width:10%;">';
            myval += '<div class="form-group">';
            myval += '<select disabled class="form-control ptypeo mwidth130"><option value="">Select</option>';
            if (ptypevalue == 'Twin Bed') {
                myval += '<option value="Twin Bed" selected>Twin Bed</option>';
            }
            else {
                myval += '<option value="Twin Bed">Twin Bed</option>';
            }
            if (ptypevalue == 'King Bed') {
                myval += '<option value="King Bed" selected>King Bed</option></select>';
            }
            else {
                myval += '<option value="King Bed">King Bed</option></select>';
            }
            myval += '</div>';

            myval += '</td>';
            myval += '<td>';
            //myval += '<div class="margintop-10"><a id="ancroom' + roomcount + '' + guestcount + '"  rid="' + rid + '" roomcount="' + roomcount + '" guestcount="' + guestcount + '" occupancy="' + occupancy + '" rname="' + rname + '"  onclick="AddGuestDetails(this)">Add name of the accompanying guest</a></div>';
            myval += '<div class="margintop10"><a class="delete1 showpointer" href="#">Delete</a></div>';
            myval += '</td>';
            myval += '</tr>';
            myval += '</tbody></table>';


            $('#divRoom' + roomcount + '').append("" + myval + "");
            var $row = $("#tblmainrooms tr.newtr.room" + roomcount + ":first");

            $($row).find('select.ddlCountryCodeNego  option').clone().appendTo($("#" + tableRoomId + " tr.room" + roomcount).find('.ptypedefault'));
            $("#" + tableRoomId + " tr.room" + roomcount).find('.ptypedefault').select2();
                $("#" + tableRoomId + " tr.room" + roomcount).find('.ptypedefault').val(selectCountryCodeType).change();

            // adding rules for inputs with class 'comment'
            $("#" + txtGEmailId).rules("add", {
                email: true
                    , messages: {
                        email: "Please enter valid Mail Id."
                    }
            });


            $("#" + txtGPhoneNo).rules("add", {
                phoneIndia: true,
                messages: {
                    phoneIndia: "Please enter valid Mobile Number."
                }
            });


            $("#" + txtGNameId)
                .rules("add",
                        {
                            required: true,
                            messages: {
                                required: "Please enter Guest Name.",
                            }
                        });

            $("#" + txtGNameId).bind("keypress",
                   function (e) {
                       var cursorPosition = $(this).getCursorPosition();
                       if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                           return false;
                       }
                   });


            $("#" + txtGPhoneNo).bind("keypress",
                      function (e) {
                          var cursorPosition = $(this).getCursorPosition();
                          if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                              return false;
                          }
                      });


            $("#" + txtGEmailId).bind("keypress",
                      function (e) {
                          var cursorPosition = $(this).getCursorPosition();
                          if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                              return false;
                          }
                      });


            $('.delete1').click(function (e) {

                e.preventDefault();
                $(this).find('.gmailo').rules("remove", "email");
                $(this).find('.gphoneo').rules("remove", "phoneIndia");
                $(this).find('.gname').rules("remove", "required");
                $(this).closest('table').remove();
            });
        }

        $('#frmBooking').submit(function (e) {

            //debugger;

            if (!$(this).valid()) {
                e.preventDefault();
                return false;
            }

            var gstNumber = $('#GstnNumber').val();

            var regex = /^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$/i;

            if (gstNumber != '') {

                if (!regex.test(gstNumber)) {
                    e.preventDefault();
                    toastr.error('Please enter a valid GST Number');
                    return false;
                }
            }

            $("#ddlGstnEntityType option").each(function (index) {
                $(this).prop('disabled', false);
            });

            var valid = true;
            $("#tblmainrooms tr.newtr").each(function () {
                if ($(this).find('select').hasClass('ddlCountryCodeNego')) {
                    var BookingDetailId = $(this).find("input:hidden.hdnBookingDetailId").val();
                    var gname = $(this).find("input:text.gname").val();
                    var gemail = $(this).find("input.gemail").val();
                    var gphone = $(this).find("input:text.gphone").val();
                    var ptype = $(this).find('select.ptype option:selected').val();
                    var countryPhoneCode = $(this).find('select.ddlCountryCodeNego option:selected').val();
                    Data.push({
                        BookingDetailId: BookingDetailId,
                        gname: gname,
                        gemail: gemail,
                        gphone: gphone,
                        ptype: ptype,
                        countryPhoneCode: countryPhoneCode
                    });
                }
                else {
                    var BookingDetailId = $(this).find("input:hidden.hdnBookingDetailId").val();
                    var gname = $(this).find("input:text.gname").val();
                    var gemailo = $(this).find("input.gemailo").val();
                    var gphoneo = $(this).find("input:text.gphoneo").val();
                    var ptypeo = $(this).find('select.ptypeo option:selected').val();
                    var countryPhoneCodeO = $(this).find('select.ptypedefault option:selected').val();
                    Data.push({
                        BookingDetailId: BookingDetailId,
                        gname: gname,
                        gemail: gemailo,
                        gphone: gphoneo,
                        ptype: ptypeo,
                        countryPhoneCode: countryPhoneCodeO
                    });
                }


                $("#hdnJson").val(JSON.stringify(Data));
                $('.overlay').show();
                return valid;

            });
                });

        $('#frmBooking_Mobile').submit(function (e) {

                    //debugger;

                    if (!$(this).valid()) {
                        e.preventDefault();
                        return false;
                    }

                    var gstNumber = $('#GstnNumber').val();

                    var regex = /^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$/i;

                    if (gstNumber != '') {

                        if (!regex.test(gstNumber)) {
                            e.preventDefault();
                            toastr.error('Please enter a valid GST Number');
                            return false;
                        }
                    }

                    $("#ddlGstnEntityType option").each(function (index) {
                        $(this).prop('disabled', false);
                    });

                    var valid = true;
                    $("#tblmainrooms_mobile .newtr").each(function () {
                        //debugger;
                        if ($(this).find('select').hasClass('ddlCountryCodeNego')) {
                            var BookingDetailId = $(this).find("input:hidden.hdnBookingDetailId").val();
                            var gname = $(this).find("input:text.gname").val();
                            var gemail = $(this).find("input.gemail").val();
                            var gphone = $(this).find("input:text.gphone").val();
                            var ptype = $(this).find('select.ptype option:selected').val();
                            var countryPhoneCode = $(this).find('select.ddlCountryCodeNego option:selected').val();
                            Data.push({
                                BookingDetailId: BookingDetailId,
                                gname: gname,
                                gemail: gemail,
                                gphone: gphone,
                                ptype: ptype,
                                countryPhoneCode: countryPhoneCode
                            });
                        }
                        else {
                            var BookingDetailId = $(this).find("input:hidden.hdnBookingDetailId").val();
                            var gname = $(this).find("input:text.gname").val();
                            var gemailo = $(this).find("input.gemailo").val();
                            var gphoneo = $(this).find("input:text.gphoneo").val();
                            var ptypeo = $(this).find('select.ptypeo option:selected').val();
                            var countryPhoneCodeO = $(this).find('select.ptypedefault option:selected').val();
                            Data.push({
                                BookingDetailId: BookingDetailId,
                                gname: gname,
                                gemail: gemailo,
                                gphone: gphoneo,
                                ptype: ptypeo,
                                countryPhoneCode: countryPhoneCodeO
                            });
                        }


                        $("#hdnJson").val(JSON.stringify(Data));
                        $('.overlay').show();
                        return valid;

                    });
                });

        var pickup = '@Model.objBooking.spref_pickup';
        if (pickup == "Yes")
            $('#tblpickup').show();


        $('#divpickup input[type="radio"]').click(function () {
            if (this.value == "No" || this.value == "NA")
                $('#tblpickup').hide();
            else
                $('#tblpickup').show();
        });

        $('#checkur input[type="radio"]').click(function () {
            if (this.value == 'False') {
                $("#tblmainrooms tr.newtr").each(function () {
                    $(this).find("input.gname").val('');
                    $(this).find("input.gemail").val('');
                    $(this).find("input.gphone").val('');
                    $(this).find('select.ptype').prop('selectedIndex', 0).change();;
                });
            }
        });


        $('.gphone').keypress(function (e) {

            var cursorPosition = $(this).getCursorPosition();

            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 48) {

                return false;
            }
        });

        $(document).on('keypress', '.gphoneo', function (e) {

            var cursorPosition = $(this).getCursorPosition();

            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 48) {

                return false;
            }
                });



                $(function () {

                    $("input[name^='gphone_']").each(function () {
                        $(this).keypress(function (e) {

                            var cursorPosition = $(this).getCursorPosition();

                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {

                                return false;
                            }
                        });
                    });
                });


                $(function () {

                    $("input[name^='gemail_']").each(function () {
                        $(this).keypress(function (e) {

                            var cursorPosition = $(this).getCursorPosition();

                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {

                                return false;
                            }
                        });
                    });
                });


                $(function () {

                    $("input[name^='gname_']").each(function () {
                        $(this).keypress(function (e) {
                            var cursorPosition = $(this).getCursorPosition();

                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {

                                return false;
                            }
                        });
                    });

                    $("input[name^='gemail_']").rules("add", {
                        required: true,
                        email: true
                        , messages: {
                            email: "Please enter valid Mail Id.",
                            required:"Please enter Mail Id."
                        }
                    });
                    $("input[name^='gphone_']").rules("add", {
                        required: true,
                        phoneIndia: true,
                        messages: {
                            required: "Please enter Phone Number.",phoneIndia: "Please enter valid Mobile Number."
                        }
                    });
                    $("input[name^='gname_']")
                        .rules("add",
                        {
                            required: true,
                            messages: {
                                required: "Please enter Guest Name.",
                            }
                        });

                });
    </script>

    <script>

                function DeleteGuest_Mobile(button) {

                    var divId = $(button).data('divid');

                    $('#' + divId).remove();
                }

                function AddGuest_Mobile(objRoom)
                {
                    debugger;
                    var roomcount = $(objRoom).attr('roomcount');
                    var rid = $(objRoom).attr('rid');
                    var occupancy = $(objRoom).attr('occupancy');
                    var rname = $(objRoom).attr('rname');   
                    var ptypevalue = $('#ptype' + roomcount + '').val();

                    var selectCountryCodeType = $('#countryCodeType' + roomcount + ' :selected').val();
                    var selectCountryCodeText = $('#countryCodeType' + roomcount + ' :selected').text();

                    newroomcount = roomcount + 1;
                    var container = $(objRoom).attr('containerid');
                    var totalguest = $('#tblmainrooms_mobile #' + container+' .room').length;
                    var guestcount = totalguest + 1;
                    if (totalguest >= occupancy) {
                        toastr.warning('More name cannot be added.')
                        return false;
                    }
                    var myval = '';
                    var tableRoomId = "tblmainrooms_mobile" + guestcount;
                    var txtGNameId = "gnameo_" + roomcount + '' + guestcount;
                    var txtGEmailId = "gemailo_" + roomcount + '' + guestcount;
                    var txtGPhoneNo = "gphoneo_" + roomcount + '' + guestcount;
                   

                    var template = `<div class="newtr room col-xs-12" id="appended-room-${roomcount}">
                            <div class='col-xs-12'><hr/></div> 
                            <div class="col-xs-4" style="padding-top:15px">
                                Room
                            </div>
                           
                            <div class="col-xs-8 form-group" style="padding-top:15px">
                                <label>Room ${roomcount} ${rname}</label>
                                <input class="hdnBookingDetailId" type="hidden" value="${rid}">
                            </div>
                            <div class="col-xs-4" style="padding-top:15px">
                                Guest Name
                            </div>
                            <div class="col-xs-8 form-group">
                            <input id="${txtGNameId}" name="${txtGNameId}" type="text" class="form-control gname" placeholder="Name" / >
                            </div>
                            <div class="col-xs-4">
                                Mail Id
                            </div>
                            <div class="col-xs-8 form-group">
                                <input type="email" class="form-control gemailo" id="${txtGEmailId}" name="${txtGEmailId}" value="" maxlength="100" placeholder="Email">
                            </div>
                            <div class="col-xs-4">
                                Mobile
                            </div>
                            <div class="col-xs-8 form-group">
                            <select class="form-control ptypedefault mselect2 select2-hidden-accessible" maxlength="20" style="float:left" tabindex="-1" aria-hidden="true" disabled>
                            <option value="+93">Afghanistan +93</option>
                            <option value="+54">Argentina +54</option>
                            <option value="+61">Australia +61</option>
                            <option value="+43">Austria +43</option>
                            <option value="+973">Bahrain +973</option>
                            <option value="+880">Bangladesh +880</option>
                            <option value="+32">Belgium +32</option>
                            <option value="+975">Bhutan +975</option>
                            <option value="+55">Brazil +55</option>
                            <option value="+1">Canada +1</option>
                            <option value="+86">China +86</option>
                            <option value="+420">Czech Republic +420</option>
                            <option value="+45">Denmark +45</option>
                            <option value="+358">Finland +358</option>
                            <option value="+33">France +33</option>
                            <option value="+49">Germany +49</option>
                            <option value="+30">Greece +30</option>
                            <option value="+852">Hong Kong +852</option>
                            <option value="+36">Hungary +36</option>
                            <option  value="+91">India +91</option>
                            <option value="+98">Iran (Islamic Republic of) +98</option>
                            <option value="+353">Ireland +353</option>
                            <option value="+972">Israel +972</option>
                            <option value="+39">Italy +39</option>
                            <option value="+81">Japan +81</option>
                            <option value="+850">Korea, Democratic People's Republic of +850</option>
                            <option value="+965">Kuwait +965</option>
                            <option value="+370">Lithuania +370</option>
                            <option value="+352">Luxembourg +352</option>
                            <option value="+853">Macao +853</option>
                            <option value="+60">Malaysia +60</option>
                            <option value="+960">Maldives +960</option>
                            <option value="+230">Mauritius +230</option>
                            <option value="+52">Mexico +52</option>
                            <option value="+382">Montenegro +382</option>
                            <option value="+95">Myanmar +95</option>
                            <option value="+977">Nepal +977</option>
                            <option value="+31">Netherlands +31</option>
                            <option value="+64">New Zealand +64</option>
                            <option value="+47">Norway +47</option>
                            <option value="+968">Oman +968</option>
                            <option value="+92">Pakistan +92</option>
                            <option value="+970">Palestine +970</option>
                            <option value="+507">Panama +507</option>
                            <option value="+675">Papua New Guinea +675</option>
                            <option value="+51">Peru +51</option>
                            <option value="+63">Philippines +63</option>
                            <option value="+48">Poland +48</option>
                            <option value="+351">Portugal +351</option>
                            <option value="+974">Qatar +974</option>
                            <option value="+7">Russian Federation +7</option>
                            <option value="+65">Singapore +65</option>
                            <option value="+27">South Africa +27</option>
                            <option value="+82">South Korea +82</option>
                            <option value="+34">Spain +34</option>
                            <option value="+94">Sri Lanka +94</option>
                            <option value="+46">Sweden +46</option>
                            <option value="+41">Switzerland +41</option>
                            <option value="+66">Thailand +66</option>
                            <option value="+90">Turkey +90</option>
                            <option value="+971">United Arab Emirates +971</option>
                            <option value="+44">United Kingdom +44</option>
                            <option value="+1">United States +1</option>
                            <option value="+379">Vatican City State (Holy See) +379</option>
                            <option value="+58">Venezuela +58</option>
                            <option value="+84">Vietnam +84</option>
                            <option value="+263">Zimbabwe +263</option>
                            </select>
                                <input type="text" id="${txtGPhoneNo}" name="${txtGPhoneNo}" style="float:left" pattern=" ^[\-\+]?\d+$" class="form-control gphoneo" value="" maxlength="10" placeholder="Phone No.">
                            </div>
                            <div class="col-xs-4">
                                Bed Preference
                            </div>
                            <div class="col-xs-8 form-group">
                                <select id="ptype1" disabled class="form-control ptypeo mwidth130">
                                    <option value="">Select</option>
                                    <option value="Twin Bed">Twin Bed</option>
                                    <option value="King Bed">King Bed</option>
                                </select>
                            </div>
                            <div class="col-xs-4">

                            </div>
                            <div id="tddefault1" class="col-xs-8 form-group">                                
                                <div class="col-xs-4 margintop10">
                                 <a class="showpointer clean text-danger" href="javascript:void(0)" data-divid="appended-room-${roomcount}" onclick="DeleteGuest_Mobile(this)">Delete</a>
                             </div>
                            </div>
                        </div>`;

                    $('#' + container).append(template);
                    // adding rules for inputs with class 'comment'
                    $("#" + txtGEmailId).rules("add", {
                        email: true
                        , messages: {
                            email: "Please enter valid Mail Id."
                        }
                    });


                    $("#" + txtGPhoneNo).rules("add", {
                        phoneIndia: true,
                        messages: {
                            phoneIndia: "Please enter valid Mobile Number."
                        }
                    });


                    $("#" + txtGNameId)
                        .rules("add",
                        {
                            required: true,
                            messages: {
                                required: "Please enter Guest Name.",
                            }
                        });

                    $("#" + txtGNameId).bind("keypress",
                        function (e) {
                            var cursorPosition = $(this).getCursorPosition();
                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                                return false;
                            }
                        });


                    $("#" + txtGPhoneNo).bind("keypress",
                        function (e) {
                            var cursorPosition = $(this).getCursorPosition();
                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                                return false;
                            }
                        });


                    $("#" + txtGEmailId).bind("keypress",
                        function (e) {
                            var cursorPosition = $(this).getCursorPosition();
                            if ((this.value.length == 0 || cursorPosition == 0) && e.which == 32) {
                                return false;
                            }
                        });

                    $("#" + container + "> #appended-room-" + roomcount).find(".ptypedefault").select2();
                    $("#" + container + "> #appended-room-" + roomcount).find(".ptypedefault").val(selectCountryCodeType).change();
                    $("#" + container + "> #appended-room-" + roomcount).find(".ptypeo").val(ptypevalue).change();
                }

    </script>

            }






