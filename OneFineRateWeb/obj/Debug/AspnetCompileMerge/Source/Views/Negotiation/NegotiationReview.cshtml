@model   OneFineRateBLL.Entities.PropDetailsM
@using OneFineRateAppUtil
@{
    ViewBag.Title = "NegotiationReview";
    Layout = "~/Views/Shared/_Layout.cshtml";
    decimal HotelTax = 0;
}

<div class="container-wrapper">
    @{
        string sMainImgUrl = Model.lstetblPhotoGallery != null && Model.lstetblPhotoGallery.Count > 0 ? Model.lstetblPhotoGallery[0].sMainImgUrl : "";
    }
    @if (Model.lstetblPhotoGallery != null && Model.lstetblPhotoGallery.Count > 0)
    {
        @Html.HiddenFor(m => Model.lstetblPhotoGallery[0].sMainImgUrl)
    }

    @Html.HiddenFor(m => Model.sPropertyName)
    @Html.HiddenFor(m => Model.iPropId)
    @Html.HiddenFor(m => Model.sPropertyAddress)
    @Html.HiddenFor(m => Model.iStarCategory)
    @for (int hdni = 0; hdni < Model.lstetblHotelFacilities.Count; hdni++)
    {
        @Html.HiddenFor(m => Model.lstetblHotelFacilities[hdni].sImgUrl)
    }

    @if (Model.TaxCharges != null)
    {
        @Html.HiddenFor(m => Model.TaxCharges.cGstValueType)
        @Html.HiddenFor(m => Model.TaxCharges.dGstValue)
        @Html.HiddenFor(m => Model.TaxCharges.dOFRServiceCharge)
        @Html.HiddenFor(m => Model.TaxCharges.TaxOnServiceCharge)
        @Html.HiddenFor(m => Model.TaxCharges.TotalServiceCharge)
    }



    @Html.HiddenFor(m => Model.sVerificationCode, new { Id = "hdnVC", name = "hdnVC" })
    @Html.HiddenFor(m => Model.sActionType, new { id = "hdnActionType" })
    @Html.HiddenFor(m => m.dSummaryGrandTotal, new { id = "hdnNegoGrandTAmt" })
    <input type="hidden" id="hdnPromoValue" value="0" />
    <input type="hidden" id="hdnPromoCodeApplied" value="false" />
    <input type="hidden" id="hdnPromoCodeType" value="" />
    <input type="hidden" id="hdnPromoCode" value="" />
    <input type="hidden" id="hdnAmenityName" value="" />
    <input type="hidden" id="hdnPromoValueDesc" value="" />
    <input type="hidden" id="hdnNewTaxes" value="0" />
    <input type="hidden" id="hdnChkAgree" value="false" />

    <div class="thirdsection margintop10">

        <div class="container" style="padding-left:0px !important; padding-right:0px !important;">
            <div class="col-md-8 paddingtop-bottom15">
                <div class="row">
                    <div class="col-md-4 col-xs-12">

                        <img class="imgheight114" src='@System.Configuration.ConfigurationManager.AppSettings["BlobUrl"].ToString()@sMainImgUrl' onerror="this.src='@Url.Content("~/images/noimage.jpg")'" id="imagePreview">

                    </div>
                    <div class="col-md-5 col-xs-12">
                        <h3 class="mar-padd0">@Model.sPropertyName</h3>
                        <div class="margintop-10"> <img src="~/images/inner-star@(Model.iStarCategory).png"></div>
                        <address>
                            @Model.sPropertyAddress
                            <div class="row">
                                <div class="col-md-5 col-xs-12 reviwfacilityicon">
                                    <ul>
                                        @for (int i = 0; i < Model.lstetblHotelFacilities.Count; i++)
                                        {
                                            @Html.HiddenFor(m => Model.lstetblHotelFacilities[i].sImgUrl)
                                            <li><img src='@System.Configuration.ConfigurationManager.AppSettings["BlobUrl"].ToString()@Model.lstetblHotelFacilities[i].sImgUrl' id="iconPreview" title="@Model.lstetblHotelFacilities[i].sHotelFacilites" style="height: 20px; width: 20px"></li>
                                        }
                                    </ul>
                                </div>
                                <div class="col-md-7 col-xs-12 reviwfacilityicon">
                                    @if (!string.IsNullOrEmpty(Model.objTripAdvisonReviews.sRatingImageURL))
                                    {
                                        <img src="@Model.objTripAdvisonReviews.sRatingImageURL" /><br />
                                    }
                                    @if (!string.IsNullOrEmpty(Model.objTripAdvisonReviews.sRankingString))
                                    {
                                        <em class="green">
                                            @Model.objTripAdvisonReviews.sRankingString
                                        </em>
                                    }
                                </div>
                            </div>
                        </address>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container margintop30">

        <div class="tablebluebg">Stay Summary from @Html.Raw(Model.sCheckInDate_Display) to @Html.Raw(Model.sCheckOutDate_Display) - @Model.iTotalDays Night(s) </div>
        <div class=" table-responsive">
            <table class="table lightgrybg table-bordered table-hover">
                <tbody>
                <thead>
                    <tr>
                        <th>ROOM TYPE</th>
                        <th>ADULTS</th>
                        <th>CHILDREN</th>
                        <th>RATE/ NIGHT</th>
                        <th>EXTRA BED/ NIGHT</th>
                        <th class="width100">NIGHT(S)</th>
                        <th>TOTAL PRICE</th>
                    </tr>
                </thead>

                @{int CountIndex = 0;}

                @for (int i = 0; i < Model.lstetblRooms.Count; i++)
                {
                    @Html.HiddenFor(m => Model.iPropId)
                    @Html.HiddenFor(m => Model.lstetblRooms[i].iRoomId)
                    @Html.HiddenFor(m => Model.lstetblRooms[i].sRoomName)

                    for (int j = 0; j < Model.lstetblRooms[i].lstRatePlan.Count; j++)
                    {
                        @Html.HiddenFor(m => Model.lstetblRooms[i].lstRatePlan[j].RPID)
                        @Html.HiddenFor(m => Model.lstetblRooms[i].lstRatePlan[j].iRoomId)

                        for (int lstOcc = 0; lstOcc < Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy.Count; lstOcc++)
                        {
                            if (Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iNoOfRooms != 0)
                            {
                                for (int k = 0; k < Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iNoOfRooms; k++)
                                {
                                    <tr>
                                        @{
                                            var ExtraBedNumber = @Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].ExtraBeds;
                                            var ExtraBedCharges = @Model.lstetblRooms[i].ExtraBedCharges;
                                            var ExtraCharges = ExtraBedNumber * ExtraBedCharges;
                                            var Price = @Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].dPrice;
                                            var Days = Convert.ToInt32(Model.iTotalDays);
                                            var totalrooms = @Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iNoOfRooms;
                                            HotelTax += Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].dTaxesForHotel;
                                            var TotalPrice = (Price + ExtraCharges) * Days;

                                            ExtraBedCharges = ExtraCharges;// *(Days);

                                        }

                                        <td><a href="javascript:void(0)" onclick="OpenPopUp('@Model.iPropId','@Model.lstetblRooms[i].iRoomId')">@Model.lstetblRooms[i].sRoomName</a></td>
                                        <td>@Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iAdults</td>
                                        <td>@Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iChildrens</td>
                                        <td>
                                            @{
                                                string RatePrice = OneFineRateAppUtil.clsUtils.ConvertNumberToCommaSeprated(Price);
                                            }
                                            @RatePrice
                                            &nbsp;
                                            @{
                                                var html = "";
                                                List<string> lst = new List<string>();
                                            }
                                            @for (int lstCancellation = 0; lstCancellation < Model.lstetblRooms[i].lstRatePlan[j].lstCancellationPolcy.Count; lstCancellation++)
                                            {
                                                lst.Add(Model.lstetblRooms[i].lstRatePlan[j].lstCancellationPolcy[lstCancellation].CancellationMsg);
                                            }
                                        </td>
                                        <td>

                                            @{
                                                string EXPrice = OneFineRateAppUtil.clsUtils.ConvertNumberToCommaSeprated(ExtraBedCharges);
                                            }
                                            @EXPrice
                                        </td>
                                        <td>@Model.iTotalDays</td>
                                        <td>
                                            @Model.Symbol
                                            @{
                                                string TPrice = OneFineRateAppUtil.clsUtils.ConvertNumberToCommaSeprated(TotalPrice);
                                            }
                                            @TPrice
                                        </td>
                                    </tr>

                                    <tr class="noborder">

                                        <td><span class="pull-left">I am Important-Read Me : </span></td>
                                        @*<td><span class="pull-left">Important Information : </span></td>*@
                                        <td colspan="6">
                                            <a href="javascript:void(0);" title="Policies" data-id="divRinclusion@(CountIndex)" rel="popover">
                                                <img src="@Url.Content("~/images/info.png")">
                                            </a>
                                        </td>

                                        @{
                                            var id = string.Format(@"{0}{1}", "divRinclusion", CountIndex);
                                        }

                                        <div style="display:none" id="@id">

                                            <h4 class="modal-title">Rate Inclusions</h4>

                                            <p>
                                                @Html.Raw(Model.lstetblRooms[i].lstRatePlan[j].RateInclusion.TrimEnd('\r', '\n').Replace(Environment.NewLine, "<br/>").Replace("\"", "\'").Replace("|", "<br/>"))
                                            </p>
                                            @if (Model.sActionType != "N")
                                            {
                                                <h4 class="modal-title">Cancellation:</h4>

                                                <p>
                                                    @{
                                                        System.Text.StringBuilder CancelStringBuilder = new System.Text.StringBuilder();
                                                        var lstnew = lst.Distinct().ToList();
                                                        if (lstnew.Count > 0)
                                                        {

                                                            foreach (var item in lstnew)
                                                            {
                                                                CancelStringBuilder.Append(item.Replace(".", ","));
                                                                CancelStringBuilder.Append("| ");
                                                            }
                                                        }

                                                        if (CancelStringBuilder.ToString().Trim().ToLower().Contains("refundable"))
                                                        {
                                                            <span style="color:red;">@Html.Raw(CancelStringBuilder.ToString().Replace(",", ".").Replace("|", ".<br/>"))</span>
                                                        }
                                                        else
                                                        {
                                                            @Html.Raw(CancelStringBuilder.ToString().Replace(",", ".").Replace("|", ".<br/>"))
                                                        }

                                                    }
                                                </p>
                                                        }
                                            <h4 class="modal-title">Rate Information</h4>
                                            <p>
                                                <div>
                                                    <div style="float:left;width:300px">
                                                        <div style="float:left;width:150px">
                                                            Stay Date
                                                        </div>
                                                        <div style="float:left;width:150px">
                                                            Price
                                                        </div>
                                                    </div>
                                                    @for (int l1 = 0; l1 < Model.lstTaxesDateWise_OfferReview.Count; l1++)
                                                    {
                                                        /**/
                                                        if (Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iRoomId == Model.lstTaxesDateWise_OfferReview[l1].RoomID
                                                            && Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].blsPromo == Model.lstTaxesDateWise_OfferReview[l1].bIsPromo
                                                            && Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].RPID == Model.lstTaxesDateWise_OfferReview[l1].RPID
                                                            && Model.lstetblRooms[i].lstRatePlan[j].lstetblOccupancy[lstOcc].iOccupancy == Model.lstTaxesDateWise_OfferReview[l1].iOccupancy
                                                            )
                                                        {
                                                            <div style="float:left; width:300px">
                                                                <div style="float:left;width:150px">
                                                                    @*@Model.dtCheckIn.AddDays(l1).ToString("dd MMM,yyyy")*@
                                                                    @Model.lstTaxesDateWise_OfferReview[l1].dtDate.ToString("dd MMM,yyyy")
                                                                </div>
                                                                <div style="float:left;width:150px">
                                                                    @Model.Symbol  @(clsUtils.ConvertNumberToCommaSeprated(Convert.ToDecimal(Model.lstTaxesDateWise_OfferReview[l1].dBasePrice)))
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>

                                            </p>

                                        </div>

                                    </tr>

                                                                            CountIndex++;
                                                                        }
                                                                    }
                                                                }
                                                            }

                                                        }

                <tr class="noborder">

                    <td colspan="6"><span class="pull-right">Total : </span></td>
                    <td> @Model.Symbol @Model.sSummaryTotal</td>

                </tr>
                <tr class="noborder">

                    <td colspan="6">
                        <span class="pull-right">
                            <a title="Taxes and Service Fees" href="javascript:void(0);" data-placement="left" data-id="divTaxes" rel="popover">
                                Taxes and  service Fees:
                            </a>
                        </span>
                    </td>
                    <td> @Model.Symbol @Model.sSummaryTaxes_display</td>

                </tr>
                @if (Model.sActionType != "N")
                {
                    using (Ajax.BeginForm("ValidatePromoCode", "Negotiation", new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "targetid", HttpMethod = "POST", OnSuccess = "GetResult" }))
                    {
                        <tr class="noborder">
                            @Html.HiddenFor(u => u.dtCheckIn)
                            @Html.HiddenFor(u => u.dtCheckOut)
                            @Html.HiddenFor(u => u.iPropId)
                            @Html.HiddenFor(u => u.dSummaryTotal)
                            @Html.HiddenFor(u => u.dSummaryTaxes)
                            @Html.HiddenFor(u => u.dSummaryExtraBedCharges)
                            <td colspan="6"> <span class="pull-right">Do you have promo code: </span></td>
                            <td>
                                @Html.TextBoxFor(m => m.sPromoCode, new { @class = "form-control width50 mwidth130", id = "txtPromoCode", maxlength = "100", required = "true" })
                                <button type="submit" id="btnApplyPromo" class="btn btn-default">Apply</button>
                                <br /> <span id="sppromo" style="color:#3f9841;"></span>
                            </td>

                        </tr>
                        <div id="targetid"></div>

                    }
                }
                <tr>

                    <td class="noborder" colspan="6"><strong class="pull-right">Grand Total: </strong></td>
                    <td class="noborder"><strong class="pull-left" id="spTotalAmt">@Model.Symbol @Model.sSummaryGrandTotal_display </strong></td>

                </tr>
                </tbody>

            </table>
        </div>

    </div>
    <div id="divTaxes" style="display:none">
        @*<div class="modal-dialog">*@
        <!-- Modal content-->
        @*<div class="modal-content">
            <div class="modal-header">*@
        @*   <button type="button" class="close" data-dismiss="modal">&times;</button>*@
        @*<h4 class="modal-title">Taxes and Service Fees</h4>*@
        @*</div>*@
        @*<div class="modal-body">*@
        <p>
            @*<div class="row">
                <div class="col-md-9">*@
            <table class="table">
                <tbody>
                    <tr>
                        <td>Hotel Taxes</td>
                        <td>:</td>
                        <td>@Model.Symbol @(clsUtils.ConvertNumberToCommaSeprated(Math.Round(HotelTax)))</td>
                    </tr>

                    @if (Model.TaxCharges.dOFRServiceCharge > 0)
                    {
                        <tr>
                            <td>OFR Service charge</td>
                            <td>:</td>
                            <td>@Model.Symbol @(clsUtils.ConvertNumberToCommaSeprated(Math.Round(Model.TaxCharges.dOFRServiceCharge)))</td>
                        </tr>

                        if (Model.TaxCharges.cGstValueType == "p")
                        {
                            <tr>
                                <td>GST on OFR Service charge (@Model.TaxCharges.dGstValue%)</td>
                                <td>:</td>
                                <td>@Model.Symbol @(clsUtils.ConvertNumberToCommaSeprated(Math.Round(Model.TaxCharges.TaxOnServiceCharge)))</td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>GST on OFR Service charge</td>
                                <td>:</td>
                                <td>@Model.Symbol @(clsUtils.ConvertNumberToCommaSeprated(Math.Round(Model.TaxCharges.TaxOnServiceCharge)))</td>
                            </tr>
                        }
                    }


                </tbody>

            </table>
            @*</div>
                </div>*@
        </p>

        @*<p>
                In connection with facilitating your hotel transaction when onefinerate charges your card, the charge to your payment method will include a charge for Taxes and Service Fees. This charge includes an estimated or anticipated amount to recover the amount we pay to the hotel in connection with your reservation for taxes owed by the hotel including, without limitation, sales and value added tax and/or other similar taxes. The amount paid to the hotel in connection with your reservation for taxes may vary from the amount we estimate and include, in the charge to you. The balance of the charge for Taxes and Service Fees is a fee we retain as part of the compensation for our services and to cover the costs of your reservation, including, for example, customer service costs. The charge for Taxes and Fees varies based on a number of factors including, without limitation, the amount we pay the hotel and the location of the hotel where you will be staying, and may include profit that we retain.
            </p>
            <p> Taxability and the appropriate tax rate and the type of applicable taxes vary greatly by location.<br />For transactions involving hotels located within certain jurisdictions, the amount charged to you for Taxes and Service Fees includes a payment of tax that we are required to collect and remit to the jurisdiction for tax owed on amounts we retain as compensation for our services.</p><p>
                Depending on the property you stay at you may also be charged for certain optional incidental fees, for example, parking charges, minibar charges, phone calls, room service and movie rentals, etc. These charges, if applicable, will be payable by you to the hotel directly in local currency at checkout. When you check in, a credit card or, in the hotel's discretion, a debit card will be required to secure these charges and fees that you may incur during your stay. Please contact the hotel directly as to whether and which charges or service fees apply.
            </p>*@
        @*</div>*@

        @* </div>
            </div> *@
    </div>

    <script>
        var popover = $("[rel='popover']").popover({
            trigger: 'hover',

            html: 'true'
        }).on('show.bs.popover', function () {
            popover.attr('data-content', $('#' + $(this).data('id')).html());
        }).on('click', function () {
            return false;
        });

    </script>




    @if (Model.sActionType == "N")
    {
        <div class="container ">
            <div class="row">
                <div class="col-md-12">
                    <h3 class="whathpn">What Happens Next ?</h3>
                    <ul class="whathppn">
                        <li>
                            You preview your offer details and give us your negotiation  and you need to deposit a signing amount of INR 500.
                        </li>
                        <li>
                            OneFineRate will negotiate with the hotel for you and get back to you in the next 3 business hours [Business hours- IST 0900 to 1800 hrs/GMT+05:30 hrs].

                        </li>
                    </ul>
                </div>
            </div>
            <div class="tablebluebg">Your Offer</div>
            <div class=" table-responsive table-bordered padding15 lightgrybg">
                <div class="row">
                    <div class="col-md-12">Begin negotiation and place your offer:</div>
                    <div class="col-md-2 col-xs-6">Must be higher than  </div>
                    <div class="col-md-2 col-xs-6 "><span class=" alert border1 bg-warning"><strong>@Model.Symbol @Model.sNegotiationAmtMax</strong></span></div>
                    <div class="col-md-2 col-xs-6">(Excluding Taxes)</div>
                </div>
                <div class="row">
                    <div class="col-md-2 col-xs-4 margintop10">
                        Your Offer  :
                    </div>
                    <div class="col-md-2 col-xs-8 margintop10">
                        <input type="text" id="txtNegotiaionAmount" value="@ViewBag.NegotiationAmount" maxlength="10" class="form-control ">
                        <button class="btn btn-info margintop10" id="anCalculate" style="cursor:pointer;">Calculate Grand Total</button>
                    </div>
                    <div class="col-md-8 col-xs-12  margintop10">
                        <span class="redtext paddingleft0 ">* This is the total amount you wish to pay for the above booking (Excluding Taxes)</span>
                    </div>
                </div>
                @*<div class="row ">
                        <div class="col-md-3 margintop10">Taxes and other service charges :</div>
                        <div class="col-md-9 margintop10"> <strong>@Model.Symbol @Model.dSummaryTaxes</strong></div>
                    </div>*@

                <div class="row">

                    <div class="col-md-2 col-xs-4 ">Grand Total : </div>
                    <div class="col-md-10 col-xs-8">
                        <strong id="spgrantotal"></strong>
                        <span style="display:none" id="spgrantotal_span"> [inclusive of taxes <span class="red">*</span>]</span>
                    </div>
                    <div class="clearfix"></div>
                    @*<div class="col-md-12" style="color:red"></div>*@
                    <div class="col-md-12 col-xs-12">
                        <div class="redtext paddingleft0 lineheight21 txtjustify">
                            *Taxes and charges are calculated on published rates<br />
                            * For us to negotiate on your behalf, you need to deposit a signing amount of INR 500. This will be adjusted against the reservation, if your offer is accepted.<br>
                            <ul class="bullets1">
                                <li>
                                    Please allow us approximately 3 hours [Business hours- IST 0900 to 1800 hrs/GMT+05:30 hrs] to get you the rate of your choice.<br>
                                </li>
                                <li>
                                    If your negotiation is not accepted, INR 500 will be refunded within 24 hours if paid through PAYu wallet or 3-4 business days if paid through any other payment method as per banking norms.<br />
                                </li>
                                <li>
                                    If your offer is accepted, please pay the balance reservation amount within 3hours of receiving the confirmation.<br>
                                </li>
                                <li>
                                    In case, your negotiation is successful and the balance reservation amount is not paid, you will forfeit the advance of INR 500.<br>
                                </li>
                                <li>
                                    <strong>
                                        Rooms purchased through the OFR negotiation option cannot be cancelled, modified, transferred or refunded.
                                    </strong>
                                </li>
                            </ul>
                        </div>

                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        PLEASE NOTE :
                        <span style="color:red">
                            Any requests for bed types, early check in, late check out, smoking room etc, are subject to availability and at the discretion of hotel. These cannot be guaranteed by OFR
                        </span>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <style>
            li {
                list-style-type: disc !important;
            }
        </style>

        <div class="container margintop30">
            <div class="tablebluebg">Important Information</div>
            <div class=" table-responsive table-bordered padding10 lightgrybg">
                <ul>
                    <li>
                        Requests for bed types (King, Queen, 2 Doubles, etc.) including preferences like early check in, late check out, smoking room etc. are strictly at the discretion of the hotel and subject to availability and are not to be understood as guaranteed.
                    </li>
                    <li>
                        Reservation is guaranteed for arrival on the confirmed date of check-in only. If you do not check-in on the first day of your reservation, the remainder of the stay will be deemed canceled too. No refund will be applicable.
                    </li>
                    <li>
                        This reservation and the rate is governed by the Hotel’s cancellation policy.
                    </li>
                    <li>
                        The reservation holder must present a valid Credit Card/ Debit Card at the time of check-in.
                    </li>
                    <li>
                        According to government regulations, it is mandatory to present a valid Photo ID at check in by every person above the age of 18 staying at the hotel. A Driver's License, Voter's Card, Aadhar Card and Passport are all acceptable as identity proof. PLEASE NOTE PAN cards are not a valid ID. Without a valid photo ID with address, no guest will be allowed to check in.
                    </li>
                    <li>
                        The primary guest checking in to the hotel must be at least 18 years of age.
                    </li>
                    <li>
                        The inclusion of an extra bed with a booking is facilitated with a folding cot or a mattress.
                    </li>
                    <li>
                        A booking cannot be canceled on or after the check in date and time mentioned in the Hotel Confirmation Voucher.
                    </li>
                    <li>
                        The hotel reserves the right of admission. Accommodation can be denied to guests posing as a ' couple' if suitable proof of identification is not presented at check-in. OneFineRate will not be responsible for any check-in denied by the hotel due to the aforesaid reason.
                    </li>
                    <li>
                        The hotel reserves the right of admission for local residents. Accommodation can be denied to guests residing in the same city. OneFineRate will not be responsible for any check-in denied by the hotel due to the aforesaid reason.
                    </li>
                    <li>
                        For any update to a booking, cancellation/modification charges are applicable as per hotel policy
                    </li>
                    <li>
                        All distances (Airport/Station etc.) are approximate and actual driving distances may vary based on the route taken.
                    </li>
                    <li>
                        Hotels may charge a mandatory meal surcharge on festive periods e.g. Christmas, New Year's Eve etc.  All additional charges (including mandatory meal surcharges) need to be cleared directly at the hotel.
                    </li>
                </ul>
            </div>
        </div>
    }


    <div class="container" id="fill">
        <div class="form-inline">
            <div class="form-group">
                <input type="checkbox" class="checkbox" id="chkAgree">
                <label for="chkAgree" style="cursor:pointer">
                    I have read, accepted and agree to OneFineRate's
                    <a class="showpointer" href="#" onclick="Opentc();">Terms and Conditions</a>
                    <a class="showpointer" href="#" onclick="OpenPP();">and Privacy Policy.</a>
                    @*and<a class="showpointer" href="#" onclick="OpenHP();">Hotel Policy</a>*@
                </label>
            </div>
        </div>
    </div>
    <!-- Terms and conditions pop up -->
    <div id="divTC" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Terms and Conditions</h4>
                </div>
                <div class="modal-body">
                    <p>This page states the Terms and Conditions under which you (Visitor) may visit this web site. Please read this page carefully. If you do not accept the Terms and Conditions stated here, we would request you to exit this site. FPHL or any of its business divisions and / or its subsidiaries, associate companies or subsidiaries to subsidiaries or such other investment companies (in India or abroad) reserve their respective rights to revise these Terms and Conditions at any time by updating this posting. You should visit this page periodically to re-appraise yourself of the Terms and Conditions, because they are binding on all users of this web site.</p>
                </div>

            </div>
        </div>
    </div>

    <!-- Privacy Policy pop up -->
    <div id="divprivacupolicy" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Privacy Policy</h4>
                </div>
                <div class="modal-body">
                    <p>Our policy outlines the type of personal information we collect and receive, the circumstances in which we collect or receive personal information, the policies and procedures we have established outlining its use and storage, and for sharing certain types of personal information in certain limited circumstances, the procedures you should follow if you have any questions or requests in respect of your personal information or our policies and procedures and the person to whom such questions or requests should be directed, and the means by which to communicate with that person.</p>
                </div>

            </div>
        </div>
    </div>
    .<!-- Hotel policy pop up -->
    <div id="divHotelPolicy" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Hotel Policy</h4>
                </div>
                <div class="modal-body">
                    <p>Reservation must be amended/cancelled 72 hours prior to the planned date of arrival. Reservations cancelled within 72 hours of the arrival date will incur a cancellation charge of one night. Peak Season cancellation must be done at least 7 days prior to arrival date to qualify for no cancellation charge. For group of 5 rooms or more confirmation for the reservation would only be given on the basis of a valid credit card. In case of a no-show or cancellation/amendment of the conference/group (in part or full), within 15 days or less from the date of check-in, a retention charge will be levied. In addition, should any participants check-out early, retention will be charged for those nights booked, now being released due to the early check-out.</p>
                </div>

            </div>
        </div>
    </div>
    <!-- Taxes pop up -->

    @{
        if (User.Identity.IsAuthenticated || ViewBag.type == "G")
        {
            var countryCodeList = OneFineRateBLL.BL_Country.GetAllCountryPhoneCodes();
            Model.CountryCodePhoneList = countryCodeList;

            @Html.Partial("pUserInformation", Model)
        }
        else
        {
            <div class="container">
                <div class="col-md-12 center margintop10">
                    <button type="button" id="btnRegisteredUserLogin" name="buttonType" value="login" disabled="" class="btn btn-inactive  btn-lg ">Log In</button>
                    <button type="button" id="btnGuestUserLogin" disabled="" name="buttonType" value="guest" class="btn btn-inactive  btn-lg ">Continue as Guest</button>
                </div>
            </div>
        }
    }

    <div class="marginbottom10">&nbsp;</div>

    <div id="RoomDetails" class="modal fade" role="dialog">

    </div>
</div>


@System.Web.Optimization.Scripts.Render("~/bundles/ajaxpostform")
<link href="~/Content/horizontalSlider.css" rel="stylesheet" />

<script src="~/Scripts/horizontalSlider.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover();

        var popOverSettings = {
            placement: 'bottom',
            container: 'body',
            html: true,
            selector: '[rel="popover"]',
            content: function () {

            }
        }

        $('body').popover(popOverSettings);
    });

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    });


</script>

<script type="text/javascript">

    function OpenHP() {
        $('#divHotelPolicy').modal({
            show: 'true'
        });
    }
    function Opentc() {

        $('#divTC').modal({
            show: 'true'
        });
    }
    function OpenPP() {
        $('#divprivacupolicy').modal({
            show: 'true'
        });
    }
    function OpenTaxes() {
        $('#divTaxes').modal({
            show: 'true'
        });
    }
    $(function () {
        $('#chkAgree').click(function () {
            if ($(this).is(':checked')) {
                $('#btnRegisteredUserLogin').removeAttr('disabled');
                $('#btnGuestUserLogin').removeAttr('disabled');                
            } else {
                $('#btnRegisteredUserLogin').attr('disabled', 'disabled');
                $('#btnGuestUserLogin').attr('disabled', 'disabled');
            }
        });
    });


    function GetResult(data) {

        debugger;

        if (data.st == '1') {

            $('#hdnPromoCodeApplied').val('true');

            toastr.success(data.msg);

            if (data.rtype == 1) {
                var myval = '@Model.Symbol';
                var amt = parseFloat(data.amt);
                var discount = parseFloat(data.disc);
                var grandtotal = ReplaceNumberWithCommas(amt.toFixed(2));
                //  grandtotal = grandtotal.toFixed(2);
                myval += grandtotal;
                $('#hdnPromoValue').val(discount);
                $('#hdnPromoValueDesc').val(data.discdesc);
                $('#spTotalAmt').html(myval);
                $('#sppromo').html(' @Model.Symbol ' + ReplaceNumberWithCommas(discount) + ' discount has been applied.');
                $('#hdnPromoCodeType').val('Value');
            }
            else {
                $('#sppromo').html(data.disc + ' free has been applied.');
                var amt = parseFloat(data.amt);
                var grandtotal = amt.toFixed(2);
                $('#spTotalAmt').val(grandtotal);
                $('#hdnPromoCodeType').val('Amenity');
                $('#hdnAmenityName').val(data.disc);
            }
        }
        else {
            
            $('#hdnPromoCodeApplied').val('false');
            
            $('#hdnPromoValue').val('0');
            $('#hdnPromoValueDesc').val('');
            toastr.error(data.msg);
            $('#sppromo').html('');
            var myval = '@Model.Symbol ';
            myval += ReplaceNumberWithCommas(parseFloat(data.amt).toFixed(2));
            $('#spTotalAmt').html(myval);
            $('#hdnPromoCodeType').val('');
            $('#hdnAmenityName').val('');
        }
    }
    function ReplaceNumberWithCommas(yourNumber) {
        //Seperates the components of the number
        yourNumber = Math.round(yourNumber);
        var n = yourNumber.toString().split(".");
        //Comma-fies the first part
        n[0] = n[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        //Combines the two sections
        return n.join(".");
    }
    function OpenPopUp(propid, roomid) {

        var url = '@Url.Action("RoomInfo", "OfferReview")?propid=' + propid + '&roomid=' + roomid;
        //startSpinning();
        $("#RoomDetails").load(url, function () {
            // stopSpinning();
        });
        $('#RoomDetails').modal({
            show: 'true'
        });
    }

</script>

<script type="text/javascript">
    var returnUrl = '';
    $(function () {

        if ('@Model.sActionType' == 'N') {  //Its for Negotiation
            $('#hdnNegoGrandTAmt').val('');
        }


        $('#anCalculate').click(function (e) {

            e.preventDefault();
            var NegotiationAmount = $("#txtNegotiaionAmount").val();

            var isvalid = !isNaN(parseFloat($('#txtNegotiaionAmount').val())) && isFinite($('#txtNegotiaionAmount').val());
            if (!isvalid) {
                toastr.error('Please enter valid negotiation amount.');
                return false;
            }
            //debugger;
            var TotalAmt = '@Model.dSummaryTotal';
            var amt = parseFloat(NegotiationAmount);
            var negamt = '@Model.dNegotiationAmtMax';


            if (amt >= negamt && amt < TotalAmt) {
            }
            else {
                toastr.info('Please enter amount greater than equals to @Model.sNegotiationAmtMax and less than  @Model.sSummaryTotal')
                return false;
            }

            var values = { NegotiationAmount: amt, TotalAmt: TotalAmt };

            //  startSpinning();
            setTimeout(function () {
                var Data = AjaxCallWithDataMVC("@Url.Action("CalculateGrandTotal")", values);

                if (Data != null) {
                    //   stopSpinning();
                    if (Data.st == '1') {

                        $('#spgrantotal').show();
                        $('#spgrantotal').html('@Model.Symbol' + ' ' + Data.sGrandTotal);
                        $('#spgrantotal_span').show();
                        $('#hdnNegoGrandTAmt').val(Data.dGrandTotal);
                        $('#hdnNewTaxes').val(Data.dTaxAmt);
                        return false;
                    }
                    else if (Data.st == '0') {
                        $('#spgrantotal').html('');
                        $('#hdnNegoGrandTAmt').val('');
                        $('#spgrantotal_span').hide();
                        $('#hdnNewTaxes').val(0);
                        toastr.error(Data.msg);
                        return false;
                    }
                }
            }, 100);

        });



        $("#btnGuestUserLogin").click(function () {
            debugger;
            if ('@Model.sActionType' == 'N') {  //Its for Negotiation
                var NegotiationAmount = $("#txtNegotiaionAmount").val();

                var isvalid = !isNaN(parseFloat($('#txtNegotiaionAmount').val())) && isFinite($('#txtNegotiaionAmount').val());
                if (!isvalid) {
                    toastr.error('Please enter valid negotiation amount.');
                    $("#txtNegotiaionAmount").focus();
                    return false;
                }
                var amt = parseFloat(NegotiationAmount);
                var negamt = '@Model.dNegotiationAmtMax';
                var TotalAmt = '@Model.dSummaryTotal';

                if (amt >= negamt && amt < TotalAmt) {
                    window.location.href = "/Negotiation?type=G&info=" + NegotiationAmount + "#fill";
                }
                else {
                    toastr.info('Please enter amount greater than equals to @Model.sNegotiationAmtMax and less than  @Model.sSummaryTotal')
                    $("#txtNegotiaionAmount").focus();
                }
            }
            else {
                window.location.href = "/Negotiation?type=G#fill";   //Its for Buy Option
            }
        });



        $('#txtNegotiaionAmount').blur(function () {
            var isvalid = !isNaN(parseFloat($('#txtNegotiaionAmount').val())) && isFinite($('#txtNegotiaionAmount').val());
            if (!isvalid) {
                $('#spgrantotal').html('');
                $('#hdnNegoGrandTAmt').val('');
                $('#spgrantotal_span').hide();
                return false;
            }

            var TotalAmt = '@Model.dSummaryTotal';
            var amt = parseFloat($('#txtNegotiaionAmount').val());
            var negamt = '@Model.dNegotiationAmtMax';


            if (amt >= negamt && amt < TotalAmt) {
            }
            else {
                toastr.info('Please enter amount greater than equals to @Model.sNegotiationAmtMax and less than  @Model.sSummaryTotal')
                $('#spgrantotal').html('');
                $('#hdnNegoGrandTAmt').val('');
                $('#spgrantotal_span').hide();
                $('#hdnNewTaxes').val(0);
                return false;
            }
        });
    });

    $(function () {
        $("#btnRegisteredUserLogin").click(function () {

            debugger;

            if ('@Model.sActionType' == 'N') {  //Its for Negotiation
                var NegotiationAmount = $("#txtNegotiaionAmount").val();
                var isvalid = !isNaN(parseFloat($('#txtNegotiaionAmount').val())) && isFinite($('#txtNegotiaionAmount').val());
                if (!isvalid) {
                    toastr.error('Please enter valid negotiation amount.');
                    $("#txtNegotiaionAmount").focus();
                    return false;
                }
                var amt = parseFloat(NegotiationAmount);
                var negamt = '@Model.dNegotiationAmtMax';
                var TotalAmt = '@Model.dSummaryTotal';
                if (amt >= negamt && amt < TotalAmt) {
                    //returnUrl = "/Negotiation?type=L&info=" + NegotiationAmount;


                    $('.nav-tabs a[href="#signin"]').tab('show');

                    CheckPopupAvailibility(function () {

                        $('#hdnExternalLoginReturnUrl').val("/Negotiation?type=L&info=" + NegotiationAmount + "#fill")
                        $('#hdnLoginReturnUrl').val("/Negotiation?type=L&info=" + NegotiationAmount + "#fill")
                        $('#homePageLoginRegisterLink').click();

                    });

                    //LoginPopUp();
                }
                else {
                    toastr.info('Please enter amount greater than equals to @Model.sNegotiationAmtMax and less than @Model.sSummaryTotal')
                    $("#txtNegotiaionAmount").focus();
                }
            }
            else //Its for Buy Option
            {


                var codeValue = $('#txtPromoCode').val();
                var promoCodeApplied = $('#hdnPromoCodeApplied').val();

                localStorage.setItem('hdnPromoCodeApplied', promoCodeApplied);
                localStorage.setItem('hdnPromoCode', codeValue);
                localStorage.setItem('hdnChkAgree', $('#chkAgree').prop('checked'));

                //returnUrl = "/Negotiation?type=L";
                //LoginPopUp();
                $('#hdnExternalLoginReturnUrl').val("/Negotiation?type=L#fill");
                $('#hdnLoginReturnUrl').val("/Negotiation?type=L#fill")
                $('.nav-tabs a[href="#signin"]').tab('show');
                $('#homePageLoginRegisterLink').click();
            }
        });


        function LoginPopUp() {

            $("#genericModalPopupContainer").load('@Url.Action("GetLoginRegisterForm", "Account")', function () {

                $('#genericModalPopupDiv').modal('show');
                $.validator.unobtrusive.parse($('#registerForm'));
                $.validator.unobtrusive.parse($('#loginForm'));
            });

            $('#genericModalPopupDiv').delegate('#loginForm', 'submit', function (event) {

                event.preventDefault();
                var currentForm = $(this);
                if (currentForm.valid()) {

                    var frmData = currentForm.serialize();
                    $.post($(this).attr('action'), frmData).done(function (data) {

                        if (data.status == false && data.errors) {

                            $('#loginPassword').val('').focus();
                            $('#loginErrors').html(data.errors);
                        }
                        else if (data.status == true && data.returnUrl) {

                            window.location.href = data.returnUrl
                        }
                        else if (data.status == true) {

                            window.location.href = returnUrl;
                        }

                    }).fail(function (data) {

                        $('#loginErrors').html('An error occured !');

                    }).always(function () {

                    });
                }
            });



            $('#loginForm').submit(function (event) {
                event.preventDefault();
                $.ajax({
                    data: $(this).serialize(),
                    url: $(this).attr('action'),
                    success: function (data) {

                        alert('inside Success')
                        if (data.status == true) {
                            location.href = returnUrl;
                        }
                        else if (data.status == false) {
                            alert('error')
                        }
                    }
                }).always(function () {
                    //  stopSpinning();
                });
            });
        }

    });

</script>


@{ var amount = ViewBag.NegotiationAmount; }
@if (amount != null && amount != 0)
{
    <script>
        setTimeout(function () {

            $('#anCalculate').click();

        }, 100);

    </script>
}

<script>

        $(function () {

            debugger;

            var valueForPromo = localStorage.getItem('hdnPromoCodeApplied');

            var sPromoCode = localStorage.getItem('hdnPromoCode');

            var bIsAgree = localStorage.getItem('hdnChkAgree');

            if (valueForPromo == 'true') {

                $('#txtPromoCode').val(sPromoCode);
                $('#btnApplyPromo').click();

                if (bIsAgree == 'true') {
                    $('#chkAgree').prop('checked', true);
                    localStorage.removeItem('hdnChkAgree');
                }

                localStorage.removeItem('hdnPromoCode');
                localStorage.removeItem('hdnPromoCodeApplied');
            }
        });
</script>